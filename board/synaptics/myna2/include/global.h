/* SPDX-License-Identifier: GPL-2.0+ */
/*
 * Copyright (C) 2016~2023 Synaptics Incorporated. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 or
 * later as published by the Free Software Foundation.
 *
 * INFORMATION CONTAINED IN THIS DOCUMENT IS PROVIDED "AS-IS," AND
 * SYNAPTICS EXPRESSLY DISCLAIMS ALL EXPRESS AND IMPLIED WARRANTIES,
 * INCLUDING ANY IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE, AND ANY WARRANTIES OF NON-INFRINGEMENT OF ANY
 * INTELLECTUAL PROPERTY RIGHTS. IN NO EVENT SHALL SYNAPTICS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, PUNITIVE, OR
 * CONSEQUENTIAL DAMAGES ARISING OUT OF OR IN CONNECTION WITH THE USE
 * OF THE INFORMATION CONTAINED IN THIS DOCUMENT, HOWEVER CAUSED AND
 * BASED ON ANY THEORY OF LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, AND EVEN IF SYNAPTICS WAS
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IF A TRIBUNAL OF
 * COMPETENT JURISDICTION DOES NOT PERMIT THE DISCLAIMER OF DIRECT
 * DAMAGES OR ANY OTHER DAMAGES, SYNAPTICS' TOTAL CUMULATIVE LIABILITY
 * TO ANY PARTY SHALL NOT EXCEED ONE HUNDRED U.S. DOLLARS.
 */

#ifndef global_h
#define global_h () {}

#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ () {}

    #define _bSETMASK_(b)                                      ((b) < 32 ? (1 << ((b) & 31)) : 0)
    #define _NSETMASK_(msb, lsb)                                (_bSETMASK_((msb) + 1) - _bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb, lsb)                                (~_NSETMASK_(msb, lsb))
    #define _BFGET_(r, msb, lsb)                                 (_NSETMASK_((msb) - (lsb), 0) & ((r) >> (lsb)))
    #define _BFSET_(r, msb, lsb, v)                               do { (r) &= _NCLRMASK_(msb, lsb); (r) |= _NSETMASK_(msb, lsb) & ((v) << (lsb)); } while (0)

#endif

//////
///
/// $INTERFACE abipll                  biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrlA                (P-)
///               ###
///               * PLL Control
///               ###
///               %unsigned 1  RESET                     0x0
///                                    ###
///                                    * PLL Internal Reset Active High
///                                    ###
///               %unsigned 1  BYPASS                    0x0
///                                    ###
///                                    * PLL Bypass Enable Active High
///                                    ###
///               %unsigned 1  NEWDIV                    0x0
///                                    ###
///                                    * Fractional Divide Input Control
///                                    ###
///               %unsigned 3  RANGE                     0x2
///                                    ###
///                                    * PLL Filter Range
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00004 ctrlB                (P-)
///               %unsigned 4  SSMF                      0x0
///                                    ###
///                                    * Spread Spectrum Modulation Frequency
///                                    ###
///               %unsigned 3  SSMD                      0x0
///                                    ###
///                                    * Spread Spectrum Modulation Depth
///                                    ###
///               %unsigned 1  SSE_RSVD                  0x0
///                                    ###
///                                    * Spread Spectrum Reserve Bit
///                                    ###
///               %unsigned 1  SSE                       0x0
///                                    ###
///                                    * Enables Spread Spectrum Mode Active High
///                                    ###
///               %unsigned 1  SSDS                      0x0
///                                    ###
///                                    * Spread Spectrum Down Spread Center Spread
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00008 ctrlC                (P-)
///               %unsigned 6  DIVR                      0x1
///                                    ###
///                                    * Reference Divider
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x0000C ctrlD                (P-)
///               %unsigned 9  DIVFI                     0x1F
///                                    ###
///                                    * Integer Divider
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x00010 ctrlE                (P-)
///               %unsigned 24 DIVFF                     0x0
///                                    ###
///                                    * Fractional Divider Control
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00014 ctrlF                (P-)
///               %unsigned 5  DIVQ                      0x1
///                                    ###
///                                    * Output Divider Control for PLLOUT
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00018 ctrlG                (P-)
///               %unsigned 3  DIVQF                     0x3
///                                    ###
///                                    * Output Divider Control for PLLOUTF
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x0001C status               (R-)
///               ###
///               * PLL status register
///               ###
///               %unsigned 1  LOCK
///                                    ###
///                                    * Output. Lock detection
///                                    ###
///               %unsigned 1  DIVACK
///                                    ###
///                                    * Fractional Divide Hand-shake signal
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      32B, bits:      65b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_abipll
#define h_abipll () {}

    #define     RA_abipll_ctrlA                                0x0000

    #define     BA_abipll_ctrlA_RESET                          0x0000
    #define     B16abipll_ctrlA_RESET                          0x0000
    #define   LSb32abipll_ctrlA_RESET                             0
    #define   LSb16abipll_ctrlA_RESET                             0
    #define       babipll_ctrlA_RESET                          1
    #define   MSK32abipll_ctrlA_RESET                             0x00000001

    #define     BA_abipll_ctrlA_BYPASS                         0x0000
    #define     B16abipll_ctrlA_BYPASS                         0x0000
    #define   LSb32abipll_ctrlA_BYPASS                            1
    #define   LSb16abipll_ctrlA_BYPASS                            1
    #define       babipll_ctrlA_BYPASS                         1
    #define   MSK32abipll_ctrlA_BYPASS                            0x00000002

    #define     BA_abipll_ctrlA_NEWDIV                         0x0000
    #define     B16abipll_ctrlA_NEWDIV                         0x0000
    #define   LSb32abipll_ctrlA_NEWDIV                            2
    #define   LSb16abipll_ctrlA_NEWDIV                            2
    #define       babipll_ctrlA_NEWDIV                         1
    #define   MSK32abipll_ctrlA_NEWDIV                            0x00000004

    #define     BA_abipll_ctrlA_RANGE                          0x0000
    #define     B16abipll_ctrlA_RANGE                          0x0000
    #define   LSb32abipll_ctrlA_RANGE                             3
    #define   LSb16abipll_ctrlA_RANGE                             3
    #define       babipll_ctrlA_RANGE                          3
    #define   MSK32abipll_ctrlA_RANGE                             0x00000038
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlB                                0x0004

    #define     BA_abipll_ctrlB_SSMF                           0x0004
    #define     B16abipll_ctrlB_SSMF                           0x0004
    #define   LSb32abipll_ctrlB_SSMF                              0
    #define   LSb16abipll_ctrlB_SSMF                              0
    #define       babipll_ctrlB_SSMF                           4
    #define   MSK32abipll_ctrlB_SSMF                              0x0000000F

    #define     BA_abipll_ctrlB_SSMD                           0x0004
    #define     B16abipll_ctrlB_SSMD                           0x0004
    #define   LSb32abipll_ctrlB_SSMD                              4
    #define   LSb16abipll_ctrlB_SSMD                              4
    #define       babipll_ctrlB_SSMD                           3
    #define   MSK32abipll_ctrlB_SSMD                              0x00000070

    #define     BA_abipll_ctrlB_SSE_RSVD                       0x0004
    #define     B16abipll_ctrlB_SSE_RSVD                       0x0004
    #define   LSb32abipll_ctrlB_SSE_RSVD                          7
    #define   LSb16abipll_ctrlB_SSE_RSVD                          7
    #define       babipll_ctrlB_SSE_RSVD                       1
    #define   MSK32abipll_ctrlB_SSE_RSVD                          0x00000080

    #define     BA_abipll_ctrlB_SSE                            0x0005
    #define     B16abipll_ctrlB_SSE                            0x0004
    #define   LSb32abipll_ctrlB_SSE                               8
    #define   LSb16abipll_ctrlB_SSE                               8
    #define       babipll_ctrlB_SSE                            1
    #define   MSK32abipll_ctrlB_SSE                               0x00000100

    #define     BA_abipll_ctrlB_SSDS                           0x0005
    #define     B16abipll_ctrlB_SSDS                           0x0004
    #define   LSb32abipll_ctrlB_SSDS                              9
    #define   LSb16abipll_ctrlB_SSDS                              9
    #define       babipll_ctrlB_SSDS                           1
    #define   MSK32abipll_ctrlB_SSDS                              0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlC                                0x0008

    #define     BA_abipll_ctrlC_DIVR                           0x0008
    #define     B16abipll_ctrlC_DIVR                           0x0008
    #define   LSb32abipll_ctrlC_DIVR                              0
    #define   LSb16abipll_ctrlC_DIVR                              0
    #define       babipll_ctrlC_DIVR                           6
    #define   MSK32abipll_ctrlC_DIVR                              0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlD                                0x000C

    #define     BA_abipll_ctrlD_DIVFI                          0x000C
    #define     B16abipll_ctrlD_DIVFI                          0x000C
    #define   LSb32abipll_ctrlD_DIVFI                             0
    #define   LSb16abipll_ctrlD_DIVFI                             0
    #define       babipll_ctrlD_DIVFI                          9
    #define   MSK32abipll_ctrlD_DIVFI                             0x000001FF
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlE                                0x0010

    #define     BA_abipll_ctrlE_DIVFF                          0x0010
    #define     B16abipll_ctrlE_DIVFF                          0x0010
    #define   LSb32abipll_ctrlE_DIVFF                             0
    #define   LSb16abipll_ctrlE_DIVFF                             0
    #define       babipll_ctrlE_DIVFF                          24
    #define   MSK32abipll_ctrlE_DIVFF                             0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlF                                0x0014

    #define     BA_abipll_ctrlF_DIVQ                           0x0014
    #define     B16abipll_ctrlF_DIVQ                           0x0014
    #define   LSb32abipll_ctrlF_DIVQ                              0
    #define   LSb16abipll_ctrlF_DIVQ                              0
    #define       babipll_ctrlF_DIVQ                           5
    #define   MSK32abipll_ctrlF_DIVQ                              0x0000001F
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlG                                0x0018

    #define     BA_abipll_ctrlG_DIVQF                          0x0018
    #define     B16abipll_ctrlG_DIVQF                          0x0018
    #define   LSb32abipll_ctrlG_DIVQF                             0
    #define   LSb16abipll_ctrlG_DIVQF                             0
    #define       babipll_ctrlG_DIVQF                          3
    #define   MSK32abipll_ctrlG_DIVQF                             0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_status                               0x001C

    #define     BA_abipll_status_LOCK                          0x001C
    #define     B16abipll_status_LOCK                          0x001C
    #define   LSb32abipll_status_LOCK                             0
    #define   LSb16abipll_status_LOCK                             0
    #define       babipll_status_LOCK                          1
    #define   MSK32abipll_status_LOCK                             0x00000001

    #define     BA_abipll_status_DIVACK                        0x001C
    #define     B16abipll_status_DIVACK                        0x001C
    #define   LSb32abipll_status_DIVACK                           1
    #define   LSb16abipll_status_DIVACK                           1
    #define       babipll_status_DIVACK                        1
    #define   MSK32abipll_status_DIVACK                           0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_abipll {
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlA_RESET(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32abipll_ctrlA_RESET(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16abipll_ctrlA_RESET(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16abipll_ctrlA_RESET(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32abipll_ctrlA_BYPASS(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32abipll_ctrlA_BYPASS(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16abipll_ctrlA_BYPASS(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16abipll_ctrlA_BYPASS(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32abipll_ctrlA_NEWDIV(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32abipll_ctrlA_NEWDIV(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16abipll_ctrlA_NEWDIV(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16abipll_ctrlA_NEWDIV(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32abipll_ctrlA_RANGE(r32)                     _BFGET_(r32, 5, 3)
    #define   SET32abipll_ctrlA_RANGE(r32, v)                   _BFSET_(r32, 5, 3, v)
    #define   GET16abipll_ctrlA_RANGE(r16)                     _BFGET_(r16, 5, 3)
    #define   SET16abipll_ctrlA_RANGE(r16, v)                   _BFSET_(r16, 5, 3, v)

    #define     w32abipll_ctrlA                                {\
	    UNSG32 uctrlA_RESET                                :  1;\
	    UNSG32 uctrlA_BYPASS                               :  1;\
	    UNSG32 uctrlA_NEWDIV                               :  1;\
	    UNSG32 uctrlA_RANGE                                :  3;\
	    UNSG32 RSVDx0_b6                                   : 26;\
	}
    union { UNSG32 u32abipll_ctrlA;
	    struct w32abipll_ctrlA;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlB_SSMF(r32)                      _BFGET_(r32, 3, 0)
    #define   SET32abipll_ctrlB_SSMF(r32, v)                    _BFSET_(r32, 3, 0, v)
    #define   GET16abipll_ctrlB_SSMF(r16)                      _BFGET_(r16, 3, 0)
    #define   SET16abipll_ctrlB_SSMF(r16, v)                    _BFSET_(r16, 3, 0, v)

    #define   GET32abipll_ctrlB_SSMD(r32)                      _BFGET_(r32, 6, 4)
    #define   SET32abipll_ctrlB_SSMD(r32, v)                    _BFSET_(r32, 6, 4, v)
    #define   GET16abipll_ctrlB_SSMD(r16)                      _BFGET_(r16, 6, 4)
    #define   SET16abipll_ctrlB_SSMD(r16, v)                    _BFSET_(r16, 6, 4, v)

    #define   GET32abipll_ctrlB_SSE_RSVD(r32)                  _BFGET_(r32, 7, 7)
    #define   SET32abipll_ctrlB_SSE_RSVD(r32, v)                _BFSET_(r32, 7, 7, v)
    #define   GET16abipll_ctrlB_SSE_RSVD(r16)                  _BFGET_(r16, 7, 7)
    #define   SET16abipll_ctrlB_SSE_RSVD(r16, v)                _BFSET_(r16, 7, 7, v)

    #define   GET32abipll_ctrlB_SSE(r32)                       _BFGET_(r32, 8, 8)
    #define   SET32abipll_ctrlB_SSE(r32, v)                     _BFSET_(r32, 8, 8, v)
    #define   GET16abipll_ctrlB_SSE(r16)                       _BFGET_(r16, 8, 8)
    #define   SET16abipll_ctrlB_SSE(r16, v)                     _BFSET_(r16, 8, 8, v)

    #define   GET32abipll_ctrlB_SSDS(r32)                      _BFGET_(r32, 9, 9)
    #define   SET32abipll_ctrlB_SSDS(r32, v)                    _BFSET_(r32, 9, 9, v)
    #define   GET16abipll_ctrlB_SSDS(r16)                      _BFGET_(r16, 9, 9)
    #define   SET16abipll_ctrlB_SSDS(r16, v)                    _BFSET_(r16, 9, 9, v)

    #define     w32abipll_ctrlB                                {\
	    UNSG32 uctrlB_SSMF                                 :  4;\
	    UNSG32 uctrlB_SSMD                                 :  3;\
	    UNSG32 uctrlB_SSE_RSVD                             :  1;\
	    UNSG32 uctrlB_SSE                                  :  1;\
	    UNSG32 uctrlB_SSDS                                 :  1;\
	    UNSG32 RSVDx4_b10                                  : 22;\
	}
    union { UNSG32 u32abipll_ctrlB;
	    struct w32abipll_ctrlB;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlC_DIVR(r32)                      _BFGET_(r32, 5, 0)
    #define   SET32abipll_ctrlC_DIVR(r32, v)                    _BFSET_(r32, 5, 0, v)
    #define   GET16abipll_ctrlC_DIVR(r16)                      _BFGET_(r16, 5, 0)
    #define   SET16abipll_ctrlC_DIVR(r16, v)                    _BFSET_(r16, 5, 0, v)

    #define     w32abipll_ctrlC                                {\
	    UNSG32 uctrlC_DIVR                                 :  6;\
	    UNSG32 RSVDx8_b6                                   : 26;\
	}
    union { UNSG32 u32abipll_ctrlC;
	    struct w32abipll_ctrlC;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlD_DIVFI(r32)                     _BFGET_(r32, 8, 0)
    #define   SET32abipll_ctrlD_DIVFI(r32, v)                   _BFSET_(r32, 8, 0, v)
    #define   GET16abipll_ctrlD_DIVFI(r16)                     _BFGET_(r16, 8, 0)
    #define   SET16abipll_ctrlD_DIVFI(r16, v)                   _BFSET_(r16, 8, 0, v)

    #define     w32abipll_ctrlD                                {\
	    UNSG32 uctrlD_DIVFI                                :  9;\
	    UNSG32 RSVDxC_b9                                   : 23;\
	}
    union { UNSG32 u32abipll_ctrlD;
	    struct w32abipll_ctrlD;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlE_DIVFF(r32)                     _BFGET_(r32, 23, 0)
    #define   SET32abipll_ctrlE_DIVFF(r32, v)                   _BFSET_(r32, 23, 0, v)

    #define     w32abipll_ctrlE                                {\
	    UNSG32 uctrlE_DIVFF                                : 24;\
	    UNSG32 RSVDx10_b24                                 :  8;\
	}
    union { UNSG32 u32abipll_ctrlE;
	    struct w32abipll_ctrlE;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlF_DIVQ(r32)                      _BFGET_(r32, 4, 0)
    #define   SET32abipll_ctrlF_DIVQ(r32, v)                    _BFSET_(r32, 4, 0, v)
    #define   GET16abipll_ctrlF_DIVQ(r16)                      _BFGET_(r16, 4, 0)
    #define   SET16abipll_ctrlF_DIVQ(r16, v)                    _BFSET_(r16, 4, 0, v)

    #define     w32abipll_ctrlF                                {\
	    UNSG32 uctrlF_DIVQ                                 :  5;\
	    UNSG32 RSVDx14_b5                                  : 27;\
	}
    union { UNSG32 u32abipll_ctrlF;
	    struct w32abipll_ctrlF;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlG_DIVQF(r32)                     _BFGET_(r32, 2, 0)
    #define   SET32abipll_ctrlG_DIVQF(r32, v)                   _BFSET_(r32, 2, 0, v)
    #define   GET16abipll_ctrlG_DIVQF(r16)                     _BFGET_(r16, 2, 0)
    #define   SET16abipll_ctrlG_DIVQF(r16, v)                   _BFSET_(r16, 2, 0, v)

    #define     w32abipll_ctrlG                                {\
	    UNSG32 uctrlG_DIVQF                                :  3;\
	    UNSG32 RSVDx18_b3                                  : 29;\
	}
    union { UNSG32 u32abipll_ctrlG;
	    struct w32abipll_ctrlG;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_status_LOCK(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32abipll_status_LOCK(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16abipll_status_LOCK(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16abipll_status_LOCK(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32abipll_status_DIVACK(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32abipll_status_DIVACK(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16abipll_status_DIVACK(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16abipll_status_DIVACK(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define     w32abipll_status                               {\
	    UNSG32 ustatus_LOCK                                :  1;\
	    UNSG32 ustatus_DIVACK                              :  1;\
	    UNSG32 RSVDx1C_b2                                  : 30;\
	}
    union { UNSG32 u32abipll_status;
	    struct w32abipll_status;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_abipll;

    typedef union  T32abipll_ctrlA {
		UNSG32 u32;
	    struct w32abipll_ctrlA;
		 } T32abipll_ctrlA;
    typedef union  T32abipll_ctrlB {
		UNSG32 u32;
	    struct w32abipll_ctrlB;
		 } T32abipll_ctrlB;
    typedef union  T32abipll_ctrlC {
		UNSG32 u32;
	    struct w32abipll_ctrlC;
		 } T32abipll_ctrlC;
    typedef union  T32abipll_ctrlD {
		UNSG32 u32;
	    struct w32abipll_ctrlD;
		 } T32abipll_ctrlD;
    typedef union  T32abipll_ctrlE {
		UNSG32 u32;
	    struct w32abipll_ctrlE;
		 } T32abipll_ctrlE;
    typedef union  T32abipll_ctrlF {
		UNSG32 u32;
	    struct w32abipll_ctrlF;
		 } T32abipll_ctrlF;
    typedef union  T32abipll_ctrlG {
		UNSG32 u32;
	    struct w32abipll_ctrlG;
		 } T32abipll_ctrlG;
    typedef union  T32abipll_status {
		UNSG32 u32;
	    struct w32abipll_status;
		 } T32abipll_status;
    ///////////////////////////////////////////////////////////

    typedef union  Tabipll_ctrlA {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlA;
		   };
		 } Tabipll_ctrlA;
    typedef union  Tabipll_ctrlB {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlB;
		   };
		 } Tabipll_ctrlB;
    typedef union  Tabipll_ctrlC {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlC;
		   };
		 } Tabipll_ctrlC;
    typedef union  Tabipll_ctrlD {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlD;
		   };
		 } Tabipll_ctrlD;
    typedef union  Tabipll_ctrlE {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlE;
		   };
		 } Tabipll_ctrlE;
    typedef union  Tabipll_ctrlF {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlF;
		   };
		 } Tabipll_ctrlF;
    typedef union  Tabipll_ctrlG {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_ctrlG;
		   };
		 } Tabipll_ctrlG;
    typedef union  Tabipll_status {
		UNSG32 u32[1];
	    struct {
	    struct w32abipll_status;
		   };
		 } Tabipll_status;

    ///////////////////////////////////////////////////////////
     SIGN32 abipll_drvrd(SIE_abipll *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 abipll_drvwr(SIE_abipll *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void abipll_reset(SIE_abipll *p);
     SIGN32 abipll_cmp(SIE_abipll *p, SIE_abipll *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define abipll_check(p, pie, pfx, hLOG) abipll_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define abipll_print(p,    pfx, hLOG) abipll_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: abipll
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE pwrOff                                   (4,4)
///     ###
///     * Register for the Power domain which is OFF by default
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Power Domain Control Register
///               ###
///               %unsigned 1  iso_eN                    0x0
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Isolation control bit. Active low
///                                                 * 0 : Isolation is enabled
///                                                 * 1 : Isolation is disabled (default)
///                                                 ###
///               %unsigned 2  pwrSwitchCtrl             0x0
///                                    : PWROFF                    0x0
///                                    : PWRON                     0x3
///                                                 ###
///                                                 * Power Switch control
///                                                 * Bit 1 : SLP1B
///                                                 * Bit 0 : SLP2B
///                                                 * SLP1B SLP2B
///                                                 * 0               X               Switch is turned off
///                                                 * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                                 * 1               1               PMOS switch is fully turned on to reduce Ron
///                                                 ###
///               %unsigned 1  pwrDomainRstN             0x0
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Power Domain Reset. Active low.
///                                                 * 0 : Reset the power domain
///                                                 * 1:   De-assert the reset for the power domain
///                                                 ###
///               %%        28         # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 2  pwrStatus
///                                    ###
///                                    * Power domain Status output from the power domain module
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:       6b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_pwrOff
#define h_pwrOff () {}

    #define     RA_pwrOff_ctrl                                 0x0000

    #define     BA_pwrOff_ctrl_iso_eN                          0x0000
    #define     B16pwrOff_ctrl_iso_eN                          0x0000
    #define   LSb32pwrOff_ctrl_iso_eN                             0
    #define   LSb16pwrOff_ctrl_iso_eN                             0
    #define       bpwrOff_ctrl_iso_eN                          1
    #define   MSK32pwrOff_ctrl_iso_eN                             0x00000001
    #define        pwrOff_ctrl_iso_eN_enable                                0x0
    #define        pwrOff_ctrl_iso_eN_disable                               0x1

    #define     BA_pwrOff_ctrl_pwrSwitchCtrl                   0x0000
    #define     B16pwrOff_ctrl_pwrSwitchCtrl                   0x0000
    #define   LSb32pwrOff_ctrl_pwrSwitchCtrl                      1
    #define   LSb16pwrOff_ctrl_pwrSwitchCtrl                      1
    #define       bpwrOff_ctrl_pwrSwitchCtrl                   2
    #define   MSK32pwrOff_ctrl_pwrSwitchCtrl                      0x00000006
    #define        pwrOff_ctrl_pwrSwitchCtrl_PWROFF                         0x0
    #define        pwrOff_ctrl_pwrSwitchCtrl_PWRON                          0x3

    #define     BA_pwrOff_ctrl_pwrDomainRstN                   0x0000
    #define     B16pwrOff_ctrl_pwrDomainRstN                   0x0000
    #define   LSb32pwrOff_ctrl_pwrDomainRstN                      3
    #define   LSb16pwrOff_ctrl_pwrDomainRstN                      3
    #define       bpwrOff_ctrl_pwrDomainRstN                   1
    #define   MSK32pwrOff_ctrl_pwrDomainRstN                      0x00000008
    #define        pwrOff_ctrl_pwrDomainRstN_enable                         0x0
    #define        pwrOff_ctrl_pwrDomainRstN_disable                        0x1
    ///////////////////////////////////////////////////////////
    #define     RA_pwrOff_status                               0x0004

    #define     BA_pwrOff_status_pwrStatus                     0x0004
    #define     B16pwrOff_status_pwrStatus                     0x0004
    #define   LSb32pwrOff_status_pwrStatus                        0
    #define   LSb16pwrOff_status_pwrStatus                        0
    #define       bpwrOff_status_pwrStatus                     2
    #define   MSK32pwrOff_status_pwrStatus                        0x00000003
    ///////////////////////////////////////////////////////////

    typedef struct SIE_pwrOff {
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOff_ctrl_iso_eN(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32pwrOff_ctrl_iso_eN(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16pwrOff_ctrl_iso_eN(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16pwrOff_ctrl_iso_eN(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32pwrOff_ctrl_pwrSwitchCtrl(r32)              _BFGET_(r32, 2, 1)
    #define   SET32pwrOff_ctrl_pwrSwitchCtrl(r32, v)            _BFSET_(r32, 2, 1, v)
    #define   GET16pwrOff_ctrl_pwrSwitchCtrl(r16)              _BFGET_(r16, 2, 1)
    #define   SET16pwrOff_ctrl_pwrSwitchCtrl(r16, v)            _BFSET_(r16, 2, 1, v)

    #define   GET32pwrOff_ctrl_pwrDomainRstN(r32)              _BFGET_(r32, 3, 3)
    #define   SET32pwrOff_ctrl_pwrDomainRstN(r32, v)            _BFSET_(r32, 3, 3, v)
    #define   GET16pwrOff_ctrl_pwrDomainRstN(r16)              _BFGET_(r16, 3, 3)
    #define   SET16pwrOff_ctrl_pwrDomainRstN(r16, v)            _BFSET_(r16, 3, 3, v)

    #define     w32pwrOff_ctrl                                 {\
	    UNSG32 uctrl_iso_eN                                :  1;\
	    UNSG32 uctrl_pwrSwitchCtrl                         :  2;\
	    UNSG32 uctrl_pwrDomainRstN                         :  1;\
	    UNSG32 RSVDx0_b4                                   : 28;\
	}
    union { UNSG32 u32pwrOff_ctrl;
	    struct w32pwrOff_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOff_status_pwrStatus(r32)                _BFGET_(r32, 1, 0)
    #define   SET32pwrOff_status_pwrStatus(r32, v)              _BFSET_(r32, 1, 0, v)
    #define   GET16pwrOff_status_pwrStatus(r16)                _BFGET_(r16, 1, 0)
    #define   SET16pwrOff_status_pwrStatus(r16, v)              _BFSET_(r16, 1, 0, v)

    #define     w32pwrOff_status                               {\
	    UNSG32 ustatus_pwrStatus                           :  2;\
	    UNSG32 RSVDx4_b2                                   : 30;\
	}
    union { UNSG32 u32pwrOff_status;
	    struct w32pwrOff_status;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_pwrOff;

    typedef union  T32pwrOff_ctrl {
		UNSG32 u32;
	    struct w32pwrOff_ctrl;
		 } T32pwrOff_ctrl;
    typedef union  T32pwrOff_status {
		UNSG32 u32;
	    struct w32pwrOff_status;
		 } T32pwrOff_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpwrOff_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32pwrOff_ctrl;
		   };
		 } TpwrOff_ctrl;
    typedef union  TpwrOff_status {
		UNSG32 u32[1];
	    struct {
	    struct w32pwrOff_status;
		   };
		 } TpwrOff_status;

    ///////////////////////////////////////////////////////////
     SIGN32 pwrOff_drvrd(SIE_pwrOff *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 pwrOff_drvwr(SIE_pwrOff *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void pwrOff_reset(SIE_pwrOff *p);
     SIGN32 pwrOff_cmp(SIE_pwrOff *p, SIE_pwrOff *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define pwrOff_check(p, pie, pfx, hLOG) pwrOff_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define pwrOff_print(p,    pfx, hLOG) pwrOff_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: pwrOff
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE pwrOn                                    (4,4)
///     ###
///     * Register for the Power domain which is ON by default
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Power Domain Control Register
///               ###
///               %unsigned 1  iso_eN                    0x1
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Isolation control bit. Active low
///                                                 * 0 : Isolation is enabled
///                                                 * 1 : Isolation is disabled (default)
///                                                 ###
///               %unsigned 2  pwrSwitchCtrl             0x3
///                                    ###
///                                    * Power Switch control
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %unsigned 1  pwrDomainRstN             0x1
///                                    ###
///                                    * Power Domain Reset. Active low.
///                                    * 0 : Reset the power domain
///                                    * 1:   De-assert the reset for the power domain
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 2  pwrStatus
///                                    ###
///                                    * Power domain Status output from the power domain module
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:       6b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_pwrOn
#define h_pwrOn () {}

    #define     RA_pwrOn_ctrl                                  0x0000

    #define     BA_pwrOn_ctrl_iso_eN                           0x0000
    #define     B16pwrOn_ctrl_iso_eN                           0x0000
    #define   LSb32pwrOn_ctrl_iso_eN                              0
    #define   LSb16pwrOn_ctrl_iso_eN                              0
    #define       bpwrOn_ctrl_iso_eN                           1
    #define   MSK32pwrOn_ctrl_iso_eN                              0x00000001
    #define        pwrOn_ctrl_iso_eN_enable                                 0x0
    #define        pwrOn_ctrl_iso_eN_disable                                0x1

    #define     BA_pwrOn_ctrl_pwrSwitchCtrl                    0x0000
    #define     B16pwrOn_ctrl_pwrSwitchCtrl                    0x0000
    #define   LSb32pwrOn_ctrl_pwrSwitchCtrl                       1
    #define   LSb16pwrOn_ctrl_pwrSwitchCtrl                       1
    #define       bpwrOn_ctrl_pwrSwitchCtrl                    2
    #define   MSK32pwrOn_ctrl_pwrSwitchCtrl                       0x00000006

    #define     BA_pwrOn_ctrl_pwrDomainRstN                    0x0000
    #define     B16pwrOn_ctrl_pwrDomainRstN                    0x0000
    #define   LSb32pwrOn_ctrl_pwrDomainRstN                       3
    #define   LSb16pwrOn_ctrl_pwrDomainRstN                       3
    #define       bpwrOn_ctrl_pwrDomainRstN                    1
    #define   MSK32pwrOn_ctrl_pwrDomainRstN                       0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_pwrOn_status                                0x0004

    #define     BA_pwrOn_status_pwrStatus                      0x0004
    #define     B16pwrOn_status_pwrStatus                      0x0004
    #define   LSb32pwrOn_status_pwrStatus                         0
    #define   LSb16pwrOn_status_pwrStatus                         0
    #define       bpwrOn_status_pwrStatus                      2
    #define   MSK32pwrOn_status_pwrStatus                         0x00000003
    ///////////////////////////////////////////////////////////

    typedef struct SIE_pwrOn {
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_ctrl_iso_eN(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32pwrOn_ctrl_iso_eN(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16pwrOn_ctrl_iso_eN(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16pwrOn_ctrl_iso_eN(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32pwrOn_ctrl_pwrSwitchCtrl(r32)               _BFGET_(r32, 2, 1)
    #define   SET32pwrOn_ctrl_pwrSwitchCtrl(r32, v)             _BFSET_(r32, 2, 1, v)
    #define   GET16pwrOn_ctrl_pwrSwitchCtrl(r16)               _BFGET_(r16, 2, 1)
    #define   SET16pwrOn_ctrl_pwrSwitchCtrl(r16, v)             _BFSET_(r16, 2, 1, v)

    #define   GET32pwrOn_ctrl_pwrDomainRstN(r32)               _BFGET_(r32, 3, 3)
    #define   SET32pwrOn_ctrl_pwrDomainRstN(r32, v)             _BFSET_(r32, 3, 3, v)
    #define   GET16pwrOn_ctrl_pwrDomainRstN(r16)               _BFGET_(r16, 3, 3)
    #define   SET16pwrOn_ctrl_pwrDomainRstN(r16, v)             _BFSET_(r16, 3, 3, v)

    #define     w32pwrOn_ctrl                                  {\
	    UNSG32 uctrl_iso_eN                                :  1;\
	    UNSG32 uctrl_pwrSwitchCtrl                         :  2;\
	    UNSG32 uctrl_pwrDomainRstN                         :  1;\
	    UNSG32 RSVDx0_b4                                   : 28;\
	}
    union { UNSG32 u32pwrOn_ctrl;
	    struct w32pwrOn_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_status_pwrStatus(r32)                 _BFGET_(r32, 1, 0)
    #define   SET32pwrOn_status_pwrStatus(r32, v)               _BFSET_(r32, 1, 0, v)
    #define   GET16pwrOn_status_pwrStatus(r16)                 _BFGET_(r16, 1, 0)
    #define   SET16pwrOn_status_pwrStatus(r16, v)               _BFSET_(r16, 1, 0, v)

    #define     w32pwrOn_status                                {\
	    UNSG32 ustatus_pwrStatus                           :  2;\
	    UNSG32 RSVDx4_b2                                   : 30;\
	}
    union { UNSG32 u32pwrOn_status;
	    struct w32pwrOn_status;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_pwrOn;

    typedef union  T32pwrOn_ctrl {
		UNSG32 u32;
	    struct w32pwrOn_ctrl;
		 } T32pwrOn_ctrl;
    typedef union  T32pwrOn_status {
		UNSG32 u32;
	    struct w32pwrOn_status;
		 } T32pwrOn_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpwrOn_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32pwrOn_ctrl;
		   };
		 } TpwrOn_ctrl;
    typedef union  TpwrOn_status {
		UNSG32 u32[1];
	    struct {
	    struct w32pwrOn_status;
		   };
		 } TpwrOn_status;

    ///////////////////////////////////////////////////////////
     SIGN32 pwrOn_drvrd(SIE_pwrOn *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 pwrOn_drvwr(SIE_pwrOn *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void pwrOn_reset(SIE_pwrOn *p);
     SIGN32 pwrOn_cmp(SIE_pwrOn *p, SIE_pwrOn *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define pwrOn_check(p, pie, pfx, hLOG) pwrOn_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define pwrOn_print(p,    pfx, hLOG) pwrOn_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: pwrOn
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE pwrOn_iso                                (4,4)
///     ###
///     * Register for the Power domain which is ON by default
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Power Domain Control Register
///               ###
///               %unsigned 1  iso_eN                    0x0
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Isolation control bit. Active low
///                                                 * 0 : Isolation is enabled
///                                                 * 1 : Isolation is disabled (default)
///                                                 ###
///               %unsigned 2  pwrSwitchCtrl             0x3
///                                    ###
///                                    * Power Switch control
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %unsigned 1  pwrDomainRstN             0x0
///                                    ###
///                                    * Power Domain Reset. Active low.
///                                    * 0 : Reset the power domain
///                                    * 1:   De-assert the reset for the power domain
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 2  pwrStatus
///                                    ###
///                                    * Power domain Status output from the power domain module
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %unsigned 1  IP_IDLE
///                                    ###
///                                    * Indication from IP that it is idle and can be powered down.
///                                    * 1: Idle
///                                    * 0: Busy
///                                    ###
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:       7b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_pwrOn_iso
#define h_pwrOn_iso () {}

    #define     RA_pwrOn_iso_ctrl                              0x0000

    #define     BA_pwrOn_iso_ctrl_iso_eN                       0x0000
    #define     B16pwrOn_iso_ctrl_iso_eN                       0x0000
    #define   LSb32pwrOn_iso_ctrl_iso_eN                          0
    #define   LSb16pwrOn_iso_ctrl_iso_eN                          0
    #define       bpwrOn_iso_ctrl_iso_eN                       1
    #define   MSK32pwrOn_iso_ctrl_iso_eN                          0x00000001
    #define        pwrOn_iso_ctrl_iso_eN_enable                             0x0
    #define        pwrOn_iso_ctrl_iso_eN_disable                            0x1

    #define     BA_pwrOn_iso_ctrl_pwrSwitchCtrl                0x0000
    #define     B16pwrOn_iso_ctrl_pwrSwitchCtrl                0x0000
    #define   LSb32pwrOn_iso_ctrl_pwrSwitchCtrl                   1
    #define   LSb16pwrOn_iso_ctrl_pwrSwitchCtrl                   1
    #define       bpwrOn_iso_ctrl_pwrSwitchCtrl                2
    #define   MSK32pwrOn_iso_ctrl_pwrSwitchCtrl                   0x00000006

    #define     BA_pwrOn_iso_ctrl_pwrDomainRstN                0x0000
    #define     B16pwrOn_iso_ctrl_pwrDomainRstN                0x0000
    #define   LSb32pwrOn_iso_ctrl_pwrDomainRstN                   3
    #define   LSb16pwrOn_iso_ctrl_pwrDomainRstN                   3
    #define       bpwrOn_iso_ctrl_pwrDomainRstN                1
    #define   MSK32pwrOn_iso_ctrl_pwrDomainRstN                   0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_pwrOn_iso_status                            0x0004

    #define     BA_pwrOn_iso_status_pwrStatus                  0x0004
    #define     B16pwrOn_iso_status_pwrStatus                  0x0004
    #define   LSb32pwrOn_iso_status_pwrStatus                     0
    #define   LSb16pwrOn_iso_status_pwrStatus                     0
    #define       bpwrOn_iso_status_pwrStatus                  2
    #define   MSK32pwrOn_iso_status_pwrStatus                     0x00000003

    #define     BA_pwrOn_iso_status_IP_IDLE                    0x0004
    #define     B16pwrOn_iso_status_IP_IDLE                    0x0004
    #define   LSb32pwrOn_iso_status_IP_IDLE                       2
    #define   LSb16pwrOn_iso_status_IP_IDLE                       2
    #define       bpwrOn_iso_status_IP_IDLE                    1
    #define   MSK32pwrOn_iso_status_IP_IDLE                       0x00000004
    ///////////////////////////////////////////////////////////

    typedef struct SIE_pwrOn_iso {
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_iso_ctrl_iso_eN(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32pwrOn_iso_ctrl_iso_eN(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16pwrOn_iso_ctrl_iso_eN(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16pwrOn_iso_ctrl_iso_eN(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32pwrOn_iso_ctrl_pwrSwitchCtrl(r32)           _BFGET_(r32, 2, 1)
    #define   SET32pwrOn_iso_ctrl_pwrSwitchCtrl(r32, v)         _BFSET_(r32, 2, 1, v)
    #define   GET16pwrOn_iso_ctrl_pwrSwitchCtrl(r16)           _BFGET_(r16, 2, 1)
    #define   SET16pwrOn_iso_ctrl_pwrSwitchCtrl(r16, v)         _BFSET_(r16, 2, 1, v)

    #define   GET32pwrOn_iso_ctrl_pwrDomainRstN(r32)           _BFGET_(r32, 3, 3)
    #define   SET32pwrOn_iso_ctrl_pwrDomainRstN(r32, v)         _BFSET_(r32, 3, 3, v)
    #define   GET16pwrOn_iso_ctrl_pwrDomainRstN(r16)           _BFGET_(r16, 3, 3)
    #define   SET16pwrOn_iso_ctrl_pwrDomainRstN(r16, v)         _BFSET_(r16, 3, 3, v)

    #define     w32pwrOn_iso_ctrl                              {\
	    UNSG32 uctrl_iso_eN                                :  1;\
	    UNSG32 uctrl_pwrSwitchCtrl                         :  2;\
	    UNSG32 uctrl_pwrDomainRstN                         :  1;\
	    UNSG32 RSVDx0_b4                                   : 28;\
	}
    union { UNSG32 u32pwrOn_iso_ctrl;
	    struct w32pwrOn_iso_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_iso_status_pwrStatus(r32)             _BFGET_(r32, 1, 0)
    #define   SET32pwrOn_iso_status_pwrStatus(r32, v)           _BFSET_(r32, 1, 0, v)
    #define   GET16pwrOn_iso_status_pwrStatus(r16)             _BFGET_(r16, 1, 0)
    #define   SET16pwrOn_iso_status_pwrStatus(r16, v)           _BFSET_(r16, 1, 0, v)

    #define   GET32pwrOn_iso_status_IP_IDLE(r32)               _BFGET_(r32, 2, 2)
    #define   SET32pwrOn_iso_status_IP_IDLE(r32, v)             _BFSET_(r32, 2, 2, v)
    #define   GET16pwrOn_iso_status_IP_IDLE(r16)               _BFGET_(r16, 2, 2)
    #define   SET16pwrOn_iso_status_IP_IDLE(r16, v)             _BFSET_(r16, 2, 2, v)

    #define     w32pwrOn_iso_status                            {\
	    UNSG32 ustatus_pwrStatus                           :  2;\
	    UNSG32 ustatus_IP_IDLE                             :  1;\
	    UNSG32 RSVDx4_b3                                   : 29;\
	}
    union { UNSG32 u32pwrOn_iso_status;
	    struct w32pwrOn_iso_status;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_pwrOn_iso;

    typedef union  T32pwrOn_iso_ctrl {
		UNSG32 u32;
	    struct w32pwrOn_iso_ctrl;
		 } T32pwrOn_iso_ctrl;
    typedef union  T32pwrOn_iso_status {
		UNSG32 u32;
	    struct w32pwrOn_iso_status;
		 } T32pwrOn_iso_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpwrOn_iso_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32pwrOn_iso_ctrl;
		   };
		 } TpwrOn_iso_ctrl;
    typedef union  TpwrOn_iso_status {
		UNSG32 u32[1];
	    struct {
	    struct w32pwrOn_iso_status;
		   };
		 } TpwrOn_iso_status;

    ///////////////////////////////////////////////////////////
     SIGN32 pwrOn_iso_drvrd(SIE_pwrOn_iso *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 pwrOn_iso_drvwr(SIE_pwrOn_iso *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void pwrOn_iso_reset(SIE_pwrOn_iso *p);
     SIGN32 pwrOn_iso_cmp(SIE_pwrOn_iso *p, SIE_pwrOn_iso *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define pwrOn_iso_check(p, pie, pfx, hLOG) pwrOn_iso_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define pwrOn_iso_print(p,    pfx, hLOG) pwrOn_iso_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: pwrOn_iso
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAMPWR                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  SD                        0x0
///                                    : ON                        0x0
///                                    : SHUTDWN                   0x1
///                                                 ###
///                                                 * Shut down mode achieves highest leakage reduction without data retention
///                                                 ###
///               %unsigned 1  DSLP                      0x0
///                                    : ON                        0x0
///                                    : DEEPSLP                   0x1
///                                                 ###
///                                                 * Deep sleep mode powers down the most of peripheral circuit for leakage reduction and retains memory
///                                                 * array content with lower voltage
///                                                 ###
///               %unsigned 1  SLP                       0x0
///                                    : ON                        0x0
///                                    : SLEEP                     0x1
///                                                 ###
///                                                 * Sleep mode powers down most peripheral circuit for leakage reduction with data retention
///                                                 ###
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       3b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMPWR
#define h_SRAMPWR () {}

    #define     RA_SRAMPWR_ctrl                                0x0000

    #define     BA_SRAMPWR_ctrl_SD                             0x0000
    #define     B16SRAMPWR_ctrl_SD                             0x0000
    #define   LSb32SRAMPWR_ctrl_SD                                0
    #define   LSb16SRAMPWR_ctrl_SD                                0
    #define       bSRAMPWR_ctrl_SD                             1
    #define   MSK32SRAMPWR_ctrl_SD                                0x00000001
    #define        SRAMPWR_ctrl_SD_ON                                       0x0
    #define        SRAMPWR_ctrl_SD_SHUTDWN                                  0x1

    #define     BA_SRAMPWR_ctrl_DSLP                           0x0000
    #define     B16SRAMPWR_ctrl_DSLP                           0x0000
    #define   LSb32SRAMPWR_ctrl_DSLP                              1
    #define   LSb16SRAMPWR_ctrl_DSLP                              1
    #define       bSRAMPWR_ctrl_DSLP                           1
    #define   MSK32SRAMPWR_ctrl_DSLP                              0x00000002
    #define        SRAMPWR_ctrl_DSLP_ON                                     0x0
    #define        SRAMPWR_ctrl_DSLP_DEEPSLP                                0x1

    #define     BA_SRAMPWR_ctrl_SLP                            0x0000
    #define     B16SRAMPWR_ctrl_SLP                            0x0000
    #define   LSb32SRAMPWR_ctrl_SLP                               2
    #define   LSb16SRAMPWR_ctrl_SLP                               2
    #define       bSRAMPWR_ctrl_SLP                            1
    #define   MSK32SRAMPWR_ctrl_SLP                               0x00000004
    #define        SRAMPWR_ctrl_SLP_ON                                      0x0
    #define        SRAMPWR_ctrl_SLP_SLEEP                                   0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMPWR {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMPWR_ctrl_SD(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32SRAMPWR_ctrl_SD(r32, v)                      _BFSET_(r32, 0, 0, v)
    #define   GET16SRAMPWR_ctrl_SD(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16SRAMPWR_ctrl_SD(r16, v)                      _BFSET_(r16, 0, 0, v)

    #define   GET32SRAMPWR_ctrl_DSLP(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32SRAMPWR_ctrl_DSLP(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16SRAMPWR_ctrl_DSLP(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16SRAMPWR_ctrl_DSLP(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32SRAMPWR_ctrl_SLP(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32SRAMPWR_ctrl_SLP(r32, v)                     _BFSET_(r32, 2, 2, v)
    #define   GET16SRAMPWR_ctrl_SLP(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16SRAMPWR_ctrl_SLP(r16, v)                     _BFSET_(r16, 2, 2, v)

    #define     w32SRAMPWR_ctrl                                {\
	    UNSG32 uctrl_SD                                    :  1;\
	    UNSG32 uctrl_DSLP                                  :  1;\
	    UNSG32 uctrl_SLP                                   :  1;\
	    UNSG32 RSVDx0_b3                                   : 29;\
	}
    union { UNSG32 u32SRAMPWR_ctrl;
	    struct w32SRAMPWR_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMPWR;

    typedef union  T32SRAMPWR_ctrl {
		UNSG32 u32;
	    struct w32SRAMPWR_ctrl;
		 } T32SRAMPWR_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMPWR_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32SRAMPWR_ctrl;
		   };
		 } TSRAMPWR_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMPWR_drvrd(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMPWR_drvwr(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMPWR_reset(SIE_SRAMPWR *p);
     SIGN32 SRAMPWR_cmp(SIE_SRAMPWR *p, SIE_SRAMPWR *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMPWR_check(p, pie, pfx, hLOG) SRAMPWR_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define SRAMPWR_print(p,    pfx, hLOG) SRAMPWR_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: SRAMPWR
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAMRWTC                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl0                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  RF1P                      0x5
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  UHDRF1P                   0x9
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 10 (default)
///                                    ###
///               %unsigned 8  RF2P                      0x35
///                                    ###
///                                    * RCT [1:0] = 01 (default)
///                                    * WCT [3:2] = 01 (default)
///                                    * KP[6:4]      = 011 (default)
///                                    * Bit7 not used
///                                    ###
///               %unsigned 8  UHDRF2P                   0x1
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 00 (default)
///                                    * MTSEL [5:4] = 00 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///               %unsigned 8  UHDRF2P_ULVT              0x15
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 01 (default)
///                                    * MTSEL [5:4] = 01 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///     @ 0x00004 ctrl1                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  SHDMBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHDSBSR1P                 0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_SSEG            0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_USEG            0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P_CUSTM           0xD
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 11 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT0                0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT1                0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///     @ 0x00008 ctrl2                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  L1CACHE                   0x0
///                                    ###
///                                    * MCR[1:0] = 00 (default)
///                                    * MCW[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  DPSR2P                    0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 8  ROM                       0x15
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * PTSEL[3:2] = 01 (default)
///                                    * TRB[5:4]: 01
///                                    * TM[6]: 0
///                                    * Bit 7 not used
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      12B, bits:      80b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMRWTC
#define h_SRAMRWTC () {}

    #define     RA_SRAMRWTC_ctrl0                              0x0000

    #define     BA_SRAMRWTC_ctrl0_RF1P                         0x0000
    #define     B16SRAMRWTC_ctrl0_RF1P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF1P                            0
    #define   LSb16SRAMRWTC_ctrl0_RF1P                            0
    #define       bSRAMRWTC_ctrl0_RF1P                         4
    #define   MSK32SRAMRWTC_ctrl0_RF1P                            0x0000000F

    #define     BA_SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define     B16SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define   LSb32SRAMRWTC_ctrl0_UHDRF1P                         4
    #define   LSb16SRAMRWTC_ctrl0_UHDRF1P                         4
    #define       bSRAMRWTC_ctrl0_UHDRF1P                      4
    #define   MSK32SRAMRWTC_ctrl0_UHDRF1P                         0x000000F0

    #define     BA_SRAMRWTC_ctrl0_RF2P                         0x0001
    #define     B16SRAMRWTC_ctrl0_RF2P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF2P                            8
    #define   LSb16SRAMRWTC_ctrl0_RF2P                            8
    #define       bSRAMRWTC_ctrl0_RF2P                         8
    #define   MSK32SRAMRWTC_ctrl0_RF2P                            0x0000FF00

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define     B16SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P                         16
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P                         0
    #define       bSRAMRWTC_ctrl0_UHDRF2P                      8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P                         0x00FF0000

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0003
    #define     B16SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    24
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P_ULVT                    8
    #define       bSRAMRWTC_ctrl0_UHDRF2P_ULVT                 8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl1                              0x0004

    #define     BA_SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define   LSb16SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHDMBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDMBSR1P                       0x0000000F

    #define     BA_SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define   LSb16SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define       bSRAMRWTC_ctrl1_SHDSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDSBSR1P                       0x000000F0

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_SSEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  0x00000F00

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_USEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  0x0000F000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P                       16
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P                       0x000F0000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 20
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 4
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 0x00F00000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT0                      24
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT0                      8
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT0                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT0                      0x0F000000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT1                      28
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT1                      12
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT1                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT1                      0xF0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl2                              0x0008

    #define     BA_SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define     B16SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define   LSb32SRAMRWTC_ctrl2_L1CACHE                         0
    #define   LSb16SRAMRWTC_ctrl2_L1CACHE                         0
    #define       bSRAMRWTC_ctrl2_L1CACHE                      4
    #define   MSK32SRAMRWTC_ctrl2_L1CACHE                         0x0000000F

    #define     BA_SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define     B16SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define   LSb32SRAMRWTC_ctrl2_DPSR2P                          4
    #define   LSb16SRAMRWTC_ctrl2_DPSR2P                          4
    #define       bSRAMRWTC_ctrl2_DPSR2P                       4
    #define   MSK32SRAMRWTC_ctrl2_DPSR2P                          0x000000F0

    #define     BA_SRAMRWTC_ctrl2_ROM                          0x0009
    #define     B16SRAMRWTC_ctrl2_ROM                          0x0008
    #define   LSb32SRAMRWTC_ctrl2_ROM                             8
    #define   LSb16SRAMRWTC_ctrl2_ROM                             8
    #define       bSRAMRWTC_ctrl2_ROM                          8
    #define   MSK32SRAMRWTC_ctrl2_ROM                             0x0000FF00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMRWTC {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl0_RF1P(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl0_RF1P(r32, v)                  _BFSET_(r32, 3, 0, v)
    #define   GET16SRAMRWTC_ctrl0_RF1P(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl0_RF1P(r16, v)                  _BFSET_(r16, 3, 0, v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF1P(r32)                 _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl0_UHDRF1P(r32, v)               _BFSET_(r32, 7, 4, v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF1P(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl0_UHDRF1P(r16, v)               _BFSET_(r16, 7, 4, v)

    #define   GET32SRAMRWTC_ctrl0_RF2P(r32)                    _BFGET_(r32, 15, 8)
    #define   SET32SRAMRWTC_ctrl0_RF2P(r32, v)                  _BFSET_(r32, 15, 8, v)
    #define   GET16SRAMRWTC_ctrl0_RF2P(r16)                    _BFGET_(r16, 15, 8)
    #define   SET16SRAMRWTC_ctrl0_RF2P(r16, v)                  _BFSET_(r16, 15, 8, v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P(r32)                 _BFGET_(r32, 23, 16)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P(r32, v)               _BFSET_(r32, 23, 16, v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P(r16, v)               _BFSET_(r16, 7, 0, v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32)            _BFGET_(r32, 31, 24)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32, v)          _BFSET_(r32, 31, 24, v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16)            _BFGET_(r16, 15, 8)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16, v)          _BFSET_(r16, 15, 8, v)

    #define     w32SRAMRWTC_ctrl0                              {\
	    UNSG32 uctrl0_RF1P                                 :  4;\
	    UNSG32 uctrl0_UHDRF1P                              :  4;\
	    UNSG32 uctrl0_RF2P                                 :  8;\
	    UNSG32 uctrl0_UHDRF2P                              :  8;\
	    UNSG32 uctrl0_UHDRF2P_ULVT                         :  8;\
	}
    union { UNSG32 u32SRAMRWTC_ctrl0;
	    struct w32SRAMRWTC_ctrl0;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl1_SHDMBSR1P(r32)               _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl1_SHDMBSR1P(r32, v)             _BFSET_(r32, 3, 0, v)
    #define   GET16SRAMRWTC_ctrl1_SHDMBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHDMBSR1P(r16, v)             _BFSET_(r16, 3, 0, v)

    #define   GET32SRAMRWTC_ctrl1_SHDSBSR1P(r32)               _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl1_SHDSBSR1P(r32, v)             _BFSET_(r32, 7, 4, v)
    #define   GET16SRAMRWTC_ctrl1_SHDSBSR1P(r16)               _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHDSBSR1P(r16, v)             _BFSET_(r16, 7, 4, v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32)          _BFGET_(r32, 11, 8)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32, v)        _BFSET_(r32, 11, 8, v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16)          _BFGET_(r16, 11, 8)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16, v)        _BFSET_(r16, 11, 8, v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32)          _BFGET_(r32, 15, 12)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32, v)        _BFSET_(r32, 15, 12, v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16)          _BFGET_(r16, 15, 12)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16, v)        _BFSET_(r16, 15, 12, v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P(r32)               _BFGET_(r32, 19, 16)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P(r32, v)             _BFSET_(r32, 19, 16, v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P(r16, v)             _BFSET_(r16, 3, 0, v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32)         _BFGET_(r32, 23, 20)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32, v)       _BFSET_(r32, 23, 20, v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16)         _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16, v)       _BFSET_(r16, 7, 4, v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32)              _BFGET_(r32, 27, 24)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32, v)            _BFSET_(r32, 27, 24, v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16)              _BFGET_(r16, 11, 8)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16, v)            _BFSET_(r16, 11, 8, v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32)              _BFGET_(r32, 31, 28)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32, v)            _BFSET_(r32, 31, 28, v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16)              _BFGET_(r16, 15, 12)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16, v)            _BFSET_(r16, 15, 12, v)

    #define     w32SRAMRWTC_ctrl1                              {\
	    UNSG32 uctrl1_SHDMBSR1P                            :  4;\
	    UNSG32 uctrl1_SHDSBSR1P                            :  4;\
	    UNSG32 uctrl1_SHCMBSR1P_SSEG                       :  4;\
	    UNSG32 uctrl1_SHCMBSR1P_USEG                       :  4;\
	    UNSG32 uctrl1_SHCSBSR1P                            :  4;\
	    UNSG32 uctrl1_SHCSBSR1P_CUSTM                      :  4;\
	    UNSG32 uctrl1_SPSRAM_WT0                           :  4;\
	    UNSG32 uctrl1_SPSRAM_WT1                           :  4;\
	}
    union { UNSG32 u32SRAMRWTC_ctrl1;
	    struct w32SRAMRWTC_ctrl1;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl2_L1CACHE(r32)                 _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl2_L1CACHE(r32, v)               _BFSET_(r32, 3, 0, v)
    #define   GET16SRAMRWTC_ctrl2_L1CACHE(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl2_L1CACHE(r16, v)               _BFSET_(r16, 3, 0, v)

    #define   GET32SRAMRWTC_ctrl2_DPSR2P(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl2_DPSR2P(r32, v)                _BFSET_(r32, 7, 4, v)
    #define   GET16SRAMRWTC_ctrl2_DPSR2P(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl2_DPSR2P(r16, v)                _BFSET_(r16, 7, 4, v)

    #define   GET32SRAMRWTC_ctrl2_ROM(r32)                     _BFGET_(r32, 15, 8)
    #define   SET32SRAMRWTC_ctrl2_ROM(r32, v)                   _BFSET_(r32, 15, 8, v)
    #define   GET16SRAMRWTC_ctrl2_ROM(r16)                     _BFGET_(r16, 15, 8)
    #define   SET16SRAMRWTC_ctrl2_ROM(r16, v)                   _BFSET_(r16, 15, 8, v)

    #define     w32SRAMRWTC_ctrl2                              {\
	    UNSG32 uctrl2_L1CACHE                              :  4;\
	    UNSG32 uctrl2_DPSR2P                               :  4;\
	    UNSG32 uctrl2_ROM                                  :  8;\
	    UNSG32 RSVDx8_b16                                  : 16;\
	}
    union { UNSG32 u32SRAMRWTC_ctrl2;
	    struct w32SRAMRWTC_ctrl2;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMRWTC;

    typedef union  T32SRAMRWTC_ctrl0 {
		UNSG32 u32;
	    struct w32SRAMRWTC_ctrl0;
		 } T32SRAMRWTC_ctrl0;
    typedef union  T32SRAMRWTC_ctrl1 {
		UNSG32 u32;
	    struct w32SRAMRWTC_ctrl1;
		 } T32SRAMRWTC_ctrl1;
    typedef union  T32SRAMRWTC_ctrl2 {
		UNSG32 u32;
	    struct w32SRAMRWTC_ctrl2;
		 } T32SRAMRWTC_ctrl2;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMRWTC_ctrl0 {
		UNSG32 u32[1];
	    struct {
	    struct w32SRAMRWTC_ctrl0;
		   };
		 } TSRAMRWTC_ctrl0;
    typedef union  TSRAMRWTC_ctrl1 {
		UNSG32 u32[1];
	    struct {
	    struct w32SRAMRWTC_ctrl1;
		   };
		 } TSRAMRWTC_ctrl1;
    typedef union  TSRAMRWTC_ctrl2 {
		UNSG32 u32[1];
	    struct {
	    struct w32SRAMRWTC_ctrl2;
		   };
		 } TSRAMRWTC_ctrl2;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMRWTC_drvrd(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMRWTC_drvwr(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMRWTC_reset(SIE_SRAMRWTC *p);
     SIGN32 SRAMRWTC_cmp(SIE_SRAMRWTC *p, SIE_SRAMRWTC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMRWTC_check(p, pie, pfx, hLOG) SRAMRWTC_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define SRAMRWTC_print(p,    pfx, hLOG) SRAMRWTC_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: SRAMRWTC
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE KPINT                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 KPINT_CFG            (P)
///               ###
///               * Keypad Interface Configuration Register
///               ###
///               %unsigned 8  KPINT_COL_EN              0x0
///                                    ###
///                                    * Enable/Disable the corresponding COL[i]
///                                    * 1'b1: Enabled
///                                    * 1'b0: Disabled
///                                    ###
///               %unsigned 10 KPINT_ROW_EN              0x0
///                                    ###
///                                    * Enable/Disable the corresponding ROW[i]
///                                    * 1'b1: Enabled
///                                    * 1'b0: Disabled
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x00004 KPINT_COL            (P)
///               ###
///               * Keypad Interface Column Register
///               ###
///               %unsigned 8  COL_ACTIVATE              0x0
///                                    ###
///                                    * Activate/deactivate enabled COL[i]
///                                    * 1'b1: enabled column is activated
///                                    * 1'b0: enabled column is deactivated
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00008 KPINT_ROW            (R-)
///               ###
///               * Keypad Interface Row Register
///               ###
///               %unsigned 10 KEY_PRESSED
///                                    ###
///                                    * Indicate which key on ROW[i] get pressed in the enabled & activated column
///                                    * 1'b1: a key on ROW[i] get pressed
///                                    * 1'b0: no key on ROW[i] get pressed or ROW[i] is not enabled
///                                    ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      12B, bits:      36b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_KPINT
#define h_KPINT () {}

    #define     RA_KPINT_KPINT_CFG                             0x0000

    #define     BA_KPINT_KPINT_CFG_KPINT_COL_EN                0x0000
    #define     B16KPINT_KPINT_CFG_KPINT_COL_EN                0x0000
    #define   LSb32KPINT_KPINT_CFG_KPINT_COL_EN                   0
    #define   LSb16KPINT_KPINT_CFG_KPINT_COL_EN                   0
    #define       bKPINT_KPINT_CFG_KPINT_COL_EN                8
    #define   MSK32KPINT_KPINT_CFG_KPINT_COL_EN                   0x000000FF

    #define     BA_KPINT_KPINT_CFG_KPINT_ROW_EN                0x0001
    #define     B16KPINT_KPINT_CFG_KPINT_ROW_EN                0x0000
    #define   LSb32KPINT_KPINT_CFG_KPINT_ROW_EN                   8
    #define   LSb16KPINT_KPINT_CFG_KPINT_ROW_EN                   8
    #define       bKPINT_KPINT_CFG_KPINT_ROW_EN                10
    #define   MSK32KPINT_KPINT_CFG_KPINT_ROW_EN                   0x0003FF00
    ///////////////////////////////////////////////////////////
    #define     RA_KPINT_KPINT_COL                             0x0004

    #define     BA_KPINT_KPINT_COL_COL_ACTIVATE                0x0004
    #define     B16KPINT_KPINT_COL_COL_ACTIVATE                0x0004
    #define   LSb32KPINT_KPINT_COL_COL_ACTIVATE                   0
    #define   LSb16KPINT_KPINT_COL_COL_ACTIVATE                   0
    #define       bKPINT_KPINT_COL_COL_ACTIVATE                8
    #define   MSK32KPINT_KPINT_COL_COL_ACTIVATE                   0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KPINT_KPINT_ROW                             0x0008

    #define     BA_KPINT_KPINT_ROW_KEY_PRESSED                 0x0008
    #define     B16KPINT_KPINT_ROW_KEY_PRESSED                 0x0008
    #define   LSb32KPINT_KPINT_ROW_KEY_PRESSED                    0
    #define   LSb16KPINT_KPINT_ROW_KEY_PRESSED                    0
    #define       bKPINT_KPINT_ROW_KEY_PRESSED                 10
    #define   MSK32KPINT_KPINT_ROW_KEY_PRESSED                    0x000003FF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_KPINT {
    ///////////////////////////////////////////////////////////
    #define   GET32KPINT_KPINT_CFG_KPINT_COL_EN(r32)           _BFGET_(r32, 7, 0)
    #define   SET32KPINT_KPINT_CFG_KPINT_COL_EN(r32, v)         _BFSET_(r32, 7, 0, v)
    #define   GET16KPINT_KPINT_CFG_KPINT_COL_EN(r16)           _BFGET_(r16, 7, 0)
    #define   SET16KPINT_KPINT_CFG_KPINT_COL_EN(r16, v)         _BFSET_(r16, 7, 0, v)

    #define   GET32KPINT_KPINT_CFG_KPINT_ROW_EN(r32)           _BFGET_(r32, 17, 8)
    #define   SET32KPINT_KPINT_CFG_KPINT_ROW_EN(r32, v)         _BFSET_(r32, 17, 8, v)

    #define     w32KPINT_KPINT_CFG                             {\
	    UNSG32 uKPINT_CFG_KPINT_COL_EN                     :  8;\
	    UNSG32 uKPINT_CFG_KPINT_ROW_EN                     : 10;\
	    UNSG32 RSVDx0_b18                                  : 14;\
	}
    union { UNSG32 u32KPINT_KPINT_CFG;
	    struct w32KPINT_KPINT_CFG;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32KPINT_KPINT_COL_COL_ACTIVATE(r32)           _BFGET_(r32, 7, 0)
    #define   SET32KPINT_KPINT_COL_COL_ACTIVATE(r32, v)         _BFSET_(r32, 7, 0, v)
    #define   GET16KPINT_KPINT_COL_COL_ACTIVATE(r16)           _BFGET_(r16, 7, 0)
    #define   SET16KPINT_KPINT_COL_COL_ACTIVATE(r16, v)         _BFSET_(r16, 7, 0, v)

    #define     w32KPINT_KPINT_COL                             {\
	    UNSG32 uKPINT_COL_COL_ACTIVATE                     :  8;\
	    UNSG32 RSVDx4_b8                                   : 24;\
	}
    union { UNSG32 u32KPINT_KPINT_COL;
	    struct w32KPINT_KPINT_COL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32KPINT_KPINT_ROW_KEY_PRESSED(r32)            _BFGET_(r32, 9, 0)
    #define   SET32KPINT_KPINT_ROW_KEY_PRESSED(r32, v)          _BFSET_(r32, 9, 0, v)
    #define   GET16KPINT_KPINT_ROW_KEY_PRESSED(r16)            _BFGET_(r16, 9, 0)
    #define   SET16KPINT_KPINT_ROW_KEY_PRESSED(r16, v)          _BFSET_(r16, 9, 0, v)

    #define     w32KPINT_KPINT_ROW                             {\
	    UNSG32 uKPINT_ROW_KEY_PRESSED                      : 10;\
	    UNSG32 RSVDx8_b10                                  : 22;\
	}
    union { UNSG32 u32KPINT_KPINT_ROW;
	    struct w32KPINT_KPINT_ROW;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_KPINT;

    typedef union  T32KPINT_KPINT_CFG {
		UNSG32 u32;
	    struct w32KPINT_KPINT_CFG;
		 } T32KPINT_KPINT_CFG;
    typedef union  T32KPINT_KPINT_COL {
		UNSG32 u32;
	    struct w32KPINT_KPINT_COL;
		 } T32KPINT_KPINT_COL;
    typedef union  T32KPINT_KPINT_ROW {
		UNSG32 u32;
	    struct w32KPINT_KPINT_ROW;
		 } T32KPINT_KPINT_ROW;
    ///////////////////////////////////////////////////////////

    typedef union  TKPINT_KPINT_CFG {
		UNSG32 u32[1];
	    struct {
	    struct w32KPINT_KPINT_CFG;
		   };
		 } TKPINT_KPINT_CFG;
    typedef union  TKPINT_KPINT_COL {
		UNSG32 u32[1];
	    struct {
	    struct w32KPINT_KPINT_COL;
		   };
		 } TKPINT_KPINT_COL;
    typedef union  TKPINT_KPINT_ROW {
		UNSG32 u32[1];
	    struct {
	    struct w32KPINT_KPINT_ROW;
		   };
		 } TKPINT_KPINT_ROW;

    ///////////////////////////////////////////////////////////
     SIGN32 KPINT_drvrd(SIE_KPINT *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 KPINT_drvwr(SIE_KPINT *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void KPINT_reset(SIE_KPINT *p);
     SIGN32 KPINT_cmp(SIE_KPINT *p, SIE_KPINT *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define KPINT_check(p, pie, pfx, hLOG) KPINT_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define KPINT_print(p,    pfx, hLOG) KPINT_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: KPINT
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD1                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider  (default) for Divide by 1
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 * Note: Not used for Divide by 1
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD1
#define h_clkD1 () {}

    #define     RA_clkD1_ctrl                                  0x0000

    #define     BA_clkD1_ctrl_ClkEn                            0x0000
    #define     B16clkD1_ctrl_ClkEn                            0x0000
    #define   LSb32clkD1_ctrl_ClkEn                               0
    #define   LSb16clkD1_ctrl_ClkEn                               0
    #define       bclkD1_ctrl_ClkEn                            1
    #define   MSK32clkD1_ctrl_ClkEn                               0x00000001
    #define        clkD1_ctrl_ClkEn_enable                                  0x1
    #define        clkD1_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD1_ctrl_ClkPllSel                        0x0000
    #define     B16clkD1_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD1_ctrl_ClkPllSel                           1
    #define   LSb16clkD1_ctrl_ClkPllSel                           1
    #define       bclkD1_ctrl_ClkPllSel                        3
    #define   MSK32clkD1_ctrl_ClkPllSel                           0x0000000E
    #define        clkD1_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD1_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD1_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD1_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD1_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD1_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD1_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD1_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD1_ctrl_ClkPllSwitch                        4
    #define       bclkD1_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD1_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD1_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD1_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD1_ctrl_ClkSwitch                        0x0000
    #define     B16clkD1_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD1_ctrl_ClkSwitch                           5
    #define   LSb16clkD1_ctrl_ClkSwitch                           5
    #define       bclkD1_ctrl_ClkSwitch                        1
    #define   MSK32clkD1_ctrl_ClkSwitch                           0x00000020
    #define        clkD1_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD1_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD1_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD1_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD1_ctrl_ClkD3Switch                         6
    #define   LSb16clkD1_ctrl_ClkD3Switch                         6
    #define       bclkD1_ctrl_ClkD3Switch                      1
    #define   MSK32clkD1_ctrl_ClkD3Switch                         0x00000040
    #define        clkD1_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD1_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD1_ctrl_ClkSel                           0x0000
    #define     B16clkD1_ctrl_ClkSel                           0x0000
    #define   LSb32clkD1_ctrl_ClkSel                              7
    #define   LSb16clkD1_ctrl_ClkSel                              7
    #define       bclkD1_ctrl_ClkSel                           3
    #define   MSK32clkD1_ctrl_ClkSel                              0x00000380
    #define        clkD1_ctrl_ClkSel_d2                                     0x1
    #define        clkD1_ctrl_ClkSel_d4                                     0x2
    #define        clkD1_ctrl_ClkSel_d6                                     0x3
    #define        clkD1_ctrl_ClkSel_d8                                     0x4
    #define        clkD1_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD1 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD1_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD1_ctrl_ClkEn(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16clkD1_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD1_ctrl_ClkEn(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32clkD1_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD1_ctrl_ClkPllSel(r32, v)                 _BFSET_(r32, 3, 1, v)
    #define   GET16clkD1_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD1_ctrl_ClkPllSel(r16, v)                 _BFSET_(r16, 3, 1, v)

    #define   GET32clkD1_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD1_ctrl_ClkPllSwitch(r32, v)              _BFSET_(r32, 4, 4, v)
    #define   GET16clkD1_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD1_ctrl_ClkPllSwitch(r16, v)              _BFSET_(r16, 4, 4, v)

    #define   GET32clkD1_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD1_ctrl_ClkSwitch(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16clkD1_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD1_ctrl_ClkSwitch(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32clkD1_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD1_ctrl_ClkD3Switch(r32, v)               _BFSET_(r32, 6, 6, v)
    #define   GET16clkD1_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD1_ctrl_ClkD3Switch(r16, v)               _BFSET_(r16, 6, 6, v)

    #define   GET32clkD1_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD1_ctrl_ClkSel(r32, v)                    _BFSET_(r32, 9, 7, v)
    #define   GET16clkD1_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD1_ctrl_ClkSel(r16, v)                    _BFSET_(r16, 9, 7, v)

    #define     w32clkD1_ctrl                                  {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD1_ctrl;
	    struct w32clkD1_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD1;

    typedef union  T32clkD1_ctrl {
		UNSG32 u32;
	    struct w32clkD1_ctrl;
		 } T32clkD1_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD1_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD1_ctrl;
		   };
		 } TclkD1_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD1_drvrd(SIE_clkD1 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD1_drvwr(SIE_clkD1 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD1_reset(SIE_clkD1 *p);
     SIGN32 clkD1_cmp(SIE_clkD1 *p, SIE_clkD1 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD1_check(p, pie, pfx, hLOG) clkD1_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD1_print(p,    pfx, hLOG) clkD1_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD1
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD2                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUT  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                    : d24                       0x6
///                                    : d48                       0x7
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6:  Divide by 24
///                                                 * 7:  Divide by 48
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD2
#define h_clkD2 () {}

    #define     RA_clkD2_ctrl                                  0x0000

    #define     BA_clkD2_ctrl_ClkEn                            0x0000
    #define     B16clkD2_ctrl_ClkEn                            0x0000
    #define   LSb32clkD2_ctrl_ClkEn                               0
    #define   LSb16clkD2_ctrl_ClkEn                               0
    #define       bclkD2_ctrl_ClkEn                            1
    #define   MSK32clkD2_ctrl_ClkEn                               0x00000001
    #define        clkD2_ctrl_ClkEn_enable                                  0x1
    #define        clkD2_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD2_ctrl_ClkPllSel                        0x0000
    #define     B16clkD2_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD2_ctrl_ClkPllSel                           1
    #define   LSb16clkD2_ctrl_ClkPllSel                           1
    #define       bclkD2_ctrl_ClkPllSel                        3
    #define   MSK32clkD2_ctrl_ClkPllSel                           0x0000000E
    #define        clkD2_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD2_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD2_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD2_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD2_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD2_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD2_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD2_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD2_ctrl_ClkPllSwitch                        4
    #define       bclkD2_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD2_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD2_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD2_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD2_ctrl_ClkSwitch                        0x0000
    #define     B16clkD2_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD2_ctrl_ClkSwitch                           5
    #define   LSb16clkD2_ctrl_ClkSwitch                           5
    #define       bclkD2_ctrl_ClkSwitch                        1
    #define   MSK32clkD2_ctrl_ClkSwitch                           0x00000020
    #define        clkD2_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD2_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD2_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD2_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD2_ctrl_ClkD3Switch                         6
    #define   LSb16clkD2_ctrl_ClkD3Switch                         6
    #define       bclkD2_ctrl_ClkD3Switch                      1
    #define   MSK32clkD2_ctrl_ClkD3Switch                         0x00000040
    #define        clkD2_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD2_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD2_ctrl_ClkSel                           0x0000
    #define     B16clkD2_ctrl_ClkSel                           0x0000
    #define   LSb32clkD2_ctrl_ClkSel                              7
    #define   LSb16clkD2_ctrl_ClkSel                              7
    #define       bclkD2_ctrl_ClkSel                           3
    #define   MSK32clkD2_ctrl_ClkSel                              0x00000380
    #define        clkD2_ctrl_ClkSel_d2                                     0x1
    #define        clkD2_ctrl_ClkSel_d4                                     0x2
    #define        clkD2_ctrl_ClkSel_d6                                     0x3
    #define        clkD2_ctrl_ClkSel_d8                                     0x4
    #define        clkD2_ctrl_ClkSel_d12                                    0x5
    #define        clkD2_ctrl_ClkSel_d24                                    0x6
    #define        clkD2_ctrl_ClkSel_d48                                    0x7
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD2 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD2_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD2_ctrl_ClkEn(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16clkD2_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD2_ctrl_ClkEn(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32clkD2_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD2_ctrl_ClkPllSel(r32, v)                 _BFSET_(r32, 3, 1, v)
    #define   GET16clkD2_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD2_ctrl_ClkPllSel(r16, v)                 _BFSET_(r16, 3, 1, v)

    #define   GET32clkD2_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD2_ctrl_ClkPllSwitch(r32, v)              _BFSET_(r32, 4, 4, v)
    #define   GET16clkD2_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD2_ctrl_ClkPllSwitch(r16, v)              _BFSET_(r16, 4, 4, v)

    #define   GET32clkD2_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD2_ctrl_ClkSwitch(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16clkD2_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD2_ctrl_ClkSwitch(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32clkD2_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD2_ctrl_ClkD3Switch(r32, v)               _BFSET_(r32, 6, 6, v)
    #define   GET16clkD2_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD2_ctrl_ClkD3Switch(r16, v)               _BFSET_(r16, 6, 6, v)

    #define   GET32clkD2_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD2_ctrl_ClkSel(r32, v)                    _BFSET_(r32, 9, 7, v)
    #define   GET16clkD2_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD2_ctrl_ClkSel(r16, v)                    _BFSET_(r16, 9, 7, v)

    #define     w32clkD2_ctrl                                  {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD2_ctrl;
	    struct w32clkD2_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD2;

    typedef union  T32clkD2_ctrl {
		UNSG32 u32;
	    struct w32clkD2_ctrl;
		 } T32clkD2_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD2_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD2_ctrl;
		   };
		 } TclkD2_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD2_drvrd(SIE_clkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD2_drvwr(SIE_clkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD2_reset(SIE_clkD2 *p);
     SIGN32 clkD2_cmp(SIE_clkD2 *p, SIE_clkD2 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD2_check(p, pie, pfx, hLOG) clkD2_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD2_print(p,    pfx, hLOG) clkD2_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD2
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD4                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD4
#define h_clkD4 () {}

    #define     RA_clkD4_ctrl                                  0x0000

    #define     BA_clkD4_ctrl_ClkEn                            0x0000
    #define     B16clkD4_ctrl_ClkEn                            0x0000
    #define   LSb32clkD4_ctrl_ClkEn                               0
    #define   LSb16clkD4_ctrl_ClkEn                               0
    #define       bclkD4_ctrl_ClkEn                            1
    #define   MSK32clkD4_ctrl_ClkEn                               0x00000001
    #define        clkD4_ctrl_ClkEn_enable                                  0x1
    #define        clkD4_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD4_ctrl_ClkPllSel                        0x0000
    #define     B16clkD4_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD4_ctrl_ClkPllSel                           1
    #define   LSb16clkD4_ctrl_ClkPllSel                           1
    #define       bclkD4_ctrl_ClkPllSel                        3
    #define   MSK32clkD4_ctrl_ClkPllSel                           0x0000000E
    #define        clkD4_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD4_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD4_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD4_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD4_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD4_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD4_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD4_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD4_ctrl_ClkPllSwitch                        4
    #define       bclkD4_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD4_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD4_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD4_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD4_ctrl_ClkSwitch                        0x0000
    #define     B16clkD4_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD4_ctrl_ClkSwitch                           5
    #define   LSb16clkD4_ctrl_ClkSwitch                           5
    #define       bclkD4_ctrl_ClkSwitch                        1
    #define   MSK32clkD4_ctrl_ClkSwitch                           0x00000020
    #define        clkD4_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD4_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD4_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD4_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD4_ctrl_ClkD3Switch                         6
    #define   LSb16clkD4_ctrl_ClkD3Switch                         6
    #define       bclkD4_ctrl_ClkD3Switch                      1
    #define   MSK32clkD4_ctrl_ClkD3Switch                         0x00000040
    #define        clkD4_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD4_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD4_ctrl_ClkSel                           0x0000
    #define     B16clkD4_ctrl_ClkSel                           0x0000
    #define   LSb32clkD4_ctrl_ClkSel                              7
    #define   LSb16clkD4_ctrl_ClkSel                              7
    #define       bclkD4_ctrl_ClkSel                           3
    #define   MSK32clkD4_ctrl_ClkSel                              0x00000380
    #define        clkD4_ctrl_ClkSel_d2                                     0x1
    #define        clkD4_ctrl_ClkSel_d4                                     0x2
    #define        clkD4_ctrl_ClkSel_d6                                     0x3
    #define        clkD4_ctrl_ClkSel_d8                                     0x4
    #define        clkD4_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD4 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD4_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD4_ctrl_ClkEn(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16clkD4_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD4_ctrl_ClkEn(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32clkD4_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD4_ctrl_ClkPllSel(r32, v)                 _BFSET_(r32, 3, 1, v)
    #define   GET16clkD4_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD4_ctrl_ClkPllSel(r16, v)                 _BFSET_(r16, 3, 1, v)

    #define   GET32clkD4_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD4_ctrl_ClkPllSwitch(r32, v)              _BFSET_(r32, 4, 4, v)
    #define   GET16clkD4_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD4_ctrl_ClkPllSwitch(r16, v)              _BFSET_(r16, 4, 4, v)

    #define   GET32clkD4_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD4_ctrl_ClkSwitch(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16clkD4_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD4_ctrl_ClkSwitch(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32clkD4_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD4_ctrl_ClkD3Switch(r32, v)               _BFSET_(r32, 6, 6, v)
    #define   GET16clkD4_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD4_ctrl_ClkD3Switch(r16, v)               _BFSET_(r16, 6, 6, v)

    #define   GET32clkD4_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD4_ctrl_ClkSel(r32, v)                    _BFSET_(r32, 9, 7, v)
    #define   GET16clkD4_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD4_ctrl_ClkSel(r16, v)                    _BFSET_(r16, 9, 7, v)

    #define     w32clkD4_ctrl                                  {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD4_ctrl;
	    struct w32clkD4_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD4;

    typedef union  T32clkD4_ctrl {
		UNSG32 u32;
	    struct w32clkD4_ctrl;
		 } T32clkD4_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD4_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD4_ctrl;
		   };
		 } TclkD4_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD4_drvrd(SIE_clkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD4_drvwr(SIE_clkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD4_reset(SIE_clkD4 *p);
     SIGN32 clkD4_cmp(SIE_clkD4 *p, SIE_clkD4 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD4_check(p, pie, pfx, hLOG) clkD4_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD4_print(p,    pfx, hLOG) clkD4_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD4
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD6                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x3
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD6
#define h_clkD6 () {}

    #define     RA_clkD6_ctrl                                  0x0000

    #define     BA_clkD6_ctrl_ClkEn                            0x0000
    #define     B16clkD6_ctrl_ClkEn                            0x0000
    #define   LSb32clkD6_ctrl_ClkEn                               0
    #define   LSb16clkD6_ctrl_ClkEn                               0
    #define       bclkD6_ctrl_ClkEn                            1
    #define   MSK32clkD6_ctrl_ClkEn                               0x00000001
    #define        clkD6_ctrl_ClkEn_enable                                  0x1
    #define        clkD6_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD6_ctrl_ClkPllSel                        0x0000
    #define     B16clkD6_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD6_ctrl_ClkPllSel                           1
    #define   LSb16clkD6_ctrl_ClkPllSel                           1
    #define       bclkD6_ctrl_ClkPllSel                        3
    #define   MSK32clkD6_ctrl_ClkPllSel                           0x0000000E
    #define        clkD6_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD6_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD6_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD6_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD6_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD6_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD6_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD6_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD6_ctrl_ClkPllSwitch                        4
    #define       bclkD6_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD6_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD6_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD6_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD6_ctrl_ClkSwitch                        0x0000
    #define     B16clkD6_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD6_ctrl_ClkSwitch                           5
    #define   LSb16clkD6_ctrl_ClkSwitch                           5
    #define       bclkD6_ctrl_ClkSwitch                        1
    #define   MSK32clkD6_ctrl_ClkSwitch                           0x00000020
    #define        clkD6_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD6_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD6_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD6_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD6_ctrl_ClkD3Switch                         6
    #define   LSb16clkD6_ctrl_ClkD3Switch                         6
    #define       bclkD6_ctrl_ClkD3Switch                      1
    #define   MSK32clkD6_ctrl_ClkD3Switch                         0x00000040
    #define        clkD6_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD6_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD6_ctrl_ClkSel                           0x0000
    #define     B16clkD6_ctrl_ClkSel                           0x0000
    #define   LSb32clkD6_ctrl_ClkSel                              7
    #define   LSb16clkD6_ctrl_ClkSel                              7
    #define       bclkD6_ctrl_ClkSel                           3
    #define   MSK32clkD6_ctrl_ClkSel                              0x00000380
    #define        clkD6_ctrl_ClkSel_d2                                     0x1
    #define        clkD6_ctrl_ClkSel_d4                                     0x2
    #define        clkD6_ctrl_ClkSel_d6                                     0x3
    #define        clkD6_ctrl_ClkSel_d8                                     0x4
    #define        clkD6_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD6 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD6_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD6_ctrl_ClkEn(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16clkD6_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD6_ctrl_ClkEn(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32clkD6_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD6_ctrl_ClkPllSel(r32, v)                 _BFSET_(r32, 3, 1, v)
    #define   GET16clkD6_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD6_ctrl_ClkPllSel(r16, v)                 _BFSET_(r16, 3, 1, v)

    #define   GET32clkD6_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD6_ctrl_ClkPllSwitch(r32, v)              _BFSET_(r32, 4, 4, v)
    #define   GET16clkD6_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD6_ctrl_ClkPllSwitch(r16, v)              _BFSET_(r16, 4, 4, v)

    #define   GET32clkD6_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD6_ctrl_ClkSwitch(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16clkD6_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD6_ctrl_ClkSwitch(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32clkD6_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD6_ctrl_ClkD3Switch(r32, v)               _BFSET_(r32, 6, 6, v)
    #define   GET16clkD6_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD6_ctrl_ClkD3Switch(r16, v)               _BFSET_(r16, 6, 6, v)

    #define   GET32clkD6_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD6_ctrl_ClkSel(r32, v)                    _BFSET_(r32, 9, 7, v)
    #define   GET16clkD6_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD6_ctrl_ClkSel(r16, v)                    _BFSET_(r16, 9, 7, v)

    #define     w32clkD6_ctrl                                  {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD6_ctrl;
	    struct w32clkD6_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD6;

    typedef union  T32clkD6_ctrl {
		UNSG32 u32;
	    struct w32clkD6_ctrl;
		 } T32clkD6_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD6_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD6_ctrl;
		   };
		 } TclkD6_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD6_drvrd(SIE_clkD6 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD6_drvwr(SIE_clkD6 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD6_reset(SIE_clkD6 *p);
     SIGN32 clkD6_cmp(SIE_clkD6 *p, SIE_clkD6 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD6_check(p, pie, pfx, hLOG) clkD6_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD6_print(p,    pfx, hLOG) clkD6_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD6
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD8                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT (0)
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD8
#define h_clkD8 () {}

    #define     RA_clkD8_ctrl                                  0x0000

    #define     BA_clkD8_ctrl_ClkEn                            0x0000
    #define     B16clkD8_ctrl_ClkEn                            0x0000
    #define   LSb32clkD8_ctrl_ClkEn                               0
    #define   LSb16clkD8_ctrl_ClkEn                               0
    #define       bclkD8_ctrl_ClkEn                            1
    #define   MSK32clkD8_ctrl_ClkEn                               0x00000001
    #define        clkD8_ctrl_ClkEn_enable                                  0x1
    #define        clkD8_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD8_ctrl_ClkPllSel                        0x0000
    #define     B16clkD8_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD8_ctrl_ClkPllSel                           1
    #define   LSb16clkD8_ctrl_ClkPllSel                           1
    #define       bclkD8_ctrl_ClkPllSel                        3
    #define   MSK32clkD8_ctrl_ClkPllSel                           0x0000000E
    #define        clkD8_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD8_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD8_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD8_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD8_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD8_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD8_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD8_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD8_ctrl_ClkPllSwitch                        4
    #define       bclkD8_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD8_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD8_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD8_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD8_ctrl_ClkSwitch                        0x0000
    #define     B16clkD8_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD8_ctrl_ClkSwitch                           5
    #define   LSb16clkD8_ctrl_ClkSwitch                           5
    #define       bclkD8_ctrl_ClkSwitch                        1
    #define   MSK32clkD8_ctrl_ClkSwitch                           0x00000020
    #define        clkD8_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD8_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD8_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD8_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD8_ctrl_ClkD3Switch                         6
    #define   LSb16clkD8_ctrl_ClkD3Switch                         6
    #define       bclkD8_ctrl_ClkD3Switch                      1
    #define   MSK32clkD8_ctrl_ClkD3Switch                         0x00000040
    #define        clkD8_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD8_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD8_ctrl_ClkSel                           0x0000
    #define     B16clkD8_ctrl_ClkSel                           0x0000
    #define   LSb32clkD8_ctrl_ClkSel                              7
    #define   LSb16clkD8_ctrl_ClkSel                              7
    #define       bclkD8_ctrl_ClkSel                           3
    #define   MSK32clkD8_ctrl_ClkSel                              0x00000380
    #define        clkD8_ctrl_ClkSel_d2                                     0x1
    #define        clkD8_ctrl_ClkSel_d4                                     0x2
    #define        clkD8_ctrl_ClkSel_d6                                     0x3
    #define        clkD8_ctrl_ClkSel_d8                                     0x4
    #define        clkD8_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD8 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD8_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD8_ctrl_ClkEn(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16clkD8_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD8_ctrl_ClkEn(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32clkD8_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD8_ctrl_ClkPllSel(r32, v)                 _BFSET_(r32, 3, 1, v)
    #define   GET16clkD8_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD8_ctrl_ClkPllSel(r16, v)                 _BFSET_(r16, 3, 1, v)

    #define   GET32clkD8_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD8_ctrl_ClkPllSwitch(r32, v)              _BFSET_(r32, 4, 4, v)
    #define   GET16clkD8_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD8_ctrl_ClkPllSwitch(r16, v)              _BFSET_(r16, 4, 4, v)

    #define   GET32clkD8_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD8_ctrl_ClkSwitch(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16clkD8_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD8_ctrl_ClkSwitch(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32clkD8_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD8_ctrl_ClkD3Switch(r32, v)               _BFSET_(r32, 6, 6, v)
    #define   GET16clkD8_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD8_ctrl_ClkD3Switch(r16, v)               _BFSET_(r16, 6, 6, v)

    #define   GET32clkD8_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD8_ctrl_ClkSel(r32, v)                    _BFSET_(r32, 9, 7, v)
    #define   GET16clkD8_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD8_ctrl_ClkSel(r16, v)                    _BFSET_(r16, 9, 7, v)

    #define     w32clkD8_ctrl                                  {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD8_ctrl;
	    struct w32clkD8_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD8;

    typedef union  T32clkD8_ctrl {
		UNSG32 u32;
	    struct w32clkD8_ctrl;
		 } T32clkD8_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD8_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD8_ctrl;
		   };
		 } TclkD8_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD8_drvrd(SIE_clkD8 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD8_drvwr(SIE_clkD8 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD8_reset(SIE_clkD8 *p);
     SIGN32 clkD8_cmp(SIE_clkD8 *p, SIE_clkD8 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD8_check(p, pie, pfx, hLOG) clkD8_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD8_print(p,    pfx, hLOG) clkD8_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD8
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD12                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x5
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD12
#define h_clkD12 () {}

    #define     RA_clkD12_ctrl                                 0x0000

    #define     BA_clkD12_ctrl_ClkEn                           0x0000
    #define     B16clkD12_ctrl_ClkEn                           0x0000
    #define   LSb32clkD12_ctrl_ClkEn                              0
    #define   LSb16clkD12_ctrl_ClkEn                              0
    #define       bclkD12_ctrl_ClkEn                           1
    #define   MSK32clkD12_ctrl_ClkEn                              0x00000001
    #define        clkD12_ctrl_ClkEn_enable                                 0x1
    #define        clkD12_ctrl_ClkEn_disable                                0x0

    #define     BA_clkD12_ctrl_ClkPllSel                       0x0000
    #define     B16clkD12_ctrl_ClkPllSel                       0x0000
    #define   LSb32clkD12_ctrl_ClkPllSel                          1
    #define   LSb16clkD12_ctrl_ClkPllSel                          1
    #define       bclkD12_ctrl_ClkPllSel                       3
    #define   MSK32clkD12_ctrl_ClkPllSel                          0x0000000E
    #define        clkD12_ctrl_ClkPllSel_CLKSRC0                            0x0
    #define        clkD12_ctrl_ClkPllSel_CLKSRC1                            0x1
    #define        clkD12_ctrl_ClkPllSel_CLKSRC2                            0x2
    #define        clkD12_ctrl_ClkPllSel_CLKSRC3                            0x3
    #define        clkD12_ctrl_ClkPllSel_CLKSRC4                            0x4

    #define     BA_clkD12_ctrl_ClkPllSwitch                    0x0000
    #define     B16clkD12_ctrl_ClkPllSwitch                    0x0000
    #define   LSb32clkD12_ctrl_ClkPllSwitch                       4
    #define   LSb16clkD12_ctrl_ClkPllSwitch                       4
    #define       bclkD12_ctrl_ClkPllSwitch                    1
    #define   MSK32clkD12_ctrl_ClkPllSwitch                       0x00000010
    #define        clkD12_ctrl_ClkPllSwitch_SYSPLL                          0x0
    #define        clkD12_ctrl_ClkPllSwitch_ALTPLL                          0x1

    #define     BA_clkD12_ctrl_ClkSwitch                       0x0000
    #define     B16clkD12_ctrl_ClkSwitch                       0x0000
    #define   LSb32clkD12_ctrl_ClkSwitch                          5
    #define   LSb16clkD12_ctrl_ClkSwitch                          5
    #define       bclkD12_ctrl_ClkSwitch                       1
    #define   MSK32clkD12_ctrl_ClkSwitch                          0x00000020
    #define        clkD12_ctrl_ClkSwitch_SrcClk                             0x0
    #define        clkD12_ctrl_ClkSwitch_DivClk                             0x1

    #define     BA_clkD12_ctrl_ClkD3Switch                     0x0000
    #define     B16clkD12_ctrl_ClkD3Switch                     0x0000
    #define   LSb32clkD12_ctrl_ClkD3Switch                        6
    #define   LSb16clkD12_ctrl_ClkD3Switch                        6
    #define       bclkD12_ctrl_ClkD3Switch                     1
    #define   MSK32clkD12_ctrl_ClkD3Switch                        0x00000040
    #define        clkD12_ctrl_ClkD3Switch_NonDiv3Clk                       0x0
    #define        clkD12_ctrl_ClkD3Switch_Div3Clk                          0x1

    #define     BA_clkD12_ctrl_ClkSel                          0x0000
    #define     B16clkD12_ctrl_ClkSel                          0x0000
    #define   LSb32clkD12_ctrl_ClkSel                             7
    #define   LSb16clkD12_ctrl_ClkSel                             7
    #define       bclkD12_ctrl_ClkSel                          3
    #define   MSK32clkD12_ctrl_ClkSel                             0x00000380
    #define        clkD12_ctrl_ClkSel_d2                                    0x1
    #define        clkD12_ctrl_ClkSel_d4                                    0x2
    #define        clkD12_ctrl_ClkSel_d6                                    0x3
    #define        clkD12_ctrl_ClkSel_d8                                    0x4
    #define        clkD12_ctrl_ClkSel_d12                                   0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD12 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD12_ctrl_ClkEn(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32clkD12_ctrl_ClkEn(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16clkD12_ctrl_ClkEn(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16clkD12_ctrl_ClkEn(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32clkD12_ctrl_ClkPllSel(r32)                  _BFGET_(r32, 3, 1)
    #define   SET32clkD12_ctrl_ClkPllSel(r32, v)                _BFSET_(r32, 3, 1, v)
    #define   GET16clkD12_ctrl_ClkPllSel(r16)                  _BFGET_(r16, 3, 1)
    #define   SET16clkD12_ctrl_ClkPllSel(r16, v)                _BFSET_(r16, 3, 1, v)

    #define   GET32clkD12_ctrl_ClkPllSwitch(r32)               _BFGET_(r32, 4, 4)
    #define   SET32clkD12_ctrl_ClkPllSwitch(r32, v)             _BFSET_(r32, 4, 4, v)
    #define   GET16clkD12_ctrl_ClkPllSwitch(r16)               _BFGET_(r16, 4, 4)
    #define   SET16clkD12_ctrl_ClkPllSwitch(r16, v)             _BFSET_(r16, 4, 4, v)

    #define   GET32clkD12_ctrl_ClkSwitch(r32)                  _BFGET_(r32, 5, 5)
    #define   SET32clkD12_ctrl_ClkSwitch(r32, v)                _BFSET_(r32, 5, 5, v)
    #define   GET16clkD12_ctrl_ClkSwitch(r16)                  _BFGET_(r16, 5, 5)
    #define   SET16clkD12_ctrl_ClkSwitch(r16, v)                _BFSET_(r16, 5, 5, v)

    #define   GET32clkD12_ctrl_ClkD3Switch(r32)                _BFGET_(r32, 6, 6)
    #define   SET32clkD12_ctrl_ClkD3Switch(r32, v)              _BFSET_(r32, 6, 6, v)
    #define   GET16clkD12_ctrl_ClkD3Switch(r16)                _BFGET_(r16, 6, 6)
    #define   SET16clkD12_ctrl_ClkD3Switch(r16, v)              _BFSET_(r16, 6, 6, v)

    #define   GET32clkD12_ctrl_ClkSel(r32)                     _BFGET_(r32, 9, 7)
    #define   SET32clkD12_ctrl_ClkSel(r32, v)                   _BFSET_(r32, 9, 7, v)
    #define   GET16clkD12_ctrl_ClkSel(r16)                     _BFGET_(r16, 9, 7)
    #define   SET16clkD12_ctrl_ClkSel(r16, v)                   _BFSET_(r16, 9, 7, v)

    #define     w32clkD12_ctrl                                 {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD12_ctrl;
	    struct w32clkD12_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD12;

    typedef union  T32clkD12_ctrl {
		UNSG32 u32;
	    struct w32clkD12_ctrl;
		 } T32clkD12_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD12_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD12_ctrl;
		   };
		 } TclkD12_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD12_drvrd(SIE_clkD12 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD12_drvwr(SIE_clkD12 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD12_reset(SIE_clkD12 *p);
     SIGN32 clkD12_cmp(SIE_clkD12 *p, SIE_clkD12 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD12_check(p, pie, pfx, hLOG) clkD12_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD12_print(p,    pfx, hLOG) clkD12_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD12
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD4_ENOFF                              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD4_ENOFF
#define h_clkD4_ENOFF () {}

    #define     RA_clkD4_ENOFF_ctrl                            0x0000

    #define     BA_clkD4_ENOFF_ctrl_ClkEn                      0x0000
    #define     B16clkD4_ENOFF_ctrl_ClkEn                      0x0000
    #define   LSb32clkD4_ENOFF_ctrl_ClkEn                         0
    #define   LSb16clkD4_ENOFF_ctrl_ClkEn                         0
    #define       bclkD4_ENOFF_ctrl_ClkEn                      1
    #define   MSK32clkD4_ENOFF_ctrl_ClkEn                         0x00000001
    #define        clkD4_ENOFF_ctrl_ClkEn_enable                            0x1
    #define        clkD4_ENOFF_ctrl_ClkEn_disable                           0x0

    #define     BA_clkD4_ENOFF_ctrl_ClkPllSel                  0x0000
    #define     B16clkD4_ENOFF_ctrl_ClkPllSel                  0x0000
    #define   LSb32clkD4_ENOFF_ctrl_ClkPllSel                     1
    #define   LSb16clkD4_ENOFF_ctrl_ClkPllSel                     1
    #define       bclkD4_ENOFF_ctrl_ClkPllSel                  3
    #define   MSK32clkD4_ENOFF_ctrl_ClkPllSel                     0x0000000E
    #define        clkD4_ENOFF_ctrl_ClkPllSel_CLKSRC0                       0x0
    #define        clkD4_ENOFF_ctrl_ClkPllSel_CLKSRC1                       0x1
    #define        clkD4_ENOFF_ctrl_ClkPllSel_CLKSRC2                       0x2
    #define        clkD4_ENOFF_ctrl_ClkPllSel_CLKSRC3                       0x3
    #define        clkD4_ENOFF_ctrl_ClkPllSel_CLKSRC4                       0x4

    #define     BA_clkD4_ENOFF_ctrl_ClkPllSwitch               0x0000
    #define     B16clkD4_ENOFF_ctrl_ClkPllSwitch               0x0000
    #define   LSb32clkD4_ENOFF_ctrl_ClkPllSwitch                  4
    #define   LSb16clkD4_ENOFF_ctrl_ClkPllSwitch                  4
    #define       bclkD4_ENOFF_ctrl_ClkPllSwitch               1
    #define   MSK32clkD4_ENOFF_ctrl_ClkPllSwitch                  0x00000010
    #define        clkD4_ENOFF_ctrl_ClkPllSwitch_SYSPLL                     0x0
    #define        clkD4_ENOFF_ctrl_ClkPllSwitch_ALTPLL                     0x1

    #define     BA_clkD4_ENOFF_ctrl_ClkSwitch                  0x0000
    #define     B16clkD4_ENOFF_ctrl_ClkSwitch                  0x0000
    #define   LSb32clkD4_ENOFF_ctrl_ClkSwitch                     5
    #define   LSb16clkD4_ENOFF_ctrl_ClkSwitch                     5
    #define       bclkD4_ENOFF_ctrl_ClkSwitch                  1
    #define   MSK32clkD4_ENOFF_ctrl_ClkSwitch                     0x00000020
    #define        clkD4_ENOFF_ctrl_ClkSwitch_SrcClk                        0x0
    #define        clkD4_ENOFF_ctrl_ClkSwitch_DivClk                        0x1

    #define     BA_clkD4_ENOFF_ctrl_ClkD3Switch                0x0000
    #define     B16clkD4_ENOFF_ctrl_ClkD3Switch                0x0000
    #define   LSb32clkD4_ENOFF_ctrl_ClkD3Switch                   6
    #define   LSb16clkD4_ENOFF_ctrl_ClkD3Switch                   6
    #define       bclkD4_ENOFF_ctrl_ClkD3Switch                1
    #define   MSK32clkD4_ENOFF_ctrl_ClkD3Switch                   0x00000040
    #define        clkD4_ENOFF_ctrl_ClkD3Switch_NonDiv3Clk                  0x0
    #define        clkD4_ENOFF_ctrl_ClkD3Switch_Div3Clk                     0x1

    #define     BA_clkD4_ENOFF_ctrl_ClkSel                     0x0000
    #define     B16clkD4_ENOFF_ctrl_ClkSel                     0x0000
    #define   LSb32clkD4_ENOFF_ctrl_ClkSel                        7
    #define   LSb16clkD4_ENOFF_ctrl_ClkSel                        7
    #define       bclkD4_ENOFF_ctrl_ClkSel                     3
    #define   MSK32clkD4_ENOFF_ctrl_ClkSel                        0x00000380
    #define        clkD4_ENOFF_ctrl_ClkSel_d2                               0x1
    #define        clkD4_ENOFF_ctrl_ClkSel_d4                               0x2
    #define        clkD4_ENOFF_ctrl_ClkSel_d6                               0x3
    #define        clkD4_ENOFF_ctrl_ClkSel_d8                               0x4
    #define        clkD4_ENOFF_ctrl_ClkSel_d12                              0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD4_ENOFF {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD4_ENOFF_ctrl_ClkEn(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32clkD4_ENOFF_ctrl_ClkEn(r32, v)               _BFSET_(r32, 0, 0, v)
    #define   GET16clkD4_ENOFF_ctrl_ClkEn(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16clkD4_ENOFF_ctrl_ClkEn(r16, v)               _BFSET_(r16, 0, 0, v)

    #define   GET32clkD4_ENOFF_ctrl_ClkPllSel(r32)             _BFGET_(r32, 3, 1)
    #define   SET32clkD4_ENOFF_ctrl_ClkPllSel(r32, v)           _BFSET_(r32, 3, 1, v)
    #define   GET16clkD4_ENOFF_ctrl_ClkPllSel(r16)             _BFGET_(r16, 3, 1)
    #define   SET16clkD4_ENOFF_ctrl_ClkPllSel(r16, v)           _BFSET_(r16, 3, 1, v)

    #define   GET32clkD4_ENOFF_ctrl_ClkPllSwitch(r32)          _BFGET_(r32, 4, 4)
    #define   SET32clkD4_ENOFF_ctrl_ClkPllSwitch(r32, v)        _BFSET_(r32, 4, 4, v)
    #define   GET16clkD4_ENOFF_ctrl_ClkPllSwitch(r16)          _BFGET_(r16, 4, 4)
    #define   SET16clkD4_ENOFF_ctrl_ClkPllSwitch(r16, v)        _BFSET_(r16, 4, 4, v)

    #define   GET32clkD4_ENOFF_ctrl_ClkSwitch(r32)             _BFGET_(r32, 5, 5)
    #define   SET32clkD4_ENOFF_ctrl_ClkSwitch(r32, v)           _BFSET_(r32, 5, 5, v)
    #define   GET16clkD4_ENOFF_ctrl_ClkSwitch(r16)             _BFGET_(r16, 5, 5)
    #define   SET16clkD4_ENOFF_ctrl_ClkSwitch(r16, v)           _BFSET_(r16, 5, 5, v)

    #define   GET32clkD4_ENOFF_ctrl_ClkD3Switch(r32)           _BFGET_(r32, 6, 6)
    #define   SET32clkD4_ENOFF_ctrl_ClkD3Switch(r32, v)         _BFSET_(r32, 6, 6, v)
    #define   GET16clkD4_ENOFF_ctrl_ClkD3Switch(r16)           _BFGET_(r16, 6, 6)
    #define   SET16clkD4_ENOFF_ctrl_ClkD3Switch(r16, v)         _BFSET_(r16, 6, 6, v)

    #define   GET32clkD4_ENOFF_ctrl_ClkSel(r32)                _BFGET_(r32, 9, 7)
    #define   SET32clkD4_ENOFF_ctrl_ClkSel(r32, v)              _BFSET_(r32, 9, 7, v)
    #define   GET16clkD4_ENOFF_ctrl_ClkSel(r16)                _BFGET_(r16, 9, 7)
    #define   SET16clkD4_ENOFF_ctrl_ClkSel(r16, v)              _BFSET_(r16, 9, 7, v)

    #define     w32clkD4_ENOFF_ctrl                            {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD4_ENOFF_ctrl;
	    struct w32clkD4_ENOFF_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD4_ENOFF;

    typedef union  T32clkD4_ENOFF_ctrl {
		UNSG32 u32;
	    struct w32clkD4_ENOFF_ctrl;
		 } T32clkD4_ENOFF_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD4_ENOFF_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD4_ENOFF_ctrl;
		   };
		 } TclkD4_ENOFF_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD4_ENOFF_drvrd(SIE_clkD4_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD4_ENOFF_drvwr(SIE_clkD4_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD4_ENOFF_reset(SIE_clkD4_ENOFF *p);
     SIGN32 clkD4_ENOFF_cmp(SIE_clkD4_ENOFF *p, SIE_clkD4_ENOFF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD4_ENOFF_check(p, pie, pfx, hLOG) clkD4_ENOFF_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD4_ENOFF_print(p,    pfx, hLOG) clkD4_ENOFF_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD4_ENOFF
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD8_ENOFF                              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD8_ENOFF
#define h_clkD8_ENOFF () {}

    #define     RA_clkD8_ENOFF_ctrl                            0x0000

    #define     BA_clkD8_ENOFF_ctrl_ClkEn                      0x0000
    #define     B16clkD8_ENOFF_ctrl_ClkEn                      0x0000
    #define   LSb32clkD8_ENOFF_ctrl_ClkEn                         0
    #define   LSb16clkD8_ENOFF_ctrl_ClkEn                         0
    #define       bclkD8_ENOFF_ctrl_ClkEn                      1
    #define   MSK32clkD8_ENOFF_ctrl_ClkEn                         0x00000001
    #define        clkD8_ENOFF_ctrl_ClkEn_enable                            0x1
    #define        clkD8_ENOFF_ctrl_ClkEn_disable                           0x0

    #define     BA_clkD8_ENOFF_ctrl_ClkPllSel                  0x0000
    #define     B16clkD8_ENOFF_ctrl_ClkPllSel                  0x0000
    #define   LSb32clkD8_ENOFF_ctrl_ClkPllSel                     1
    #define   LSb16clkD8_ENOFF_ctrl_ClkPllSel                     1
    #define       bclkD8_ENOFF_ctrl_ClkPllSel                  3
    #define   MSK32clkD8_ENOFF_ctrl_ClkPllSel                     0x0000000E
    #define        clkD8_ENOFF_ctrl_ClkPllSel_CLKSRC0                       0x0
    #define        clkD8_ENOFF_ctrl_ClkPllSel_CLKSRC1                       0x1
    #define        clkD8_ENOFF_ctrl_ClkPllSel_CLKSRC2                       0x2
    #define        clkD8_ENOFF_ctrl_ClkPllSel_CLKSRC3                       0x3
    #define        clkD8_ENOFF_ctrl_ClkPllSel_CLKSRC4                       0x4

    #define     BA_clkD8_ENOFF_ctrl_ClkPllSwitch               0x0000
    #define     B16clkD8_ENOFF_ctrl_ClkPllSwitch               0x0000
    #define   LSb32clkD8_ENOFF_ctrl_ClkPllSwitch                  4
    #define   LSb16clkD8_ENOFF_ctrl_ClkPllSwitch                  4
    #define       bclkD8_ENOFF_ctrl_ClkPllSwitch               1
    #define   MSK32clkD8_ENOFF_ctrl_ClkPllSwitch                  0x00000010
    #define        clkD8_ENOFF_ctrl_ClkPllSwitch_SYSPLL                     0x0
    #define        clkD8_ENOFF_ctrl_ClkPllSwitch_ALTPLL                     0x1

    #define     BA_clkD8_ENOFF_ctrl_ClkSwitch                  0x0000
    #define     B16clkD8_ENOFF_ctrl_ClkSwitch                  0x0000
    #define   LSb32clkD8_ENOFF_ctrl_ClkSwitch                     5
    #define   LSb16clkD8_ENOFF_ctrl_ClkSwitch                     5
    #define       bclkD8_ENOFF_ctrl_ClkSwitch                  1
    #define   MSK32clkD8_ENOFF_ctrl_ClkSwitch                     0x00000020
    #define        clkD8_ENOFF_ctrl_ClkSwitch_SrcClk                        0x0
    #define        clkD8_ENOFF_ctrl_ClkSwitch_DivClk                        0x1

    #define     BA_clkD8_ENOFF_ctrl_ClkD3Switch                0x0000
    #define     B16clkD8_ENOFF_ctrl_ClkD3Switch                0x0000
    #define   LSb32clkD8_ENOFF_ctrl_ClkD3Switch                   6
    #define   LSb16clkD8_ENOFF_ctrl_ClkD3Switch                   6
    #define       bclkD8_ENOFF_ctrl_ClkD3Switch                1
    #define   MSK32clkD8_ENOFF_ctrl_ClkD3Switch                   0x00000040
    #define        clkD8_ENOFF_ctrl_ClkD3Switch_NonDiv3Clk                  0x0
    #define        clkD8_ENOFF_ctrl_ClkD3Switch_Div3Clk                     0x1

    #define     BA_clkD8_ENOFF_ctrl_ClkSel                     0x0000
    #define     B16clkD8_ENOFF_ctrl_ClkSel                     0x0000
    #define   LSb32clkD8_ENOFF_ctrl_ClkSel                        7
    #define   LSb16clkD8_ENOFF_ctrl_ClkSel                        7
    #define       bclkD8_ENOFF_ctrl_ClkSel                     3
    #define   MSK32clkD8_ENOFF_ctrl_ClkSel                        0x00000380
    #define        clkD8_ENOFF_ctrl_ClkSel_d2                               0x1
    #define        clkD8_ENOFF_ctrl_ClkSel_d4                               0x2
    #define        clkD8_ENOFF_ctrl_ClkSel_d6                               0x3
    #define        clkD8_ENOFF_ctrl_ClkSel_d8                               0x4
    #define        clkD8_ENOFF_ctrl_ClkSel_d12                              0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD8_ENOFF {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD8_ENOFF_ctrl_ClkEn(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32clkD8_ENOFF_ctrl_ClkEn(r32, v)               _BFSET_(r32, 0, 0, v)
    #define   GET16clkD8_ENOFF_ctrl_ClkEn(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16clkD8_ENOFF_ctrl_ClkEn(r16, v)               _BFSET_(r16, 0, 0, v)

    #define   GET32clkD8_ENOFF_ctrl_ClkPllSel(r32)             _BFGET_(r32, 3, 1)
    #define   SET32clkD8_ENOFF_ctrl_ClkPllSel(r32, v)           _BFSET_(r32, 3, 1, v)
    #define   GET16clkD8_ENOFF_ctrl_ClkPllSel(r16)             _BFGET_(r16, 3, 1)
    #define   SET16clkD8_ENOFF_ctrl_ClkPllSel(r16, v)           _BFSET_(r16, 3, 1, v)

    #define   GET32clkD8_ENOFF_ctrl_ClkPllSwitch(r32)          _BFGET_(r32, 4, 4)
    #define   SET32clkD8_ENOFF_ctrl_ClkPllSwitch(r32, v)        _BFSET_(r32, 4, 4, v)
    #define   GET16clkD8_ENOFF_ctrl_ClkPllSwitch(r16)          _BFGET_(r16, 4, 4)
    #define   SET16clkD8_ENOFF_ctrl_ClkPllSwitch(r16, v)        _BFSET_(r16, 4, 4, v)

    #define   GET32clkD8_ENOFF_ctrl_ClkSwitch(r32)             _BFGET_(r32, 5, 5)
    #define   SET32clkD8_ENOFF_ctrl_ClkSwitch(r32, v)           _BFSET_(r32, 5, 5, v)
    #define   GET16clkD8_ENOFF_ctrl_ClkSwitch(r16)             _BFGET_(r16, 5, 5)
    #define   SET16clkD8_ENOFF_ctrl_ClkSwitch(r16, v)           _BFSET_(r16, 5, 5, v)

    #define   GET32clkD8_ENOFF_ctrl_ClkD3Switch(r32)           _BFGET_(r32, 6, 6)
    #define   SET32clkD8_ENOFF_ctrl_ClkD3Switch(r32, v)         _BFSET_(r32, 6, 6, v)
    #define   GET16clkD8_ENOFF_ctrl_ClkD3Switch(r16)           _BFGET_(r16, 6, 6)
    #define   SET16clkD8_ENOFF_ctrl_ClkD3Switch(r16, v)         _BFSET_(r16, 6, 6, v)

    #define   GET32clkD8_ENOFF_ctrl_ClkSel(r32)                _BFGET_(r32, 9, 7)
    #define   SET32clkD8_ENOFF_ctrl_ClkSel(r32, v)              _BFSET_(r32, 9, 7, v)
    #define   GET16clkD8_ENOFF_ctrl_ClkSel(r16)                _BFGET_(r16, 9, 7)
    #define   SET16clkD8_ENOFF_ctrl_ClkSel(r16, v)              _BFSET_(r16, 9, 7, v)

    #define     w32clkD8_ENOFF_ctrl                            {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD8_ENOFF_ctrl;
	    struct w32clkD8_ENOFF_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD8_ENOFF;

    typedef union  T32clkD8_ENOFF_ctrl {
		UNSG32 u32;
	    struct w32clkD8_ENOFF_ctrl;
		 } T32clkD8_ENOFF_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD8_ENOFF_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD8_ENOFF_ctrl;
		   };
		 } TclkD8_ENOFF_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD8_ENOFF_drvrd(SIE_clkD8_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD8_ENOFF_drvwr(SIE_clkD8_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD8_ENOFF_reset(SIE_clkD8_ENOFF *p);
     SIGN32 clkD8_ENOFF_cmp(SIE_clkD8_ENOFF *p, SIE_clkD8_ENOFF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD8_ENOFF_check(p, pie, pfx, hLOG) clkD8_ENOFF_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD8_ENOFF_print(p,    pfx, hLOG) clkD8_ENOFF_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD8_ENOFF
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD12_ENOFF                             (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = APLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SYSPLL0 PLLOUTF
///                                                 * 2: CLKSRC2 = APLL0 PLLOUTF
///                                                 * 3: CLKSRC3 = SYSPLL1 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL  (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x5
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD12_ENOFF
#define h_clkD12_ENOFF () {}

    #define     RA_clkD12_ENOFF_ctrl                           0x0000

    #define     BA_clkD12_ENOFF_ctrl_ClkEn                     0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkEn                     0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkEn                        0
    #define   LSb16clkD12_ENOFF_ctrl_ClkEn                        0
    #define       bclkD12_ENOFF_ctrl_ClkEn                     1
    #define   MSK32clkD12_ENOFF_ctrl_ClkEn                        0x00000001
    #define        clkD12_ENOFF_ctrl_ClkEn_enable                           0x1
    #define        clkD12_ENOFF_ctrl_ClkEn_disable                          0x0

    #define     BA_clkD12_ENOFF_ctrl_ClkPllSel                 0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkPllSel                 0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkPllSel                    1
    #define   LSb16clkD12_ENOFF_ctrl_ClkPllSel                    1
    #define       bclkD12_ENOFF_ctrl_ClkPllSel                 3
    #define   MSK32clkD12_ENOFF_ctrl_ClkPllSel                    0x0000000E
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC0                      0x0
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC1                      0x1
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC2                      0x2
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC3                      0x3
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC4                      0x4

    #define     BA_clkD12_ENOFF_ctrl_ClkPllSwitch              0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkPllSwitch              0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkPllSwitch                 4
    #define   LSb16clkD12_ENOFF_ctrl_ClkPllSwitch                 4
    #define       bclkD12_ENOFF_ctrl_ClkPllSwitch              1
    #define   MSK32clkD12_ENOFF_ctrl_ClkPllSwitch                 0x00000010
    #define        clkD12_ENOFF_ctrl_ClkPllSwitch_SYSPLL                    0x0
    #define        clkD12_ENOFF_ctrl_ClkPllSwitch_ALTPLL                    0x1

    #define     BA_clkD12_ENOFF_ctrl_ClkSwitch                 0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkSwitch                 0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkSwitch                    5
    #define   LSb16clkD12_ENOFF_ctrl_ClkSwitch                    5
    #define       bclkD12_ENOFF_ctrl_ClkSwitch                 1
    #define   MSK32clkD12_ENOFF_ctrl_ClkSwitch                    0x00000020
    #define        clkD12_ENOFF_ctrl_ClkSwitch_SrcClk                       0x0
    #define        clkD12_ENOFF_ctrl_ClkSwitch_DivClk                       0x1

    #define     BA_clkD12_ENOFF_ctrl_ClkD3Switch               0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkD3Switch               0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkD3Switch                  6
    #define   LSb16clkD12_ENOFF_ctrl_ClkD3Switch                  6
    #define       bclkD12_ENOFF_ctrl_ClkD3Switch               1
    #define   MSK32clkD12_ENOFF_ctrl_ClkD3Switch                  0x00000040
    #define        clkD12_ENOFF_ctrl_ClkD3Switch_NonDiv3Clk                 0x0
    #define        clkD12_ENOFF_ctrl_ClkD3Switch_Div3Clk                    0x1

    #define     BA_clkD12_ENOFF_ctrl_ClkSel                    0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkSel                    0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkSel                       7
    #define   LSb16clkD12_ENOFF_ctrl_ClkSel                       7
    #define       bclkD12_ENOFF_ctrl_ClkSel                    3
    #define   MSK32clkD12_ENOFF_ctrl_ClkSel                       0x00000380
    #define        clkD12_ENOFF_ctrl_ClkSel_d2                              0x1
    #define        clkD12_ENOFF_ctrl_ClkSel_d4                              0x2
    #define        clkD12_ENOFF_ctrl_ClkSel_d6                              0x3
    #define        clkD12_ENOFF_ctrl_ClkSel_d8                              0x4
    #define        clkD12_ENOFF_ctrl_ClkSel_d12                             0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD12_ENOFF {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD12_ENOFF_ctrl_ClkEn(r32)                _BFGET_(r32, 0, 0)
    #define   SET32clkD12_ENOFF_ctrl_ClkEn(r32, v)              _BFSET_(r32, 0, 0, v)
    #define   GET16clkD12_ENOFF_ctrl_ClkEn(r16)                _BFGET_(r16, 0, 0)
    #define   SET16clkD12_ENOFF_ctrl_ClkEn(r16, v)              _BFSET_(r16, 0, 0, v)

    #define   GET32clkD12_ENOFF_ctrl_ClkPllSel(r32)            _BFGET_(r32, 3, 1)
    #define   SET32clkD12_ENOFF_ctrl_ClkPllSel(r32, v)          _BFSET_(r32, 3, 1, v)
    #define   GET16clkD12_ENOFF_ctrl_ClkPllSel(r16)            _BFGET_(r16, 3, 1)
    #define   SET16clkD12_ENOFF_ctrl_ClkPllSel(r16, v)          _BFSET_(r16, 3, 1, v)

    #define   GET32clkD12_ENOFF_ctrl_ClkPllSwitch(r32)         _BFGET_(r32, 4, 4)
    #define   SET32clkD12_ENOFF_ctrl_ClkPllSwitch(r32, v)       _BFSET_(r32, 4, 4, v)
    #define   GET16clkD12_ENOFF_ctrl_ClkPllSwitch(r16)         _BFGET_(r16, 4, 4)
    #define   SET16clkD12_ENOFF_ctrl_ClkPllSwitch(r16, v)       _BFSET_(r16, 4, 4, v)

    #define   GET32clkD12_ENOFF_ctrl_ClkSwitch(r32)            _BFGET_(r32, 5, 5)
    #define   SET32clkD12_ENOFF_ctrl_ClkSwitch(r32, v)          _BFSET_(r32, 5, 5, v)
    #define   GET16clkD12_ENOFF_ctrl_ClkSwitch(r16)            _BFGET_(r16, 5, 5)
    #define   SET16clkD12_ENOFF_ctrl_ClkSwitch(r16, v)          _BFSET_(r16, 5, 5, v)

    #define   GET32clkD12_ENOFF_ctrl_ClkD3Switch(r32)          _BFGET_(r32, 6, 6)
    #define   SET32clkD12_ENOFF_ctrl_ClkD3Switch(r32, v)        _BFSET_(r32, 6, 6, v)
    #define   GET16clkD12_ENOFF_ctrl_ClkD3Switch(r16)          _BFGET_(r16, 6, 6)
    #define   SET16clkD12_ENOFF_ctrl_ClkD3Switch(r16, v)        _BFSET_(r16, 6, 6, v)

    #define   GET32clkD12_ENOFF_ctrl_ClkSel(r32)               _BFGET_(r32, 9, 7)
    #define   SET32clkD12_ENOFF_ctrl_ClkSel(r32, v)             _BFSET_(r32, 9, 7, v)
    #define   GET16clkD12_ENOFF_ctrl_ClkSel(r16)               _BFGET_(r16, 9, 7)
    #define   SET16clkD12_ENOFF_ctrl_ClkSel(r16, v)             _BFSET_(r16, 9, 7, v)

    #define     w32clkD12_ENOFF_ctrl                           {\
	    UNSG32 uctrl_ClkEn                                 :  1;\
	    UNSG32 uctrl_ClkPllSel                             :  3;\
	    UNSG32 uctrl_ClkPllSwitch                          :  1;\
	    UNSG32 uctrl_ClkSwitch                             :  1;\
	    UNSG32 uctrl_ClkD3Switch                           :  1;\
	    UNSG32 uctrl_ClkSel                                :  3;\
	    UNSG32 RSVDx0_b10                                  : 22;\
	}
    union { UNSG32 u32clkD12_ENOFF_ctrl;
	    struct w32clkD12_ENOFF_ctrl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_clkD12_ENOFF;

    typedef union  T32clkD12_ENOFF_ctrl {
		UNSG32 u32;
	    struct w32clkD12_ENOFF_ctrl;
		 } T32clkD12_ENOFF_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD12_ENOFF_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32clkD12_ENOFF_ctrl;
		   };
		 } TclkD12_ENOFF_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD12_ENOFF_drvrd(SIE_clkD12_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD12_ENOFF_drvwr(SIE_clkD12_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD12_ENOFF_reset(SIE_clkD12_ENOFF *p);
     SIGN32 clkD12_ENOFF_cmp(SIE_clkD12_ENOFF *p, SIE_clkD12_ENOFF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD12_ENOFF_check(p, pie, pfx, hLOG) clkD12_ENOFF_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define clkD12_ENOFF_print(p,    pfx, hLOG) clkD12_ENOFF_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: clkD12_ENOFF
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE PERIF                   biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 PHY_DBG_CTRL         (P)
///               %unsigned 3  perif_dbg_sel             0x0
///                                    ###
///                                    * 3'b000 : usb3Top debug bus
///                                    * 3'b001 : usb OTG debug bus
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00004 UART_PORT_CTRL       (P)
///               %unsigned 1  URT0_CTSn_SEL             0x0
///                                    ###
///                                    * 0: URT0A_CTSn selected
///                                    * 1: URT0B_CTSn selected
///                                    ###
///               %unsigned 1  URT0_RXD_SEL              0x0
///                                    ###
///                                    * 0: URT0A_RXD selected
///                                    * 1: URT0B_RXD selected
///                                    ###
///               %unsigned 1  URT1_CTSn_SEL             0x0
///                                    ###
///                                    * 0: URT1A_CTSn selected
///                                    * 1: URT1B_CTSn selected
///                                    ###
///               %unsigned 1  URT1_RXD_SEL              0x0
///                                    ###
///                                    * 0: URT1A_RXD selected
///                                    * 1: URT1B_RXD selected
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00008 TW_PORT_CTRL         (P)
///               %unsigned 1  TW0_SCL_SEL               0x0
///                                    ###
///                                    * 0: TW0A_SCL selected
///                                    * 1: TW0B_SCL selected
///                                    ###
///               %unsigned 1  TW0_SDA_SEL               0x0
///                                    ###
///                                    * 0: TW0A_SDA selected
///                                    * 1: TW0B_SDA selected
///                                    ###
///               %unsigned 1  TW1_SCL_SEL               0x0
///                                    ###
///                                    * 0: TW1A_SCL selected
///                                    * 1: TW1B_SCL selected
///                                    ###
///               %unsigned 1  TW1_SDA_SEL               0x0
///                                    ###
///                                    * 0: TW1A_SDA selected
///                                    * 1: TW1B_SDA selected
///                                    ###
///               %unsigned 1  TW3_SCL_SEL               0x0
///                                    ###
///                                    * 0: TW3A_SCL selected
///                                    * 1: TW3B_SCL selected
///                                    ###
///               %unsigned 1  TW3_SDA_SEL               0x0
///                                    ###
///                                    * 0: TW3A_SDA selected
///                                    * 1: TW3B_SDA selected
///                                    ###
///               %unsigned 1  RGMII_MDIO_SEL            0x0
///                                    ###
///                                    * 0: RGMIIA_MDIO_DI selected
///                                    * 1: RGMIIB_MDIO_DI selected
///                                    ###
///               %unsigned 1  SD_WP_SEL                 0x0
///                                    ###
///                                    * 0: SDA_WP selected
///                                    * 1: SDB_WP selected
///                                    ###
///               %unsigned 1  SD_CDN_SEL                0x0
///                                    ###
///                                    * 0: SDA_CDn selected
///                                    * 1: SDB_CDn selected
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x0000C GPIO0_PORT_CTRL      (P)
///               %unsigned 32 GPIO0_DI_SEL              0x0
///                                    ###
///                                    * Each bit corresponds to one GPIO
///                                    * 0: GPIO_DI[31:0] selected
///                                    * 1: GPIO_X_DI[31:0] selected
///                                    ###
///     @ 0x00010 GPIO1_PORT_CTRL      (P)
///               %unsigned 32 GPIO1_DI_SEL              0x0
///                                    ###
///                                    * Each bit corresponds to one GPIO
///                                    * 0: GPIO_DI[63:32] selected
///                                    * 1: GPIO_X_DI[63:32] selected
///                                    ###
///     @ 0x00014 SDIO_SIG_CTRL        (P)
///               %unsigned 1  SDIO_CDn_SW_CTRL          0x0
///                                    ###
///                                    * 0: CDn software control is 0 and input Pin value will be passed
///                                    * to controller
///                                    * 1:  CDn value will be force to 1
///                                    ###
///               %unsigned 1  SDIO_WP_SW_CTRL           0x0
///                                    ###
///                                    * 0: WP software control is 0 and input Pin value will be passed
///                                    * to controller
///                                    * 1:  WP value will be force to 1
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00018 SDIO_TST_CTL         (P)
///               %unsigned 1  SDIO_PHY_TST_INTF_SEL     0x0
///                                    ###
///                                    * This bit is used to select the test interface on to SDIO PHY clk
///                                    * and cmd and data.
///                                    * 0: itst_oe_* and itst_a_* comes from controller regs
///                                    * 1: itst_oe_* and itst_a_* comes from SOC
///                                    ###
///               %unsigned 1  SDIO_PHY_TST_PAD_MODE     0x0
///                                    ###
///                                    * This bit is used to select the pad mode when Test interface is
///                                    * selected
///                                    * 0: ioe_* and ia_* drives the PADs in the PHY
///                                    * 1: itst_oe_* and itst_a_* drives the PADs in the PHY
///                                    ###
///               %unsigned 1  SDIO_PHY_TST_DLOUT_EN     0x0
///                                    ###
///                                    * This bit is used to select the delay outputs on SDIO PHY during
///                                    * test interface selection
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x0001C EMMC_TST_CTL         (P)
///               %unsigned 1  EMMC_PHY_TST_INTF_SEL     0x0
///                                    ###
///                                    * This bit is used to select the test interface on to SDIO PHY clk
///                                    * and cmd and data.
///                                    * 0: itst_oe_* and itst_a_* comes from controller regs
///                                    * 1: itst_oe_* and itst_a_* comes from SOC
///                                    ###
///               %unsigned 1  EMMC_PHY_TST_PAD_MODE     0x0
///                                    ###
///                                    * This bit is used to select the pad mode when Test interface is
///                                    * selected
///                                    * 0: ioe_* and ia_* drives the PADs in the PHY
///                                    * 1: itst_oe_* and itst_a_* drives the PADs in the PHY
///                                    ###
///               %unsigned 1  EMMC_PHY_TST_DLOUT_EN     0x0
///                                    ###
///                                    * This bit is used to select the delay outputs on SDIO PHY during
///                                    * test interface selection
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00020 NAND_CTL0            (P)
///               ###
///               * NAND IP Control register0
///               ###
///               %unsigned 1  discovery_inhibit         0x1
///                                    ###
///                                    * Inhibit controller from discovery
///                                    ###
///               %unsigned 1  discovery_ignore_crc      0x1
///                                    ###
///                                    * Disable CRC during discovery
///                                    ###
///               %unsigned 16 rb_valid_time             0x3E8
///                                    ###
///                                    * RB valid time
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x00024 NAND_CTL1            (P)
///               ###
///               * NAND IP Control register1
///               ###
///               %unsigned 16 dd_page_size              0x1000
///                                    ###
///                                    * DD page size
///                                    ###
///               %unsigned 16 dd_page_per_block         0x100
///                                    ###
///                                    * DD page size
///                                    ###
///     @ 0x00028 NAND_CTL2            (P)
///               ###
///               * NAND IP Control register2
///               ###
///               %unsigned 4  dd_lun_number             0x1
///                                    ###
///                                    * DD LUN number
///                                    ###
///               %unsigned 1  dd_four_addr_cycles       0x0
///                                    ###
///                                    * DD Four addr Cycles
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x0002C NAND_DEVICE_IDL      (R-)
///               ###
///               * NAND Device ID Low
///               ###
///               %unsigned 32 id_low                    0x0
///                                    ###
///                                    * ID Low value
///                                    ###
///     @ 0x00030 NAND_DEVICE_IDH      (R-)
///               ###
///               * NAND Device ID High
///               ###
///               %unsigned 8  id_high                   0x0
///                                    ###
///                                    * ID High value
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00034 NAND_STATUS          (R-)
///               ###
///               * NAND Status
///               ###
///               %unsigned 1  init_comp                 0x0
///                                    ###
///                                    * Initialization Complete
///                                    ###
///               %unsigned 1  init_fail                 0x0
///                                    ###
///                                    * Initialization Fail
///                                    ###
///               %unsigned 1  ctrl_busy                 0x0
///                                    ###
///                                    * 1: NFC is busy
///                                    * 0 : NFC is Idle
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00038 RGMII_CTL            (P)
///               %unsigned 1  TXC_90DEG_SEL             0x0
///                                    ###
///                                    * 0: Same clock as internal clock to TXC
///                                    * 1:  90 deg phase shifted clock from internal clock on to TXC
///                                    ###
///               %unsigned 3  PHY_INTF_SEL              0x1
///                                    ###
///                                    * Selects the PHY interface type for the MAC
///                                    * 3’b001 : RGMII
///                                    * 3’b100 : RMII
///                                    * All other values are invalid and should not be programmed
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x0003C RGMII_STATUS         (R-)
///               %unsigned 32 PTP_TIMESTAMP_LO          0x0
///     # 0x00040 RGMII_STATUS1
///               %unsigned 32 PTP_TIMESTAMP_HI          0x0
///     @ 0x00044                      (P)
///     # 0x00044 KPINT
///               $KPINT               KPINT             REG
///     @ 0x00050 RSERVED_CTRL0        (P)
///               ###
///               * Not used, may be used for ECOs
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 ctrl                      0x0
///                                    ###
///                                    * Not used.
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      84B, bits:     322b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_PERIF
#define h_PERIF () {}

    #define     RA_PERIF_PHY_DBG_CTRL                          0x0000

    #define     BA_PERIF_PHY_DBG_CTRL_perif_dbg_sel            0x0000
    #define     B16PERIF_PHY_DBG_CTRL_perif_dbg_sel            0x0000
    #define   LSb32PERIF_PHY_DBG_CTRL_perif_dbg_sel               0
    #define   LSb16PERIF_PHY_DBG_CTRL_perif_dbg_sel               0
    #define       bPERIF_PHY_DBG_CTRL_perif_dbg_sel            3
    #define   MSK32PERIF_PHY_DBG_CTRL_perif_dbg_sel               0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_UART_PORT_CTRL                        0x0004

    #define     BA_PERIF_UART_PORT_CTRL_URT0_CTSn_SEL          0x0004
    #define     B16PERIF_UART_PORT_CTRL_URT0_CTSn_SEL          0x0004
    #define   LSb32PERIF_UART_PORT_CTRL_URT0_CTSn_SEL             0
    #define   LSb16PERIF_UART_PORT_CTRL_URT0_CTSn_SEL             0
    #define       bPERIF_UART_PORT_CTRL_URT0_CTSn_SEL          1
    #define   MSK32PERIF_UART_PORT_CTRL_URT0_CTSn_SEL             0x00000001

    #define     BA_PERIF_UART_PORT_CTRL_URT0_RXD_SEL           0x0004
    #define     B16PERIF_UART_PORT_CTRL_URT0_RXD_SEL           0x0004
    #define   LSb32PERIF_UART_PORT_CTRL_URT0_RXD_SEL              1
    #define   LSb16PERIF_UART_PORT_CTRL_URT0_RXD_SEL              1
    #define       bPERIF_UART_PORT_CTRL_URT0_RXD_SEL           1
    #define   MSK32PERIF_UART_PORT_CTRL_URT0_RXD_SEL              0x00000002

    #define     BA_PERIF_UART_PORT_CTRL_URT1_CTSn_SEL          0x0004
    #define     B16PERIF_UART_PORT_CTRL_URT1_CTSn_SEL          0x0004
    #define   LSb32PERIF_UART_PORT_CTRL_URT1_CTSn_SEL             2
    #define   LSb16PERIF_UART_PORT_CTRL_URT1_CTSn_SEL             2
    #define       bPERIF_UART_PORT_CTRL_URT1_CTSn_SEL          1
    #define   MSK32PERIF_UART_PORT_CTRL_URT1_CTSn_SEL             0x00000004

    #define     BA_PERIF_UART_PORT_CTRL_URT1_RXD_SEL           0x0004
    #define     B16PERIF_UART_PORT_CTRL_URT1_RXD_SEL           0x0004
    #define   LSb32PERIF_UART_PORT_CTRL_URT1_RXD_SEL              3
    #define   LSb16PERIF_UART_PORT_CTRL_URT1_RXD_SEL              3
    #define       bPERIF_UART_PORT_CTRL_URT1_RXD_SEL           1
    #define   MSK32PERIF_UART_PORT_CTRL_URT1_RXD_SEL              0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_TW_PORT_CTRL                          0x0008

    #define     BA_PERIF_TW_PORT_CTRL_TW0_SCL_SEL              0x0008
    #define     B16PERIF_TW_PORT_CTRL_TW0_SCL_SEL              0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_TW0_SCL_SEL                 0
    #define   LSb16PERIF_TW_PORT_CTRL_TW0_SCL_SEL                 0
    #define       bPERIF_TW_PORT_CTRL_TW0_SCL_SEL              1
    #define   MSK32PERIF_TW_PORT_CTRL_TW0_SCL_SEL                 0x00000001

    #define     BA_PERIF_TW_PORT_CTRL_TW0_SDA_SEL              0x0008
    #define     B16PERIF_TW_PORT_CTRL_TW0_SDA_SEL              0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_TW0_SDA_SEL                 1
    #define   LSb16PERIF_TW_PORT_CTRL_TW0_SDA_SEL                 1
    #define       bPERIF_TW_PORT_CTRL_TW0_SDA_SEL              1
    #define   MSK32PERIF_TW_PORT_CTRL_TW0_SDA_SEL                 0x00000002

    #define     BA_PERIF_TW_PORT_CTRL_TW1_SCL_SEL              0x0008
    #define     B16PERIF_TW_PORT_CTRL_TW1_SCL_SEL              0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_TW1_SCL_SEL                 2
    #define   LSb16PERIF_TW_PORT_CTRL_TW1_SCL_SEL                 2
    #define       bPERIF_TW_PORT_CTRL_TW1_SCL_SEL              1
    #define   MSK32PERIF_TW_PORT_CTRL_TW1_SCL_SEL                 0x00000004

    #define     BA_PERIF_TW_PORT_CTRL_TW1_SDA_SEL              0x0008
    #define     B16PERIF_TW_PORT_CTRL_TW1_SDA_SEL              0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_TW1_SDA_SEL                 3
    #define   LSb16PERIF_TW_PORT_CTRL_TW1_SDA_SEL                 3
    #define       bPERIF_TW_PORT_CTRL_TW1_SDA_SEL              1
    #define   MSK32PERIF_TW_PORT_CTRL_TW1_SDA_SEL                 0x00000008

    #define     BA_PERIF_TW_PORT_CTRL_TW3_SCL_SEL              0x0008
    #define     B16PERIF_TW_PORT_CTRL_TW3_SCL_SEL              0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_TW3_SCL_SEL                 4
    #define   LSb16PERIF_TW_PORT_CTRL_TW3_SCL_SEL                 4
    #define       bPERIF_TW_PORT_CTRL_TW3_SCL_SEL              1
    #define   MSK32PERIF_TW_PORT_CTRL_TW3_SCL_SEL                 0x00000010

    #define     BA_PERIF_TW_PORT_CTRL_TW3_SDA_SEL              0x0008
    #define     B16PERIF_TW_PORT_CTRL_TW3_SDA_SEL              0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_TW3_SDA_SEL                 5
    #define   LSb16PERIF_TW_PORT_CTRL_TW3_SDA_SEL                 5
    #define       bPERIF_TW_PORT_CTRL_TW3_SDA_SEL              1
    #define   MSK32PERIF_TW_PORT_CTRL_TW3_SDA_SEL                 0x00000020

    #define     BA_PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL           0x0008
    #define     B16PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL           0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL              6
    #define   LSb16PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL              6
    #define       bPERIF_TW_PORT_CTRL_RGMII_MDIO_SEL           1
    #define   MSK32PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL              0x00000040

    #define     BA_PERIF_TW_PORT_CTRL_SD_WP_SEL                0x0008
    #define     B16PERIF_TW_PORT_CTRL_SD_WP_SEL                0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_SD_WP_SEL                   7
    #define   LSb16PERIF_TW_PORT_CTRL_SD_WP_SEL                   7
    #define       bPERIF_TW_PORT_CTRL_SD_WP_SEL                1
    #define   MSK32PERIF_TW_PORT_CTRL_SD_WP_SEL                   0x00000080

    #define     BA_PERIF_TW_PORT_CTRL_SD_CDN_SEL               0x0009
    #define     B16PERIF_TW_PORT_CTRL_SD_CDN_SEL               0x0008
    #define   LSb32PERIF_TW_PORT_CTRL_SD_CDN_SEL                  8
    #define   LSb16PERIF_TW_PORT_CTRL_SD_CDN_SEL                  8
    #define       bPERIF_TW_PORT_CTRL_SD_CDN_SEL               1
    #define   MSK32PERIF_TW_PORT_CTRL_SD_CDN_SEL                  0x00000100
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_GPIO0_PORT_CTRL                       0x000C

    #define     BA_PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL          0x000C
    #define     B16PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL          0x000C
    #define   LSb32PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL             0
    #define   LSb16PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL             0
    #define       bPERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL          32
    #define   MSK32PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL             0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_GPIO1_PORT_CTRL                       0x0010

    #define     BA_PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL          0x0010
    #define     B16PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL          0x0010
    #define   LSb32PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL             0
    #define   LSb16PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL             0
    #define       bPERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL          32
    #define   MSK32PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL             0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_SDIO_SIG_CTRL                         0x0014

    #define     BA_PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL        0x0014
    #define     B16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL        0x0014
    #define   LSb32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL           0
    #define   LSb16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL           0
    #define       bPERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL        1
    #define   MSK32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL           0x00000001

    #define     BA_PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL         0x0014
    #define     B16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL         0x0014
    #define   LSb32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL            1
    #define   LSb16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL            1
    #define       bPERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL         1
    #define   MSK32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL            0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_SDIO_TST_CTL                          0x0018

    #define     BA_PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL    0x0018
    #define     B16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL    0x0018
    #define   LSb32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL       0
    #define   LSb16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL       0
    #define       bPERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL    1
    #define   MSK32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL       0x00000001

    #define     BA_PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE    0x0018
    #define     B16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE    0x0018
    #define   LSb32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE       1
    #define   LSb16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE       1
    #define       bPERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE    1
    #define   MSK32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE       0x00000002

    #define     BA_PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN    0x0018
    #define     B16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN    0x0018
    #define   LSb32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN       2
    #define   LSb16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN       2
    #define       bPERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN    1
    #define   MSK32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_EMMC_TST_CTL                          0x001C

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL    0x001C
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL    0x001C
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL       0
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL       0
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL    1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL       0x00000001

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE    0x001C
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE    0x001C
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE       1
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE       1
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE    1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE       0x00000002

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN    0x001C
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN    0x001C
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN       2
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN       2
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN    1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_NAND_CTL0                             0x0020

    #define     BA_PERIF_NAND_CTL0_discovery_inhibit           0x0020
    #define     B16PERIF_NAND_CTL0_discovery_inhibit           0x0020
    #define   LSb32PERIF_NAND_CTL0_discovery_inhibit              0
    #define   LSb16PERIF_NAND_CTL0_discovery_inhibit              0
    #define       bPERIF_NAND_CTL0_discovery_inhibit           1
    #define   MSK32PERIF_NAND_CTL0_discovery_inhibit              0x00000001

    #define     BA_PERIF_NAND_CTL0_discovery_ignore_crc        0x0020
    #define     B16PERIF_NAND_CTL0_discovery_ignore_crc        0x0020
    #define   LSb32PERIF_NAND_CTL0_discovery_ignore_crc           1
    #define   LSb16PERIF_NAND_CTL0_discovery_ignore_crc           1
    #define       bPERIF_NAND_CTL0_discovery_ignore_crc        1
    #define   MSK32PERIF_NAND_CTL0_discovery_ignore_crc           0x00000002

    #define     BA_PERIF_NAND_CTL0_rb_valid_time               0x0020
    #define     B16PERIF_NAND_CTL0_rb_valid_time               0x0020
    #define   LSb32PERIF_NAND_CTL0_rb_valid_time                  2
    #define   LSb16PERIF_NAND_CTL0_rb_valid_time                  2
    #define       bPERIF_NAND_CTL0_rb_valid_time               16
    #define   MSK32PERIF_NAND_CTL0_rb_valid_time                  0x0003FFFC
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_NAND_CTL1                             0x0024

    #define     BA_PERIF_NAND_CTL1_dd_page_size                0x0024
    #define     B16PERIF_NAND_CTL1_dd_page_size                0x0024
    #define   LSb32PERIF_NAND_CTL1_dd_page_size                   0
    #define   LSb16PERIF_NAND_CTL1_dd_page_size                   0
    #define       bPERIF_NAND_CTL1_dd_page_size                16
    #define   MSK32PERIF_NAND_CTL1_dd_page_size                   0x0000FFFF

    #define     BA_PERIF_NAND_CTL1_dd_page_per_block           0x0026
    #define     B16PERIF_NAND_CTL1_dd_page_per_block           0x0026
    #define   LSb32PERIF_NAND_CTL1_dd_page_per_block              16
    #define   LSb16PERIF_NAND_CTL1_dd_page_per_block              0
    #define       bPERIF_NAND_CTL1_dd_page_per_block           16
    #define   MSK32PERIF_NAND_CTL1_dd_page_per_block              0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_NAND_CTL2                             0x0028

    #define     BA_PERIF_NAND_CTL2_dd_lun_number               0x0028
    #define     B16PERIF_NAND_CTL2_dd_lun_number               0x0028
    #define   LSb32PERIF_NAND_CTL2_dd_lun_number                  0
    #define   LSb16PERIF_NAND_CTL2_dd_lun_number                  0
    #define       bPERIF_NAND_CTL2_dd_lun_number               4
    #define   MSK32PERIF_NAND_CTL2_dd_lun_number                  0x0000000F

    #define     BA_PERIF_NAND_CTL2_dd_four_addr_cycles         0x0028
    #define     B16PERIF_NAND_CTL2_dd_four_addr_cycles         0x0028
    #define   LSb32PERIF_NAND_CTL2_dd_four_addr_cycles            4
    #define   LSb16PERIF_NAND_CTL2_dd_four_addr_cycles            4
    #define       bPERIF_NAND_CTL2_dd_four_addr_cycles         1
    #define   MSK32PERIF_NAND_CTL2_dd_four_addr_cycles            0x00000010
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_NAND_DEVICE_IDL                       0x002C

    #define     BA_PERIF_NAND_DEVICE_IDL_id_low                0x002C
    #define     B16PERIF_NAND_DEVICE_IDL_id_low                0x002C
    #define   LSb32PERIF_NAND_DEVICE_IDL_id_low                   0
    #define   LSb16PERIF_NAND_DEVICE_IDL_id_low                   0
    #define       bPERIF_NAND_DEVICE_IDL_id_low                32
    #define   MSK32PERIF_NAND_DEVICE_IDL_id_low                   0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_NAND_DEVICE_IDH                       0x0030

    #define     BA_PERIF_NAND_DEVICE_IDH_id_high               0x0030
    #define     B16PERIF_NAND_DEVICE_IDH_id_high               0x0030
    #define   LSb32PERIF_NAND_DEVICE_IDH_id_high                  0
    #define   LSb16PERIF_NAND_DEVICE_IDH_id_high                  0
    #define       bPERIF_NAND_DEVICE_IDH_id_high               8
    #define   MSK32PERIF_NAND_DEVICE_IDH_id_high                  0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_NAND_STATUS                           0x0034

    #define     BA_PERIF_NAND_STATUS_init_comp                 0x0034
    #define     B16PERIF_NAND_STATUS_init_comp                 0x0034
    #define   LSb32PERIF_NAND_STATUS_init_comp                    0
    #define   LSb16PERIF_NAND_STATUS_init_comp                    0
    #define       bPERIF_NAND_STATUS_init_comp                 1
    #define   MSK32PERIF_NAND_STATUS_init_comp                    0x00000001

    #define     BA_PERIF_NAND_STATUS_init_fail                 0x0034
    #define     B16PERIF_NAND_STATUS_init_fail                 0x0034
    #define   LSb32PERIF_NAND_STATUS_init_fail                    1
    #define   LSb16PERIF_NAND_STATUS_init_fail                    1
    #define       bPERIF_NAND_STATUS_init_fail                 1
    #define   MSK32PERIF_NAND_STATUS_init_fail                    0x00000002

    #define     BA_PERIF_NAND_STATUS_ctrl_busy                 0x0034
    #define     B16PERIF_NAND_STATUS_ctrl_busy                 0x0034
    #define   LSb32PERIF_NAND_STATUS_ctrl_busy                    2
    #define   LSb16PERIF_NAND_STATUS_ctrl_busy                    2
    #define       bPERIF_NAND_STATUS_ctrl_busy                 1
    #define   MSK32PERIF_NAND_STATUS_ctrl_busy                    0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_RGMII_CTL                             0x0038

    #define     BA_PERIF_RGMII_CTL_TXC_90DEG_SEL               0x0038
    #define     B16PERIF_RGMII_CTL_TXC_90DEG_SEL               0x0038
    #define   LSb32PERIF_RGMII_CTL_TXC_90DEG_SEL                  0
    #define   LSb16PERIF_RGMII_CTL_TXC_90DEG_SEL                  0
    #define       bPERIF_RGMII_CTL_TXC_90DEG_SEL               1
    #define   MSK32PERIF_RGMII_CTL_TXC_90DEG_SEL                  0x00000001

    #define     BA_PERIF_RGMII_CTL_PHY_INTF_SEL                0x0038
    #define     B16PERIF_RGMII_CTL_PHY_INTF_SEL                0x0038
    #define   LSb32PERIF_RGMII_CTL_PHY_INTF_SEL                   1
    #define   LSb16PERIF_RGMII_CTL_PHY_INTF_SEL                   1
    #define       bPERIF_RGMII_CTL_PHY_INTF_SEL                3
    #define   MSK32PERIF_RGMII_CTL_PHY_INTF_SEL                   0x0000000E
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_RGMII_STATUS                          0x003C

    #define     BA_PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO         0x003C
    #define     B16PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO         0x003C
    #define   LSb32PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO            0
    #define   LSb16PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO            0
    #define       bPERIF_RGMII_STATUS_PTP_TIMESTAMP_LO         32
    #define   MSK32PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO            0xFFFFFFFF

    #define     RA_PERIF_RGMII_STATUS1                         0x0040

    #define     BA_PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI         0x0040
    #define     B16PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI         0x0040
    #define   LSb32PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI            0
    #define   LSb16PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI            0
    #define       bPERIF_RGMII_STATUS_PTP_TIMESTAMP_HI         32
    #define   MSK32PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_KPINT                                 0x0044
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_RSERVED_CTRL0                         0x0050

    #define     BA_PERIF_RSERVED_CTRL0_ctrl                    0x0050
    #define     B16PERIF_RSERVED_CTRL0_ctrl                    0x0050
    #define   LSb32PERIF_RSERVED_CTRL0_ctrl                       0
    #define   LSb16PERIF_RSERVED_CTRL0_ctrl                       0
    #define       bPERIF_RSERVED_CTRL0_ctrl                    32
    #define   MSK32PERIF_RSERVED_CTRL0_ctrl                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_PERIF {
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_PHY_DBG_CTRL_perif_dbg_sel(r32)       _BFGET_(r32, 2, 0)
    #define   SET32PERIF_PHY_DBG_CTRL_perif_dbg_sel(r32, v)     _BFSET_(r32, 2, 0, v)
    #define   GET16PERIF_PHY_DBG_CTRL_perif_dbg_sel(r16)       _BFGET_(r16, 2, 0)
    #define   SET16PERIF_PHY_DBG_CTRL_perif_dbg_sel(r16, v)     _BFSET_(r16, 2, 0, v)

    #define     w32PERIF_PHY_DBG_CTRL                          {\
	    UNSG32 uPHY_DBG_CTRL_perif_dbg_sel                 :  3;\
	    UNSG32 RSVDx0_b3                                   : 29;\
	}
    union { UNSG32 u32PERIF_PHY_DBG_CTRL;
	    struct w32PERIF_PHY_DBG_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_UART_PORT_CTRL_URT0_CTSn_SEL(r32)     _BFGET_(r32, 0, 0)
    #define   SET32PERIF_UART_PORT_CTRL_URT0_CTSn_SEL(r32, v)   _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_UART_PORT_CTRL_URT0_CTSn_SEL(r16)     _BFGET_(r16, 0, 0)
    #define   SET16PERIF_UART_PORT_CTRL_URT0_CTSn_SEL(r16, v)   _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_UART_PORT_CTRL_URT0_RXD_SEL(r32)      _BFGET_(r32, 1, 1)
    #define   SET32PERIF_UART_PORT_CTRL_URT0_RXD_SEL(r32, v)    _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_UART_PORT_CTRL_URT0_RXD_SEL(r16)      _BFGET_(r16, 1, 1)
    #define   SET16PERIF_UART_PORT_CTRL_URT0_RXD_SEL(r16, v)    _BFSET_(r16, 1, 1, v)

    #define   GET32PERIF_UART_PORT_CTRL_URT1_CTSn_SEL(r32)     _BFGET_(r32, 2, 2)
    #define   SET32PERIF_UART_PORT_CTRL_URT1_CTSn_SEL(r32, v)   _BFSET_(r32, 2, 2, v)
    #define   GET16PERIF_UART_PORT_CTRL_URT1_CTSn_SEL(r16)     _BFGET_(r16, 2, 2)
    #define   SET16PERIF_UART_PORT_CTRL_URT1_CTSn_SEL(r16, v)   _BFSET_(r16, 2, 2, v)

    #define   GET32PERIF_UART_PORT_CTRL_URT1_RXD_SEL(r32)      _BFGET_(r32, 3, 3)
    #define   SET32PERIF_UART_PORT_CTRL_URT1_RXD_SEL(r32, v)    _BFSET_(r32, 3, 3, v)
    #define   GET16PERIF_UART_PORT_CTRL_URT1_RXD_SEL(r16)      _BFGET_(r16, 3, 3)
    #define   SET16PERIF_UART_PORT_CTRL_URT1_RXD_SEL(r16, v)    _BFSET_(r16, 3, 3, v)

    #define     w32PERIF_UART_PORT_CTRL                        {\
	    UNSG32 uUART_PORT_CTRL_URT0_CTSn_SEL               :  1;\
	    UNSG32 uUART_PORT_CTRL_URT0_RXD_SEL                :  1;\
	    UNSG32 uUART_PORT_CTRL_URT1_CTSn_SEL               :  1;\
	    UNSG32 uUART_PORT_CTRL_URT1_RXD_SEL                :  1;\
	    UNSG32 RSVDx4_b4                                   : 28;\
	}
    union { UNSG32 u32PERIF_UART_PORT_CTRL;
	    struct w32PERIF_UART_PORT_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_TW_PORT_CTRL_TW0_SCL_SEL(r32)         _BFGET_(r32, 0, 0)
    #define   SET32PERIF_TW_PORT_CTRL_TW0_SCL_SEL(r32, v)       _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_TW_PORT_CTRL_TW0_SCL_SEL(r16)         _BFGET_(r16, 0, 0)
    #define   SET16PERIF_TW_PORT_CTRL_TW0_SCL_SEL(r16, v)       _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_TW_PORT_CTRL_TW0_SDA_SEL(r32)         _BFGET_(r32, 1, 1)
    #define   SET32PERIF_TW_PORT_CTRL_TW0_SDA_SEL(r32, v)       _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_TW_PORT_CTRL_TW0_SDA_SEL(r16)         _BFGET_(r16, 1, 1)
    #define   SET16PERIF_TW_PORT_CTRL_TW0_SDA_SEL(r16, v)       _BFSET_(r16, 1, 1, v)

    #define   GET32PERIF_TW_PORT_CTRL_TW1_SCL_SEL(r32)         _BFGET_(r32, 2, 2)
    #define   SET32PERIF_TW_PORT_CTRL_TW1_SCL_SEL(r32, v)       _BFSET_(r32, 2, 2, v)
    #define   GET16PERIF_TW_PORT_CTRL_TW1_SCL_SEL(r16)         _BFGET_(r16, 2, 2)
    #define   SET16PERIF_TW_PORT_CTRL_TW1_SCL_SEL(r16, v)       _BFSET_(r16, 2, 2, v)

    #define   GET32PERIF_TW_PORT_CTRL_TW1_SDA_SEL(r32)         _BFGET_(r32, 3, 3)
    #define   SET32PERIF_TW_PORT_CTRL_TW1_SDA_SEL(r32, v)       _BFSET_(r32, 3, 3, v)
    #define   GET16PERIF_TW_PORT_CTRL_TW1_SDA_SEL(r16)         _BFGET_(r16, 3, 3)
    #define   SET16PERIF_TW_PORT_CTRL_TW1_SDA_SEL(r16, v)       _BFSET_(r16, 3, 3, v)

    #define   GET32PERIF_TW_PORT_CTRL_TW3_SCL_SEL(r32)         _BFGET_(r32, 4, 4)
    #define   SET32PERIF_TW_PORT_CTRL_TW3_SCL_SEL(r32, v)       _BFSET_(r32, 4, 4, v)
    #define   GET16PERIF_TW_PORT_CTRL_TW3_SCL_SEL(r16)         _BFGET_(r16, 4, 4)
    #define   SET16PERIF_TW_PORT_CTRL_TW3_SCL_SEL(r16, v)       _BFSET_(r16, 4, 4, v)

    #define   GET32PERIF_TW_PORT_CTRL_TW3_SDA_SEL(r32)         _BFGET_(r32, 5, 5)
    #define   SET32PERIF_TW_PORT_CTRL_TW3_SDA_SEL(r32, v)       _BFSET_(r32, 5, 5, v)
    #define   GET16PERIF_TW_PORT_CTRL_TW3_SDA_SEL(r16)         _BFGET_(r16, 5, 5)
    #define   SET16PERIF_TW_PORT_CTRL_TW3_SDA_SEL(r16, v)       _BFSET_(r16, 5, 5, v)

    #define   GET32PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL(r32)      _BFGET_(r32, 6, 6)
    #define   SET32PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL(r32, v)    _BFSET_(r32, 6, 6, v)
    #define   GET16PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL(r16)      _BFGET_(r16, 6, 6)
    #define   SET16PERIF_TW_PORT_CTRL_RGMII_MDIO_SEL(r16, v)    _BFSET_(r16, 6, 6, v)

    #define   GET32PERIF_TW_PORT_CTRL_SD_WP_SEL(r32)           _BFGET_(r32, 7, 7)
    #define   SET32PERIF_TW_PORT_CTRL_SD_WP_SEL(r32, v)         _BFSET_(r32, 7, 7, v)
    #define   GET16PERIF_TW_PORT_CTRL_SD_WP_SEL(r16)           _BFGET_(r16, 7, 7)
    #define   SET16PERIF_TW_PORT_CTRL_SD_WP_SEL(r16, v)         _BFSET_(r16, 7, 7, v)

    #define   GET32PERIF_TW_PORT_CTRL_SD_CDN_SEL(r32)          _BFGET_(r32, 8, 8)
    #define   SET32PERIF_TW_PORT_CTRL_SD_CDN_SEL(r32, v)        _BFSET_(r32, 8, 8, v)
    #define   GET16PERIF_TW_PORT_CTRL_SD_CDN_SEL(r16)          _BFGET_(r16, 8, 8)
    #define   SET16PERIF_TW_PORT_CTRL_SD_CDN_SEL(r16, v)        _BFSET_(r16, 8, 8, v)

    #define     w32PERIF_TW_PORT_CTRL                          {\
	    UNSG32 uTW_PORT_CTRL_TW0_SCL_SEL                   :  1;\
	    UNSG32 uTW_PORT_CTRL_TW0_SDA_SEL                   :  1;\
	    UNSG32 uTW_PORT_CTRL_TW1_SCL_SEL                   :  1;\
	    UNSG32 uTW_PORT_CTRL_TW1_SDA_SEL                   :  1;\
	    UNSG32 uTW_PORT_CTRL_TW3_SCL_SEL                   :  1;\
	    UNSG32 uTW_PORT_CTRL_TW3_SDA_SEL                   :  1;\
	    UNSG32 uTW_PORT_CTRL_RGMII_MDIO_SEL                :  1;\
	    UNSG32 uTW_PORT_CTRL_SD_WP_SEL                     :  1;\
	    UNSG32 uTW_PORT_CTRL_SD_CDN_SEL                    :  1;\
	    UNSG32 RSVDx8_b9                                   : 23;\
	}
    union { UNSG32 u32PERIF_TW_PORT_CTRL;
	    struct w32PERIF_TW_PORT_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL(r32)     _BFGET_(r32, 31, 0)
    #define   SET32PERIF_GPIO0_PORT_CTRL_GPIO0_DI_SEL(r32, v)   _BFSET_(r32, 31, 0, v)

    #define     w32PERIF_GPIO0_PORT_CTRL                       {\
	    UNSG32 uGPIO0_PORT_CTRL_GPIO0_DI_SEL               : 32;\
	}
    union { UNSG32 u32PERIF_GPIO0_PORT_CTRL;
	    struct w32PERIF_GPIO0_PORT_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL(r32)     _BFGET_(r32, 31, 0)
    #define   SET32PERIF_GPIO1_PORT_CTRL_GPIO1_DI_SEL(r32, v)   _BFSET_(r32, 31, 0, v)

    #define     w32PERIF_GPIO1_PORT_CTRL                       {\
	    UNSG32 uGPIO1_PORT_CTRL_GPIO1_DI_SEL               : 32;\
	}
    union { UNSG32 u32PERIF_GPIO1_PORT_CTRL;
	    struct w32PERIF_GPIO1_PORT_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r32)   _BFGET_(r32, 0, 0)
    #define   SET32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r32, v) _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r16)   _BFGET_(r16, 0, 0)
    #define   SET16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r16, v) _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r32)    _BFGET_(r32, 1, 1)
    #define   SET32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r32, v)  _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r16)    _BFGET_(r16, 1, 1)
    #define   SET16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r16, v)  _BFSET_(r16, 1, 1, v)

    #define     w32PERIF_SDIO_SIG_CTRL                         {\
	    UNSG32 uSDIO_SIG_CTRL_SDIO_CDn_SW_CTRL             :  1;\
	    UNSG32 uSDIO_SIG_CTRL_SDIO_WP_SW_CTRL              :  1;\
	    UNSG32 RSVDx14_b2                                  : 30;\
	}
    union { UNSG32 u32PERIF_SDIO_SIG_CTRL;
	    struct w32PERIF_SDIO_SIG_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r32) _BFGET_(r32, 0, 0)
    #define   SET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r32, v) _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r16) _BFGET_(r16, 0, 0)
    #define   SET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r16, v) _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r32) _BFGET_(r32, 1, 1)
    #define   SET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r16) _BFGET_(r16, 1, 1)
    #define   SET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r16, v) _BFSET_(r16, 1, 1, v)

    #define   GET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r32) _BFGET_(r32, 2, 2)
    #define   SET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r32, v) _BFSET_(r32, 2, 2, v)
    #define   GET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r16) _BFGET_(r16, 2, 2)
    #define   SET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r16, v) _BFSET_(r16, 2, 2, v)

    #define     w32PERIF_SDIO_TST_CTL                          {\
	    UNSG32 uSDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL         :  1;\
	    UNSG32 uSDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE         :  1;\
	    UNSG32 uSDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN         :  1;\
	    UNSG32 RSVDx18_b3                                  : 29;\
	}
    union { UNSG32 u32PERIF_SDIO_TST_CTL;
	    struct w32PERIF_SDIO_TST_CTL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r32) _BFGET_(r32, 0, 0)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r32, v) _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r16) _BFGET_(r16, 0, 0)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r16, v) _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r32) _BFGET_(r32, 1, 1)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r16) _BFGET_(r16, 1, 1)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r16, v) _BFSET_(r16, 1, 1, v)

    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r32) _BFGET_(r32, 2, 2)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r32, v) _BFSET_(r32, 2, 2, v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r16) _BFGET_(r16, 2, 2)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r16, v) _BFSET_(r16, 2, 2, v)

    #define     w32PERIF_EMMC_TST_CTL                          {\
	    UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL         :  1;\
	    UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE         :  1;\
	    UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN         :  1;\
	    UNSG32 RSVDx1C_b3                                  : 29;\
	}
    union { UNSG32 u32PERIF_EMMC_TST_CTL;
	    struct w32PERIF_EMMC_TST_CTL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_NAND_CTL0_discovery_inhibit(r32)      _BFGET_(r32, 0, 0)
    #define   SET32PERIF_NAND_CTL0_discovery_inhibit(r32, v)    _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_NAND_CTL0_discovery_inhibit(r16)      _BFGET_(r16, 0, 0)
    #define   SET16PERIF_NAND_CTL0_discovery_inhibit(r16, v)    _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_NAND_CTL0_discovery_ignore_crc(r32)   _BFGET_(r32, 1, 1)
    #define   SET32PERIF_NAND_CTL0_discovery_ignore_crc(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_NAND_CTL0_discovery_ignore_crc(r16)   _BFGET_(r16, 1, 1)
    #define   SET16PERIF_NAND_CTL0_discovery_ignore_crc(r16, v) _BFSET_(r16, 1, 1, v)

    #define   GET32PERIF_NAND_CTL0_rb_valid_time(r32)          _BFGET_(r32, 17, 2)
    #define   SET32PERIF_NAND_CTL0_rb_valid_time(r32, v)        _BFSET_(r32, 17, 2, v)

    #define     w32PERIF_NAND_CTL0                             {\
	    UNSG32 uNAND_CTL0_discovery_inhibit                :  1;\
	    UNSG32 uNAND_CTL0_discovery_ignore_crc             :  1;\
	    UNSG32 uNAND_CTL0_rb_valid_time                    : 16;\
	    UNSG32 RSVDx20_b18                                 : 14;\
	}
    union { UNSG32 u32PERIF_NAND_CTL0;
	    struct w32PERIF_NAND_CTL0;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_NAND_CTL1_dd_page_size(r32)           _BFGET_(r32, 15, 0)
    #define   SET32PERIF_NAND_CTL1_dd_page_size(r32, v)         _BFSET_(r32, 15, 0, v)
    #define   GET16PERIF_NAND_CTL1_dd_page_size(r16)           _BFGET_(r16, 15, 0)
    #define   SET16PERIF_NAND_CTL1_dd_page_size(r16, v)         _BFSET_(r16, 15, 0, v)

    #define   GET32PERIF_NAND_CTL1_dd_page_per_block(r32)      _BFGET_(r32, 31, 16)
    #define   SET32PERIF_NAND_CTL1_dd_page_per_block(r32, v)    _BFSET_(r32, 31, 16, v)
    #define   GET16PERIF_NAND_CTL1_dd_page_per_block(r16)      _BFGET_(r16, 15, 0)
    #define   SET16PERIF_NAND_CTL1_dd_page_per_block(r16, v)    _BFSET_(r16, 15, 0, v)

    #define     w32PERIF_NAND_CTL1                             {\
	    UNSG32 uNAND_CTL1_dd_page_size                     : 16;\
	    UNSG32 uNAND_CTL1_dd_page_per_block                : 16;\
	}
    union { UNSG32 u32PERIF_NAND_CTL1;
	    struct w32PERIF_NAND_CTL1;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_NAND_CTL2_dd_lun_number(r32)          _BFGET_(r32, 3, 0)
    #define   SET32PERIF_NAND_CTL2_dd_lun_number(r32, v)        _BFSET_(r32, 3, 0, v)
    #define   GET16PERIF_NAND_CTL2_dd_lun_number(r16)          _BFGET_(r16, 3, 0)
    #define   SET16PERIF_NAND_CTL2_dd_lun_number(r16, v)        _BFSET_(r16, 3, 0, v)

    #define   GET32PERIF_NAND_CTL2_dd_four_addr_cycles(r32)    _BFGET_(r32, 4, 4)
    #define   SET32PERIF_NAND_CTL2_dd_four_addr_cycles(r32, v)  _BFSET_(r32, 4, 4, v)
    #define   GET16PERIF_NAND_CTL2_dd_four_addr_cycles(r16)    _BFGET_(r16, 4, 4)
    #define   SET16PERIF_NAND_CTL2_dd_four_addr_cycles(r16, v)  _BFSET_(r16, 4, 4, v)

    #define     w32PERIF_NAND_CTL2                             {\
	    UNSG32 uNAND_CTL2_dd_lun_number                    :  4;\
	    UNSG32 uNAND_CTL2_dd_four_addr_cycles              :  1;\
	    UNSG32 RSVDx28_b5                                  : 27;\
	}
    union { UNSG32 u32PERIF_NAND_CTL2;
	    struct w32PERIF_NAND_CTL2;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_NAND_DEVICE_IDL_id_low(r32)           _BFGET_(r32, 31, 0)
    #define   SET32PERIF_NAND_DEVICE_IDL_id_low(r32, v)         _BFSET_(r32, 31, 0, v)

    #define     w32PERIF_NAND_DEVICE_IDL                       {\
	    UNSG32 uNAND_DEVICE_IDL_id_low                     : 32;\
	}
    union { UNSG32 u32PERIF_NAND_DEVICE_IDL;
	    struct w32PERIF_NAND_DEVICE_IDL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_NAND_DEVICE_IDH_id_high(r32)          _BFGET_(r32, 7, 0)
    #define   SET32PERIF_NAND_DEVICE_IDH_id_high(r32, v)        _BFSET_(r32, 7, 0, v)
    #define   GET16PERIF_NAND_DEVICE_IDH_id_high(r16)          _BFGET_(r16, 7, 0)
    #define   SET16PERIF_NAND_DEVICE_IDH_id_high(r16, v)        _BFSET_(r16, 7, 0, v)

    #define     w32PERIF_NAND_DEVICE_IDH                       {\
	    UNSG32 uNAND_DEVICE_IDH_id_high                    :  8;\
	    UNSG32 RSVDx30_b8                                  : 24;\
	}
    union { UNSG32 u32PERIF_NAND_DEVICE_IDH;
	    struct w32PERIF_NAND_DEVICE_IDH;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_NAND_STATUS_init_comp(r32)            _BFGET_(r32, 0, 0)
    #define   SET32PERIF_NAND_STATUS_init_comp(r32, v)          _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_NAND_STATUS_init_comp(r16)            _BFGET_(r16, 0, 0)
    #define   SET16PERIF_NAND_STATUS_init_comp(r16, v)          _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_NAND_STATUS_init_fail(r32)            _BFGET_(r32, 1, 1)
    #define   SET32PERIF_NAND_STATUS_init_fail(r32, v)          _BFSET_(r32, 1, 1, v)
    #define   GET16PERIF_NAND_STATUS_init_fail(r16)            _BFGET_(r16, 1, 1)
    #define   SET16PERIF_NAND_STATUS_init_fail(r16, v)          _BFSET_(r16, 1, 1, v)

    #define   GET32PERIF_NAND_STATUS_ctrl_busy(r32)            _BFGET_(r32, 2, 2)
    #define   SET32PERIF_NAND_STATUS_ctrl_busy(r32, v)          _BFSET_(r32, 2, 2, v)
    #define   GET16PERIF_NAND_STATUS_ctrl_busy(r16)            _BFGET_(r16, 2, 2)
    #define   SET16PERIF_NAND_STATUS_ctrl_busy(r16, v)          _BFSET_(r16, 2, 2, v)

    #define     w32PERIF_NAND_STATUS                           {\
	    UNSG32 uNAND_STATUS_init_comp                      :  1;\
	    UNSG32 uNAND_STATUS_init_fail                      :  1;\
	    UNSG32 uNAND_STATUS_ctrl_busy                      :  1;\
	    UNSG32 RSVDx34_b3                                  : 29;\
	}
    union { UNSG32 u32PERIF_NAND_STATUS;
	    struct w32PERIF_NAND_STATUS;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_RGMII_CTL_TXC_90DEG_SEL(r32)          _BFGET_(r32, 0, 0)
    #define   SET32PERIF_RGMII_CTL_TXC_90DEG_SEL(r32, v)        _BFSET_(r32, 0, 0, v)
    #define   GET16PERIF_RGMII_CTL_TXC_90DEG_SEL(r16)          _BFGET_(r16, 0, 0)
    #define   SET16PERIF_RGMII_CTL_TXC_90DEG_SEL(r16, v)        _BFSET_(r16, 0, 0, v)

    #define   GET32PERIF_RGMII_CTL_PHY_INTF_SEL(r32)           _BFGET_(r32, 3, 1)
    #define   SET32PERIF_RGMII_CTL_PHY_INTF_SEL(r32, v)         _BFSET_(r32, 3, 1, v)
    #define   GET16PERIF_RGMII_CTL_PHY_INTF_SEL(r16)           _BFGET_(r16, 3, 1)
    #define   SET16PERIF_RGMII_CTL_PHY_INTF_SEL(r16, v)         _BFSET_(r16, 3, 1, v)

    #define     w32PERIF_RGMII_CTL                             {\
	    UNSG32 uRGMII_CTL_TXC_90DEG_SEL                    :  1;\
	    UNSG32 uRGMII_CTL_PHY_INTF_SEL                     :  3;\
	    UNSG32 RSVDx38_b4                                  : 28;\
	}
    union { UNSG32 u32PERIF_RGMII_CTL;
	    struct w32PERIF_RGMII_CTL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO(r32)    _BFGET_(r32, 31, 0)
    #define   SET32PERIF_RGMII_STATUS_PTP_TIMESTAMP_LO(r32, v)  _BFSET_(r32, 31, 0, v)

    #define     w32PERIF_RGMII_STATUS                          {\
	    UNSG32 uRGMII_STATUS_PTP_TIMESTAMP_LO              : 32;\
	}
    union { UNSG32 u32PERIF_RGMII_STATUS;
	    struct w32PERIF_RGMII_STATUS;
	  };
    #define   GET32PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI(r32)    _BFGET_(r32, 31, 0)
    #define   SET32PERIF_RGMII_STATUS_PTP_TIMESTAMP_HI(r32, v)  _BFSET_(r32, 31, 0, v)

    #define     w32PERIF_RGMII_STATUS1                         {\
	    UNSG32 uRGMII_STATUS_PTP_TIMESTAMP_HI              : 32;\
	}
    union { UNSG32 u32PERIF_RGMII_STATUS1;
	    struct w32PERIF_RGMII_STATUS1;
	  };
    ///////////////////////////////////////////////////////////
	SIE_KPINT                                        ie_KPINT;
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_RSERVED_CTRL0_ctrl(r32)               _BFGET_(r32, 31, 0)
    #define   SET32PERIF_RSERVED_CTRL0_ctrl(r32, v)             _BFSET_(r32, 31, 0, v)

    #define     w32PERIF_RSERVED_CTRL0                         {\
	    UNSG32 uRSERVED_CTRL0_ctrl                         : 32;\
	}
    union { UNSG32 u32PERIF_RSERVED_CTRL0;
	    struct w32PERIF_RSERVED_CTRL0;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_PERIF;

    typedef union  T32PERIF_PHY_DBG_CTRL {
		UNSG32 u32;
	    struct w32PERIF_PHY_DBG_CTRL;
		 } T32PERIF_PHY_DBG_CTRL;
    typedef union  T32PERIF_UART_PORT_CTRL {
		UNSG32 u32;
	    struct w32PERIF_UART_PORT_CTRL;
		 } T32PERIF_UART_PORT_CTRL;
    typedef union  T32PERIF_TW_PORT_CTRL {
		UNSG32 u32;
	    struct w32PERIF_TW_PORT_CTRL;
		 } T32PERIF_TW_PORT_CTRL;
    typedef union  T32PERIF_GPIO0_PORT_CTRL {
		UNSG32 u32;
	    struct w32PERIF_GPIO0_PORT_CTRL;
		 } T32PERIF_GPIO0_PORT_CTRL;
    typedef union  T32PERIF_GPIO1_PORT_CTRL {
		UNSG32 u32;
	    struct w32PERIF_GPIO1_PORT_CTRL;
		 } T32PERIF_GPIO1_PORT_CTRL;
    typedef union  T32PERIF_SDIO_SIG_CTRL {
		UNSG32 u32;
	    struct w32PERIF_SDIO_SIG_CTRL;
		 } T32PERIF_SDIO_SIG_CTRL;
    typedef union  T32PERIF_SDIO_TST_CTL {
		UNSG32 u32;
	    struct w32PERIF_SDIO_TST_CTL;
		 } T32PERIF_SDIO_TST_CTL;
    typedef union  T32PERIF_EMMC_TST_CTL {
		UNSG32 u32;
	    struct w32PERIF_EMMC_TST_CTL;
		 } T32PERIF_EMMC_TST_CTL;
    typedef union  T32PERIF_NAND_CTL0 {
		UNSG32 u32;
	    struct w32PERIF_NAND_CTL0;
		 } T32PERIF_NAND_CTL0;
    typedef union  T32PERIF_NAND_CTL1 {
		UNSG32 u32;
	    struct w32PERIF_NAND_CTL1;
		 } T32PERIF_NAND_CTL1;
    typedef union  T32PERIF_NAND_CTL2 {
		UNSG32 u32;
	    struct w32PERIF_NAND_CTL2;
		 } T32PERIF_NAND_CTL2;
    typedef union  T32PERIF_NAND_DEVICE_IDL {
		UNSG32 u32;
	    struct w32PERIF_NAND_DEVICE_IDL;
		 } T32PERIF_NAND_DEVICE_IDL;
    typedef union  T32PERIF_NAND_DEVICE_IDH {
		UNSG32 u32;
	    struct w32PERIF_NAND_DEVICE_IDH;
		 } T32PERIF_NAND_DEVICE_IDH;
    typedef union  T32PERIF_NAND_STATUS {
		UNSG32 u32;
	    struct w32PERIF_NAND_STATUS;
		 } T32PERIF_NAND_STATUS;
    typedef union  T32PERIF_RGMII_CTL {
		UNSG32 u32;
	    struct w32PERIF_RGMII_CTL;
		 } T32PERIF_RGMII_CTL;
    typedef union  T32PERIF_RGMII_STATUS {
		UNSG32 u32;
	    struct w32PERIF_RGMII_STATUS;
		 } T32PERIF_RGMII_STATUS;
    typedef union  T32PERIF_RGMII_STATUS1 {
		UNSG32 u32;
	    struct w32PERIF_RGMII_STATUS1;
		 } T32PERIF_RGMII_STATUS1;
    typedef union  T32PERIF_RSERVED_CTRL0 {
		UNSG32 u32;
	    struct w32PERIF_RSERVED_CTRL0;
		 } T32PERIF_RSERVED_CTRL0;
    ///////////////////////////////////////////////////////////

    typedef union  TPERIF_PHY_DBG_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_PHY_DBG_CTRL;
		   };
		 } TPERIF_PHY_DBG_CTRL;
    typedef union  TPERIF_UART_PORT_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_UART_PORT_CTRL;
		   };
		 } TPERIF_UART_PORT_CTRL;
    typedef union  TPERIF_TW_PORT_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_TW_PORT_CTRL;
		   };
		 } TPERIF_TW_PORT_CTRL;
    typedef union  TPERIF_GPIO0_PORT_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_GPIO0_PORT_CTRL;
		   };
		 } TPERIF_GPIO0_PORT_CTRL;
    typedef union  TPERIF_GPIO1_PORT_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_GPIO1_PORT_CTRL;
		   };
		 } TPERIF_GPIO1_PORT_CTRL;
    typedef union  TPERIF_SDIO_SIG_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_SDIO_SIG_CTRL;
		   };
		 } TPERIF_SDIO_SIG_CTRL;
    typedef union  TPERIF_SDIO_TST_CTL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_SDIO_TST_CTL;
		   };
		 } TPERIF_SDIO_TST_CTL;
    typedef union  TPERIF_EMMC_TST_CTL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_EMMC_TST_CTL;
		   };
		 } TPERIF_EMMC_TST_CTL;
    typedef union  TPERIF_NAND_CTL0 {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_NAND_CTL0;
		   };
		 } TPERIF_NAND_CTL0;
    typedef union  TPERIF_NAND_CTL1 {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_NAND_CTL1;
		   };
		 } TPERIF_NAND_CTL1;
    typedef union  TPERIF_NAND_CTL2 {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_NAND_CTL2;
		   };
		 } TPERIF_NAND_CTL2;
    typedef union  TPERIF_NAND_DEVICE_IDL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_NAND_DEVICE_IDL;
		   };
		 } TPERIF_NAND_DEVICE_IDL;
    typedef union  TPERIF_NAND_DEVICE_IDH {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_NAND_DEVICE_IDH;
		   };
		 } TPERIF_NAND_DEVICE_IDH;
    typedef union  TPERIF_NAND_STATUS {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_NAND_STATUS;
		   };
		 } TPERIF_NAND_STATUS;
    typedef union  TPERIF_RGMII_CTL {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_RGMII_CTL;
		   };
		 } TPERIF_RGMII_CTL;
    typedef union  TPERIF_RGMII_STATUS {
		UNSG32 u32[2];
	    struct {
	    struct w32PERIF_RGMII_STATUS;
	    struct w32PERIF_RGMII_STATUS1;
		   };
		 } TPERIF_RGMII_STATUS;
    typedef union  TPERIF_RSERVED_CTRL0 {
		UNSG32 u32[1];
	    struct {
	    struct w32PERIF_RSERVED_CTRL0;
		   };
		 } TPERIF_RSERVED_CTRL0;

    ///////////////////////////////////////////////////////////
     SIGN32 PERIF_drvrd(SIE_PERIF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 PERIF_drvwr(SIE_PERIF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void PERIF_reset(SIE_PERIF *p);
     SIGN32 PERIF_cmp(SIE_PERIF *p, SIE_PERIF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define PERIF_check(p, pie, pfx, hLOG) PERIF_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define PERIF_print(p,    pfx, hLOG) PERIF_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: PERIF
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE PLL_COUNTER                              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL                 (P)
///               %unsigned 16 REF_COUNT_MAX             0x0
///                                    ###
///                                    * The refClk counter will count for REF_COUNT_MAX number of cycles
///                                    ###
///               %unsigned 1  START                     0x0
///                                    ###
///                                    * Starts the counter when programmed to 1
///                                    ###
///               %unsigned 3  CLK_SEL                   0x0
///                                    ###
///                                    * Selects the PLL clock source for measurement
///                                    * 3’d0 : CPU PLL / 128
///                                    * 3’d1 : MEM PLL / 12
///                                    * 3’d2 : SYS PLL 0 / 12
///                                    * 3’d3 : SYS PLL 1 / 12
///                                    * 3’d4 : APLL 0 / 12
///                                    * 3’d5 : APLL 1 / 12
///                                    * 3’d6 : VPLL 0 / 12
///                                    * 3’d7 : VPLL 1 / 12
///                                    * Note: All PLLs have a divide by 12 divider for debug. This clock
///                                    * is brought into the PLL_COUNTER measurement block to reduce the
///                                    * need to close timing for the counter at very high frequencies.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00004 STATUS               (R-)
///               %unsigned 1  DONE                      0x0
///                                    ###
///                                    * refClk counter has reached REF_COUNT_MAX. Result in PLL_COUNT
///                                    * can be read.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 RESULT               (R-)
///               %unsigned 24 PLL_COUNT                 0x0
///                                    ###
///                                    * Measured PLL counter result
///                                    ###
///               %%        8          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      12B, bits:      45b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_PLL_COUNTER
#define h_PLL_COUNTER () {}

    #define     RA_PLL_COUNTER_CTRL                            0x0000

    #define     BA_PLL_COUNTER_CTRL_REF_COUNT_MAX              0x0000
    #define     B16PLL_COUNTER_CTRL_REF_COUNT_MAX              0x0000
    #define   LSb32PLL_COUNTER_CTRL_REF_COUNT_MAX                 0
    #define   LSb16PLL_COUNTER_CTRL_REF_COUNT_MAX                 0
    #define       bPLL_COUNTER_CTRL_REF_COUNT_MAX              16
    #define   MSK32PLL_COUNTER_CTRL_REF_COUNT_MAX                 0x0000FFFF

    #define     BA_PLL_COUNTER_CTRL_START                      0x0002
    #define     B16PLL_COUNTER_CTRL_START                      0x0002
    #define   LSb32PLL_COUNTER_CTRL_START                         16
    #define   LSb16PLL_COUNTER_CTRL_START                         0
    #define       bPLL_COUNTER_CTRL_START                      1
    #define   MSK32PLL_COUNTER_CTRL_START                         0x00010000

    #define     BA_PLL_COUNTER_CTRL_CLK_SEL                    0x0002
    #define     B16PLL_COUNTER_CTRL_CLK_SEL                    0x0002
    #define   LSb32PLL_COUNTER_CTRL_CLK_SEL                       17
    #define   LSb16PLL_COUNTER_CTRL_CLK_SEL                       1
    #define       bPLL_COUNTER_CTRL_CLK_SEL                    3
    #define   MSK32PLL_COUNTER_CTRL_CLK_SEL                       0x000E0000
    ///////////////////////////////////////////////////////////
    #define     RA_PLL_COUNTER_STATUS                          0x0004

    #define     BA_PLL_COUNTER_STATUS_DONE                     0x0004
    #define     B16PLL_COUNTER_STATUS_DONE                     0x0004
    #define   LSb32PLL_COUNTER_STATUS_DONE                        0
    #define   LSb16PLL_COUNTER_STATUS_DONE                        0
    #define       bPLL_COUNTER_STATUS_DONE                     1
    #define   MSK32PLL_COUNTER_STATUS_DONE                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_PLL_COUNTER_RESULT                          0x0008

    #define     BA_PLL_COUNTER_RESULT_PLL_COUNT                0x0008
    #define     B16PLL_COUNTER_RESULT_PLL_COUNT                0x0008
    #define   LSb32PLL_COUNTER_RESULT_PLL_COUNT                   0
    #define   LSb16PLL_COUNTER_RESULT_PLL_COUNT                   0
    #define       bPLL_COUNTER_RESULT_PLL_COUNT                24
    #define   MSK32PLL_COUNTER_RESULT_PLL_COUNT                   0x00FFFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_PLL_COUNTER {
    ///////////////////////////////////////////////////////////
    #define   GET32PLL_COUNTER_CTRL_REF_COUNT_MAX(r32)         _BFGET_(r32, 15, 0)
    #define   SET32PLL_COUNTER_CTRL_REF_COUNT_MAX(r32, v)       _BFSET_(r32, 15, 0, v)
    #define   GET16PLL_COUNTER_CTRL_REF_COUNT_MAX(r16)         _BFGET_(r16, 15, 0)
    #define   SET16PLL_COUNTER_CTRL_REF_COUNT_MAX(r16, v)       _BFSET_(r16, 15, 0, v)

    #define   GET32PLL_COUNTER_CTRL_START(r32)                 _BFGET_(r32, 16, 16)
    #define   SET32PLL_COUNTER_CTRL_START(r32, v)               _BFSET_(r32, 16, 16, v)
    #define   GET16PLL_COUNTER_CTRL_START(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16PLL_COUNTER_CTRL_START(r16, v)               _BFSET_(r16, 0, 0, v)

    #define   GET32PLL_COUNTER_CTRL_CLK_SEL(r32)               _BFGET_(r32, 19, 17)
    #define   SET32PLL_COUNTER_CTRL_CLK_SEL(r32, v)             _BFSET_(r32, 19, 17, v)
    #define   GET16PLL_COUNTER_CTRL_CLK_SEL(r16)               _BFGET_(r16, 3, 1)
    #define   SET16PLL_COUNTER_CTRL_CLK_SEL(r16, v)             _BFSET_(r16, 3, 1, v)

    #define     w32PLL_COUNTER_CTRL                            {\
	    UNSG32 uCTRL_REF_COUNT_MAX                         : 16;\
	    UNSG32 uCTRL_START                                 :  1;\
	    UNSG32 uCTRL_CLK_SEL                               :  3;\
	    UNSG32 RSVDx0_b20                                  : 12;\
	}
    union { UNSG32 u32PLL_COUNTER_CTRL;
	    struct w32PLL_COUNTER_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PLL_COUNTER_STATUS_DONE(r32)                _BFGET_(r32, 0, 0)
    #define   SET32PLL_COUNTER_STATUS_DONE(r32, v)              _BFSET_(r32, 0, 0, v)
    #define   GET16PLL_COUNTER_STATUS_DONE(r16)                _BFGET_(r16, 0, 0)
    #define   SET16PLL_COUNTER_STATUS_DONE(r16, v)              _BFSET_(r16, 0, 0, v)

    #define     w32PLL_COUNTER_STATUS                          {\
	    UNSG32 uSTATUS_DONE                                :  1;\
	    UNSG32 RSVDx4_b1                                   : 31;\
	}
    union { UNSG32 u32PLL_COUNTER_STATUS;
	    struct w32PLL_COUNTER_STATUS;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32PLL_COUNTER_RESULT_PLL_COUNT(r32)           _BFGET_(r32, 23, 0)
    #define   SET32PLL_COUNTER_RESULT_PLL_COUNT(r32, v)         _BFSET_(r32, 23, 0, v)

    #define     w32PLL_COUNTER_RESULT                          {\
	    UNSG32 uRESULT_PLL_COUNT                           : 24;\
	    UNSG32 RSVDx8_b24                                  :  8;\
	}
    union { UNSG32 u32PLL_COUNTER_RESULT;
	    struct w32PLL_COUNTER_RESULT;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_PLL_COUNTER;

    typedef union  T32PLL_COUNTER_CTRL {
		UNSG32 u32;
	    struct w32PLL_COUNTER_CTRL;
		 } T32PLL_COUNTER_CTRL;
    typedef union  T32PLL_COUNTER_STATUS {
		UNSG32 u32;
	    struct w32PLL_COUNTER_STATUS;
		 } T32PLL_COUNTER_STATUS;
    typedef union  T32PLL_COUNTER_RESULT {
		UNSG32 u32;
	    struct w32PLL_COUNTER_RESULT;
		 } T32PLL_COUNTER_RESULT;
    ///////////////////////////////////////////////////////////

    typedef union  TPLL_COUNTER_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32PLL_COUNTER_CTRL;
		   };
		 } TPLL_COUNTER_CTRL;
    typedef union  TPLL_COUNTER_STATUS {
		UNSG32 u32[1];
	    struct {
	    struct w32PLL_COUNTER_STATUS;
		   };
		 } TPLL_COUNTER_STATUS;
    typedef union  TPLL_COUNTER_RESULT {
		UNSG32 u32[1];
	    struct {
	    struct w32PLL_COUNTER_RESULT;
		   };
		 } TPLL_COUNTER_RESULT;

    ///////////////////////////////////////////////////////////
     SIGN32 PLL_COUNTER_drvrd(SIE_PLL_COUNTER *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 PLL_COUNTER_drvwr(SIE_PLL_COUNTER *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void PLL_COUNTER_reset(SIE_PLL_COUNTER *p);
     SIGN32 PLL_COUNTER_cmp(SIE_PLL_COUNTER *p, SIE_PLL_COUNTER *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define PLL_COUNTER_check(p, pie, pfx, hLOG) PLL_COUNTER_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define PLL_COUNTER_print(p,    pfx, hLOG) PLL_COUNTER_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: PLL_COUNTER
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE Gbl                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ProductId            (RNB-)
///               ###
///               * Product ID register
///               ###
///               %unsigned 32 Id
///                                    ###
///                                    * Product ID:
///                                    * [31:28] : Revision Id (0x4)
///                                    * [27:12] : Part Number  (0x0470)
///                                    * [11:1] : Manufacture Id (0x588)
///                                    * [0] : Reserved  (0x1)
///                                    ###
///     @ 0x00004 ProductId_ext        (RNB-)
///               ###
///               * Product ID Extension
///               ###
///               %unsigned 8  ID_EXT
///                                    ###
///                                    * ID extension value
///                                    * [7:0] 30xB0
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00008 INT_ID               (RNB-)
///               ###
///               * **INTERNAL_ONLY**
///               * Internal ID register
///               ###
///               %unsigned 8  VALUE
///                                    ###
///                                    * Internal ID
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x0000C bootStrap            (R-)
///               ###
///               * Boot Strap Register (Read Only).  Boot straps are latched on
///               * Power On and stored in this register.
///               * This register can be reset only by PAD reset.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 16 softwareStrap
///                                    ###
///                                    * Straps for software usage
///                                    * BG4CT use the first 4 of them
///                                    ###
///               %unsigned 2  bootSrc
///                                    : ROM_SPI_BOOT              0x0
///                                    : ROM_NAND_BOOT             0x1
///                                    : ROM_EMMC_BOOT             0x2
///                                    : ROM_SPI_DIRECT_BOOT       0x3
///                                                 ###
///                                                 * CPU boot source
///                                                 * 00: ROM boot from SPI
///                                                 * 01: NAND Boot [TODO]
///                                                 * 10: ROM boot from EMMC
///                                                 * 11: Direct boot from SPI (Only available when ENG_EN=1)
///                                                 * Note: When direct boot from SPI (SPI clear boot), pwrCntlByps
///                                                 * and cpuRstByps should be set to 1
///                                                 ###
///               %unsigned 1  cpuRstByps
///                                    : CPU_INT_RST_BYPS          0x1
///                                    : CPU_INT_RST_EN            0x0
///                                                 ###
///                                                 * CPU reset bypass strap
///                                                 * 1: Bypass reset logic inside CPU partition
///                                                 * 0: Enable reset logic inside CPU partition
///                                                 ###
///               %unsigned 1  pllPwrDown
///                                    : PWR_DOWN                  0x1
///                                    : PWR_UP                    0x0
///                                                 ###
///                                                 * PLL Power Down
///                                                 * SYS/MEM/CPU PLL Power Down
///                                                 * 1: Power Down
///                                                 * 0: Power UP
///                                                 ###
///               %unsigned 1  sysPll_0Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * SYSPLL Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  System PLL Bypassed
///                                                 ###
///               %unsigned 1  sysPll_1Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * SYSPLL Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  System PLL Bypassed
///                                                 ###
///               %unsigned 1  memPllByps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * MEMPLL Bypass indicator
///                                                 * 0:  No Bypass
///                                                 * 1:  Memory PLL Bypassed
///                                                 ###
///               %unsigned 1  cpuPllByps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * CPUPLL Bypass indicator
///                                                 * 0:  No Bypass
///                                                 * 1:  CPUPLL Bypassed
///                                                 ###
///               %unsigned 1  emmcV12Enable
///                                    : V1R8                      0x0
///                                    : V1R2                      0x1
///                                                 ###
///                                                 * Not Used
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  ENG_EN
///                                    : PRODUCTION_MODE           0x0
///                                    : DEVELOP_MODE             0x1
///                                                 ###
///                                                 * Production or development mode. This is not a boot strap bit.
///                                                 * It's a bonding option and only read by AHB.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  LEGACY_BOOT
///                                    : FAST_BOOT_MODE            0x0
///                                    : LEGACY_BOOT_MODE          0x1
///                                                 ###
///                                                 * Pll lock and reset wait time reduced from 20ms to 2ms.
///                                                 ###
///               %unsigned 1  aPll_0Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * APLL0 Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  APLL0 Bypassed
///                                                 ###
///               %%        4          # Stuffing bits...
///     @ 0x00010 bootStrapEn          (P)
///               ###
///               * Boot Strap Enable register
///               * This register provides the option to over write the Bootstraps
///               * using CPU register write
///               ###
///               %unsigned 1  cpuRstBypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * CPU Reset Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  pllPwrDownEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * PLL Power Down Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  sysPLL_0BypsEn            0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 *  System PLL0 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  memPLLBypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * Memory PLL Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  cpuPLLBypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * CPU PLL Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  legacyBootEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * Legacy Boot Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  sysPLL_1BypsEn            0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * System PLL1 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  aPLL_0BypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * APLL0 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %%        24         # Stuffing bits...
///     @ 0x00014 pkgSel               (R-)
///               ###
///               * package select register (read only)
///               * identify different package
///               ###
///               %unsigned 1  DDR32bit
///                                    ###
///                                    * Form pad PKG_SEL_0
///                                    * 0: 64 bit DDR
///                                    * 1: 32 bit DDR
///                                    * bit 1 reserved
///                                    ###
///               %unsigned 1  reserved
///                                    ###
///                                    * Form pad PKG_SEL_1
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00018                      (W-)
///     #         # Stuffing bytes...
///               %% 320
///     @ 0x00040 chipCntl             (P-)
///               ###
///               * Misc Chip Control bits
///               ###
///               %unsigned 3  DBG_SEL                   0x0
///                                    ###
///                                    * Debug bus selection.
///                                    * 1: Reserved
///                                    * 2: NPU_Debug[7:0]
///                                    * 3: Reserved
///                                    * 4:perifTop_dbg_bus[15:0]
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  TW1_SEL                   0x0
///                                    ###
///                                    * Selecting TW1 between available A & B ports
///                                    * 0: TW1A selected
///                                    * 1: TW1B Selected
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00044                      (W-)
///     #         # Stuffing bytes...
///               %% 480
///     @ 0x00080 sw_generic0          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg0                    0x0
///     @ 0x00084 sw_generic1          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg1                    0x0
///     @ 0x00088 sw_generic2          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg2                    0x0
///     @ 0x0008C sw_generic3          (P-)
///               ###
///               * Generic software register. This register can be reset only by
///               * PAD reset.
///               ###
///               %unsigned 32 swReg3                    0x0
///     @ 0x00090                      (W-)
///     #         # Stuffing bytes...
///               %% 896
///     @ 0x00100                      (P)
///     # 0x00100 RWTC_SOC
///               $SRAMRWTC            RWTC_SOC          REG
///     @ 0x0010C                      (P)
///     # 0x0010C SRAM_PWR_EMMC
///               $SRAMPWR             SRAM_PWR_EMMC     REG
///                                    ###
///                                    * Sram power control for emmc
///                                    ###
///     @ 0x00110                      (P)
///     # 0x00110 SRAM_PWR_SDIO
///               $SRAMPWR             SRAM_PWR_SDIO     REG
///                                    ###
///                                    * Sram power control for sdio
///                                    ###
///     @ 0x00114                      (P)
///     # 0x00114 SRAM_PWR_USB2
///               $SRAMPWR             SRAM_PWR_USB2     REG
///                                    ###
///                                    * Sram power control for usb2
///                                    ###
///     @ 0x00118                      (P)
///     # 0x00118 SRAM_PWR_SISS
///               $SRAMPWR             SRAM_PWR_SISS     REG
///                                    ###
///                                    * Sram power control for siss
///                                    ###
///     @ 0x0011C                      (P)
///     # 0x0011C SRAM_PWR_PB
///               $SRAMPWR             SRAM_PWR_PB       REG
///                                    ###
///                                    * Sram power control for PB
///                                    ###
///     @ 0x00120                      (P)
///     # 0x00120 SRAM_PWR_GFX3D
///               $SRAMPWR             SRAM_PWR_GFX3D    REG
///                                    ###
///                                    * Sram power control for gfx3d
///                                    ###
///     @ 0x00124                      (P)
///     # 0x00124 SRAM_PWR_MC
///               $SRAMPWR             SRAM_PWR_MC       REG
///                                    ###
///                                    * Sram power control for MC
///                                    ###
///     @ 0x00128                      (P)
///     # 0x00128 SRAM_PWR_ALM
///               $SRAMPWR             SRAM_PWR_ALM      REG
///                                    ###
///                                    * Sram power control for ALM
///                                    ###
///     @ 0x0012C                      (P)
///     # 0x0012C SRAM_PWR_SPMEM
///               $SRAMPWR             SRAM_PWR_SPMEM    REG
///                                    ###
///                                    * Sram power control for SPSRAM
///                                    ###
///     @ 0x00130                      (P)
///     # 0x00130 SRAM_PWR_USB3
///               $SRAMPWR             SRAM_PWR_USB3     REG
///                                    ###
///                                    * Sram power control for USB3
///                                    ###
///     @ 0x00134                      (P)
///     # 0x00134 SRAM_PWR_GE
///               $SRAMPWR             SRAM_PWR_GE       REG
///                                    ###
///                                    * Sram power control for GE
///                                    ###
///     @ 0x00138                      (P)
///     # 0x00138 SRAM_PWR_NAND
///               $SRAMPWR             SRAM_PWR_NAND     REG
///                                    ###
///                                    * Sram power control for NAND
///                                    ###
///     @ 0x0013C                      (W-)
///     #         # Stuffing bytes...
///               %% 736
///     @ 0x00198 FPGAR                (R-)
///               ###
///               * FPGA Revision ID Read only register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 FPGAR                     0xB3A9FA72
///                                    ###
///                                    * FPGA Revision ID register
///                                    ###
///     @ 0x0019C FPGARW               (P)
///               ###
///               * FPGA General Purpose RW register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 FPGARW                    0x0
///                                    ###
///                                    * FPGA General purpose RW register
///                                    * PLL Control Region
///                                    ###
///     @ 0x001A0                      (W-)
///     #         # Stuffing bytes...
///               %% 768
///     @ 0x00200                      (P)
///     # 0x00200 sysPll_0
///               $abipll              sysPll_0          REG
///     @ 0x00220                      (P)
///     # 0x00220 sysPll_1
///               $abipll              sysPll_1          REG
///                                    ###
///                                    * Clock and Reset Control Region
///                                    ###
///     @ 0x00240                      (W-)
///     #         # Stuffing bytes...
///               %% 7680
///     @ 0x00600 ResetTrigger         (P-)
///               ###
///               * Software reset trigger register. Using this register software
///               * can reset particular module of the chip. Writing 1 to this
///               * register will trigger 16 reference clock (640ns) reset to the
///               * corresponding module (except for PCIe for PCIe user has all the
///               * reset duration control so writing 1 will trigger the reset and
///               * writing 0 will de-assert the reset).
///               * In the following register:
///               * 0  :  No Reset
///               * 1  :  Reset
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  chipReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in the chip.
///                                                 * Note: When this bit is set then there is no reset sequence
///                                                 * followed to de-assert the reset to CPU in the end as done in
///                                                 * case of boot-up. So using this bit is not suggested as CPU will
///                                                 * come out of the reset earlier than modules which are running on
///                                                 * slow clocks as compared to CPU.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  socDdrSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset memory controller
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00604 ResetStatus          (RW-)
///               ###
///               * Reset Status register indicates whether reset is triggered or
///               * not to the corresponding module.
///               * 0 : Reset not issued
///               * 1 : Reset issued
///               * Note: Software need to write 0 to clear this register.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  ChipResetStatus           0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 *  **INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  socDdrSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Memory controller reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00608                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x0060C WDTResetStatus       (RW-)
///               %unsigned 1  wd0Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 0 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  wd1Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 1 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  wd2Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer  2 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        29         # Stuffing bits...
///     @ 0x00610 WDTSysRstMask        (RW)
///               ###
///               * Mask the sys rst from apbPerif wdt from triggering soc reset.
///               ###
///               %unsigned 1  wdt0Mask                  0x0
///                                    ###
///                                    * 1: Mask sys reset from wdt0
///                                    ###
///               %unsigned 1  wdt1Mask                  0x0
///                                    ###
///                                    * 1: Mask sys reset from wdt1
///                                    ###
///               %unsigned 1  wdt2Mask                  0x0
///                                    ###
///                                    * 1: Mask sys reset from wdt2
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00614 CHIP_RESET_TRACKER   (RW)
///               ###
///               * SW can perform read/write on this register to keep track of
///               * the chip reset.
///               * Note:  A Shadow register is implemented for this register which
///               * stores the value that is written to this register. The Shadow
///               * Register gets reset only by the RSTIn Chip Pin.
///               ###
///               %unsigned 32 VALUE                     0x0
///     @ 0x00618                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00620 avioReset            (P-)
///               ###
///               * AVIO reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in AVIO
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00624 avioResetStatus      (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of AVIO
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00628                      (W-)
///     #         # Stuffing bytes...
///               %% 704
///     @ 0x00680 perifReset           (P-)
///               ###
///               * perif reset register
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset whole Peripheral unit
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %unsigned 1  ahbApbSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral AHB-APB module (includes GPIO, Two wire
///                                                 * Serial interface, Interrupt controller, Timers and SPI)
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  sdioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral SDIO module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  ReservedSyncReset         0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reserved. Has no effect in hardware
///                                                 ###
///               %unsigned 1  usb0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral USB0 module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  emmcSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset emmc
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  pBridgeSyncReset          0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset pBridge
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  usb3SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral USB3 module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  nfcSysSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset NAND Flash IP logic except registers
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  nfcRegSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset NAND Flash IP  Configuration registers
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  gethRgmiiSyncReset        0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset GE RGMII IP  Configuration registers
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %%        21         # Stuffing bits...
///     @ 0x00684 perifResetStatus     (RW-)
///               ###
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of whole Peripheral unit
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  ahbApbSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of Peripheral AHB-APB module (includes GPIO, Two
///                                                 * wire Serial interface, Interrupt controller, Timers and SPI)
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  sdioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of peripheral  SDIO module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  bcmSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of BCM
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  usb0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of peripheral USB0 module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  emmcSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status for emmc
///                                                 * 0  :  Reset not asserted
///                                                 * 1  :  Reset asserted
///                                                 ###
///               %unsigned 1  pBridgeSyncReset          0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status for pBridge
///                                                 * 0  :  Reset not asserted
///                                                 * 1  :  Reset asserted
///                                                 ###
///               %unsigned 1  usb3SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of peripheral USB0 module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  nfcSysSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * NAND Flash system reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  nfcRegSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * NAND Flash register reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  gethRgmiiSyncReset        0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * GE RGMII IP register reset status
///                                                 * 0  :  Reset not issued
///                                                 * 1  :  Reset issued
///                                                 ###
///               %%        21         # Stuffing bits...
///     @ 0x00688 perifStickyResetN    (P-)
///               ###
///               * sticky reset bits. Active low.
///               * 0:  Reset
///               * 1:  No Reset
///               ###
///               %unsigned 1  usb0PhyRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB0 PHY Rstn
///                                                 ###
///               %unsigned 1  usb0CoreRstn              0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB0 Core Rstn
///                                                 ###
///               %unsigned 1  usb0MahbRstn              0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB0 Mahb Rstn
///                                                 ###
///               %unsigned 1  usb3PhyRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB3 PHY Rstn
///                                                 ###
///               %%        28         # Stuffing bits...
///     @ 0x0068C apbPerifResetTrigger (P-)
///               ###
///               * Software reset trigger register. Using this register software
///               * can reset particular apbPerif module.
///               * 0  :  No Reset
///               * 1  :  Reset
///               ###
///               %unsigned 1  uart0SyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  uart1SyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c1SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c2SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c3SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  spi1SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  spi2SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer0SyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer1SyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  wdt0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  wdt1SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  wdt2SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %%        19         # Stuffing bits...
///     @ 0x00690 apbPerifResetStatus  (RW-)
///               ###
///               * Reset Status register indicates whether reset is triggered or
///               * not to the corresponding module.
///               * 0 : Reset not issued
///               * 1 : Reset issued
///               * Note: Software need to write 0 to clear this register.
///               ###
///               %unsigned 1  uart0SyncResetStatus      0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  uart1SyncResetStatus      0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c0SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c1SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c2SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c3SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  spi1SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  spi2SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer0SyncResetStatus     0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer1SyncResetStatus     0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  wdt0SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  wdt1SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  wdt2SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %%        19         # Stuffing bits...
///     @ 0x00694 topStickyResetN      (P-)
///               ###
///               * sticky reset bits. Active low.
///               * 0:  Reset
///               * 1:  No Reset
///               ###
///               %unsigned 1  gpuCoreRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * GPU Core Sticky Rstn
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00698                      (W-)
///     #         # Stuffing bytes...
///               %% 832
///     @ 0x00700 clkEnable            (P-)
///               ###
///               * Clock enable register provides the option to switch  clocks
///               * OFF for power saving.
///               * All these clocks are using perifSysClk as clock source, except
///               * for gpuSysClk which is on dClk.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new register bit at the end.
///               ###
///               %unsigned 1  usb0CoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * USB0 Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  sdioSysClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SDIO  AXI clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  emmcSysClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * EMMC AXI clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  pBridgeCoreClkEn          0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Pbridge module clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  gpuAxiClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * GPU axi  clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  gethRgmiiSysClkEn         0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * RGMII sys clk enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  nfcSysClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Rgmii sys clk enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %%        25         # Stuffing bits...
///     @ 0x00704                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00710 ClkSwitch            (P-)
///               ###
///               * Clock Switch register. This register is used to select clock
///               * between:
///               * PLL clock or reference clock  (PLL Bypass option)
///               ###
///               %unsigned 1  sysPLL_0SWBypass          0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * System PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  sysPLL_1SWBypass          0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * System PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  memPLLSWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * Memory PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  cpuPLLSWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * CPU PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  aPLL_0SWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * CPU PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 * Following are control registers for clock generation logics in
///                                                 * global.
///                                                 * They can select different pll source, set different diver and
///                                                 * turn on/off the clocks
///                                                 * fast reference clock for cpu and ddr
///                                                 * Provide fast backup clock from syspll to cpu and ddr when cpupll
///                                                 * or mempll is down for re-configuration
///                                                 ###
///               %%        27         # Stuffing bits...
///     @ 0x00714                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00720                      (P)
///     # 0x00720 cpufastRefClk
///               $clkD2               cpufastRefClk     REG
///                                    ###
///                                    * Fast backup clock for cpu when cpupll is bypass
///                                    ###
///     @ 0x00724                      (P)
///     # 0x00724 memfastRefClk
///               $clkD2               memfastRefClk     REG
///                                    ###
///                                    * Fast backup clock for mc5 when mempll is bypass
///                                    * System bus clock
///                                    ###
///     @ 0x00728                      (P)
///     # 0x00728 cfgClk
///               $clkD8               cfgClk            REG
///                                    ###
///                                    * System AHB Clock
///                                    ###
///     @ 0x0072C                      (P)
///     # 0x0072C atbClk
///               $clkD12              atbClk            REG
///                                    ###
///                                    * ATB (CoreSight) Clock
///                                    * goes to v4g bcm and cpu_ss
///                                    * Perif Clock
///                                    ###
///     @ 0x00730                      (P)
///     # 0x00730 apbCoreClk
///               $clkD8               apbCoreClk        REG
///                                    ###
///                                    * APB perif clock for TWI, SPI, etc.
///                                    ###
///     @ 0x00734                      (P)
///     # 0x00734 usb2TestClk480mGroup0
///               $clkD12_ENOFF        usb2TestClk480mGroup0 REG
///                                    ###
///                                    * usb2TestClk480mGroup0
///                                    ###
///     @ 0x00738                      (P)
///     # 0x00738 usb2TestClk480mGroup1
///               $clkD12_ENOFF        usb2TestClk480mGroup1 REG
///                                    ###
///                                    * usb2TestClk480mGroup1
///                                    ###
///     @ 0x0073C                      (P)
///     # 0x0073C usb2TestClk480mGroup2
///               $clkD12_ENOFF        usb2TestClk480mGroup2 REG
///                                    ###
///                                    * usb2TestClk480mGroup2
///                                    ###
///     @ 0x00740                      (P)
///     # 0x00740 usb2TestClk100mGroup0
///               $clkD12_ENOFF        usb2TestClk100mGroup0 REG
///                                    ###
///                                    * usb2TestClk100mGroup0
///                                    ###
///     @ 0x00744                      (P)
///     # 0x00744 usb2TestClk100mGroup1
///               $clkD12_ENOFF        usb2TestClk100mGroup1 REG
///                                    ###
///                                    * usb2TestClk100mGroup1
///                                    ###
///     @ 0x00748                      (P)
///     # 0x00748 usb2TestClk100mGroup2
///               $clkD12_ENOFF        usb2TestClk100mGroup2 REG
///                                    ###
///                                    * usb2TestClk100mGroup2
///                                    ###
///     @ 0x0074C                      (P)
///     # 0x0074C usb2TestClk100mGroup3
///               $clkD12_ENOFF        usb2TestClk100mGroup3 REG
///                                    ###
///                                    * usb2TestClk100mGroup3
///                                    ###
///     @ 0x00750                      (P)
///     # 0x00750 usb2TestClk100mGroup4
///               $clkD12_ENOFF        usb2TestClk100mGroup4 REG
///                                    ###
///                                    * usb2TestClk100mGroup4
///                                    ###
///     @ 0x00754                      (P)
///     # 0x00754 perifTestClk125mGroup0
///               $clkD12_ENOFF        perifTestClk125mGroup0 REG
///                                    ###
///                                    * perifTestClk125mGroup0
///                                    ###
///     @ 0x00758                      (P)
///     # 0x00758 perifTestClk250mGroup0
///               $clkD12_ENOFF        perifTestClk250mGroup0 REG
///                                    ###
///                                    * perifTestClk250mGroup0
///                                    ###
///     @ 0x0075C                      (P)
///     # 0x0075C perifTestClk500mGroup0
///               $clkD12_ENOFF        perifTestClk500mGroup0 REG
///                                    ###
///                                    * perifTestClk500mGroup0
///                                    ###
///     @ 0x00760                      (P)
///     # 0x00760 perifTestClk200mGroup0
///               $clkD12_ENOFF        perifTestClk200mGroup0 REG
///                                    ###
///                                    * perifTestClk200mGroup0
///                                    ###
///     @ 0x00764                      (P)
///     # 0x00764 perifTestClk200mGroup1
///               $clkD12_ENOFF        perifTestClk200mGroup1 REG
///                                    ###
///                                    * perifTestClk200mGroup1
///                                    * SDIO and EMMC
///                                    ###
///     @ 0x00768                      (P)
///     # 0x00768 emmcClk
///               $clkD8               emmcClk           REG
///                                    ###
///                                    * emmc controller core  Clock
///                                    ###
///     @ 0x0076C                      (P)
///     # 0x0076C sd0Clk
///               $clkD8_ENOFF         sd0Clk            REG
///                                    ###
///                                    * SDIO0 controller core  Clock
///                                    * ETH and RGMII
///                                    ###
///     @ 0x00770                      (P)
///     # 0x00770 gethRgmiiClk
///               $clkD4_ENOFF         gethRgmiiClk      REG
///                                    ###
///                                    * Gigabit Ethernet MAC clock
///                                    * USB
///                                    ###
///     @ 0x00774                      (P)
///     # 0x00774 usb2TestClk
///               $clkD12_ENOFF        usb2TestClk       REG
///                                    ###
///                                    * Usb2 test clock shared by USBOTG and USBHOST
///                                    ###
///     @ 0x00778                      (P)
///     # 0x00778 usb3CoreClk
///               $clkD2               usb3CoreClk       REG
///                                    ###
///                                    * Usb3 Core clock used for core as well as axi interface
///                                    * NAND
///                                    ###
///     @ 0x0077C                      (P)
///     # 0x0077C nfcEccClk
///               $clkD8               nfcEccClk         REG
///                                    ###
///                                    * NFC ECC Clock.
///                                    ###
///     @ 0x00780                      (P)
///     # 0x00780 nfcCoreClk
///               $clkD8               nfcCoreClk        REG
///                                    ###
///                                    * NFC Core Clock.
///                                    * BCM
///                                    ###
///     @ 0x00784                      (P)
///     # 0x00784 bcmClk
///               $clkD8               bcmClk            REG
///                                    ###
///                                    * BCM Clock
///                                    * GPU
///                                    ###
///     @ 0x00788                      (P)
///     # 0x00788 gpuClk
///               $clkD4_ENOFF         gpuClk            REG
///                                    ###
///                                    * GPU clock
///                                    ###
///     @ 0x0078C                      (P)
///     # 0x0078C sysClk
///               $clkD4               sysClk            REG
///                                    ###
///                                    * sys clk
///                                    ###
///     @ 0x00790                      (P)
///     # 0x00790 aioSysClk
///               $clkD4_ENOFF         aioSysClk         REG
///                                    ###
///                                    * AIO system clock
///                                    ###
///     @ 0x00794                      (P)
///     # 0x00794 perifSysClk
///               $clkD4               perifSysClk       REG
///                                    ###
///                                    * Peripheral AXI System Clock
///                                    ###
///     @ 0x00798                      (P)
///     # 0x00798 avioSysClk
///               $clkD4_ENOFF         avioSysClk        REG
///                                    ###
///                                    * VIO system clock
///                                    ###
///     @ 0x0079C                      (P)
///     # 0x0079C avSysClk
///               $clkD8               avSysClk          REG
///                                    ###
///                                    * AXI clock for AVBAR
///                                    ###
///     @ 0x007A0                      (P)
///     # 0x007A0 lcdc1ScanClk
///               $clkD4_ENOFF         lcdc1ScanClk      REG
///                                    ###
///                                    * LCDC1 Scan Clock
///                                    ###
///     @ 0x007A4                      (P)
///     # 0x007A4 lcdc2ScanClk
///               $clkD4_ENOFF         lcdc2ScanClk      REG
///                                    ###
///                                    * LCDC2 Scan Clock
///                                    * MISC Register Control Region
///                                    ###
///     @ 0x007A8                      (W-)
///     #         # Stuffing bytes...
///               %% 2752
///     @ 0x00900 SECURE_SCAN_EN       (RW)
///               ###
///               * Enable secure scan, should write 1 to it immediately during
///               * boot up to disable scan
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  SET                       0x0
///                                    ###
///                                    * 1: scan is disabled
///                                    * 0: scan is enabled
///                                    * Delay information from the DLL
///                                    * **INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  drcg                      0x0
///                                    : drcgActive                0x1
///                                    : drcgInactive              0x0
///                                                 ###
///                                                 * Disable RAM clock gating in Graphics 3D when in BIST mode.
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00904                      (W-)
///     #         # Stuffing bytes...
///               %% 736
///     @ 0x00960 gic400_ctrl          (P-)
///               %unsigned 1  cfgsdisable               0x0
///                                    ###
///                                    * GIC400 secure disable control
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00964                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00970 GFX_CTRL_0           (P)
///               %unsigned 1  timer_enable              0x0
///               %%        31         # Stuffing bits...
///     @ 0x00974 GFX_CTRL_1           (P)
///               %unsigned 1  timer_load                0x0
///               %unsigned 1  timer_halt                0x0
///               %%        30         # Stuffing bits...
///     @ 0x00978 GFX_CTRL_2           (P)
///               %unsigned 32 timer_value_lsb           0x0
///     @ 0x0097C GFX_CTRL_3           (P)
///               %unsigned 32 timer_value_msb           0x0
///     @ 0x00980 GFX_TIMER_VALUE      (RNB-)
///               %unsigned 32 timer_binary_value_lsb
///     # 0x00984 GFX_TIMER_VALUE1
///               %unsigned 32 timer_binary_value_msb
///     @ 0x00988                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x0098C GFX_STATUS           (R-)
///               %unsigned 1  gfx3d_idle
///               %%        31         # Stuffing bits...
///     @ 0x00990 USBOTG_REFCLK_CTRL0  (P)
///               %unsigned 32 divval                    0x14
///                                    ###
///                                    * These bits control the USB OTG PLL REF Clock Divider
///                                    * Note: Only even values are allowed  to get 50% duty cycle
///                                    ###
///     @ 0x00994 USBOTG_REFCLK_CTRL1  (P)
///               %unsigned 32 lowcnt                    0xA
///                                    ###
///                                    * Half Cycle period counter for USB OTG REF Clock divider
///                                    ###
///     @ 0x00998                      (W-)
///     #         # Stuffing bytes...
///               %% 448
///     @ 0x009D0 I2S2_PORT_CTRL       (P)
///               %unsigned 1  i2s2_mclk_sel             0x0
///                                    ###
///                                    * I2S2 MCLK port select between port A & B
///                                    * 0: I2SA_MCLK
///                                    * 1: I2SB_MCLK
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x009D4 LCDD_IO_CTRL         (P)
///               %unsigned 2  MS                        0x0
///                                    ###
///                                    * MS-Mode select bits for 1.8V/3.3V operation selection
///                                    * 00: 3.3V IO Voltage
///                                    * 11: 1.8V IO Voltage
///                                    * 01,
///                                    * 10: Reserved-Do not Program
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x009D8                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x009E0 POR_EN_status        (R-)
///               %unsigned 1  POR_EN
///                                    ###
///                                    * POR_EN Pad input current value
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x009E4 POR_EN_OVRD          (P-)
///               ###
///               * POR EN functionality override Control signals
///               ###
///               %unsigned 1  POR_EN_OVRD_EN            0x0
///                                    ###
///                                    * POR EN is by default coming from pad. Setting this bit 1 will
///                                    * make this register control the POR_EN functionality.
///                                    ###
///               %unsigned 1  POR_EN_OVRD_VAL           0x0
///                                    ###
///                                    * POR_EN override value
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x009E8                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x009F0 POR_status           (R-)
///               %unsigned 1  POR_VDDIO_SOC
///                                    ###
///                                    * output for VDDIO 1.8V POR
///                                    ###
///               %unsigned 1  POR_VDDIO3P3_SOC
///               %unsigned 1  POR_VDD_CPU
///               %%        29         # Stuffing bits...
///     @ 0x009F4 POR_CTL              (P-)
///               ###
///               * POR Control signals to Bypass and any other control required
///               ###
///               %unsigned 1  SOC_VDD1P8V_BYPASS        0x0
///                                    ###
///                                    * POR VDDIO is always enabled during boot-up. This register can
///                                    * bypass POR_VDDIO 1.8V after boot-up to disable the
///                                    * voltage-monitor feature
///                                    ###
///               %unsigned 1  POR_SOC_IO_1P8V_PD        0x0
///                                    ###
///                                    * Power down control for SOC 1.8V IO POR
///                                    ###
///               %unsigned 2  POR_SOC_IO_1P8V_VTH       0x0
///                                    ###
///                                    * SOC 1.8V POR Threshold control. These control  bits effect only
///                                    * after boot up for voltage-monitor feature
///                                    ###
///               %unsigned 1  SOC_VDD3P3V_BYPASS        0x0
///                                    ###
///                                    * POR VDD 3.3V is always enabled during boot-up. This register can
///                                    * bypass POR_VDD 3.3V after boot-up to disable the voltage-monitor
///                                    * feature
///                                    ###
///               %unsigned 1  POR_SOC_IO_3P3V_PD        0x0
///                                    ###
///                                    * Power down control for SOC 3.3V POR
///                                    ###
///               %unsigned 2  POR_SOC_IO_3P3V_VTH       0x0
///                                    ###
///                                    * SOC 3.3V POR Threshold control. These control  bits effect only
///                                    * after boot up for voltage-monitor feature
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x009F8                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00A00                      (P)
///     # 0x00A00 PERIF
///               $PERIF               PERIF             REG
///     @ 0x00A54                      (W-)
///     #         # Stuffing bytes...
///               %% 1376
///     @ 0x00B00                      (P)
///     # 0x00B00 PLL_COUNTER
///               $PLL_COUNTER         PLL_COUNTER       REG
///                                    ###
///                                    * PAD Control Region
///                                    * The below are the Pad Control Registers starting at 32KB
///                                    * boundary.  Please do not change this offset and add any
///                                    * register that is needed before this.
///                                    ###
///     @ 0x00B0C                      (W-)
///     #         # Stuffing bytes...
///               %% 239520
///     @ 0x08000 pinMuxCntlBus        (P-)
///               %unsigned 3  TW0_SCL                   0x0
///                                    ###
///                                    * pinMuxCntlBus[0*3+2:0*3]	 pinMux Control for TW0_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  TW0_SDA                   0x0
///                                    ###
///                                    * pinMuxCntlBus[1*3+2:1*3]	 pinMux Control for TW0_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  TW1_SCL                   0x0
///                                    ###
///                                    * pinMuxCntlBus[2*3+2:2*3]	 pinMux Control for TW1_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_5                    0x5
///               %unsigned 3  TW1_SDA                   0x0
///                                    ###
///                                    * pinMuxCntlBus[3*3+2:3*3]	 pinMux Control for TW1_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_5                    0x5
///               %unsigned 3  TMS                       0x0
///                                    ###
///                                    * pinMuxCntlBus[4*3+2:4*3]	 pinMux Control for TMS
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  TDI                       0x0
///                                    ###
///                                    * pinMuxCntlBus[5*3+2:5*3]	 pinMux Control for TDI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///               %unsigned 3  TDO                       0x0
///                                    ###
///                                    * pinMuxCntlBus[6*3+2:6*3]	 pinMux Control for TDO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  SPI1_SS0n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[7*3+2:7*3]	 pinMux Control for SPI1_SS0n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SPI1_SS1n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[8*3+2:8*3]	 pinMux Control for SPI1_SS1n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///               %unsigned 3  SPI1_SS2n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[9*3+2:9*3]	 pinMux Control for SPI1_SS2n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %%        2          # Stuffing bits...
///     # 0x08004 pinMuxCntlBus1
///               %unsigned 3  SPI1_SS3n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[10*3+2:10*3]	 pinMux Control for SPI1_SS3n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %unsigned 3  SPI1_SDO                  0x0
///                                    ###
///                                    * pinMuxCntlBus[11*3+2:11*3]	 pinMux Control for SPI1_SDO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SDI                  0x0
///                                    ###
///                                    * pinMuxCntlBus[12*3+2:12*3]	 pinMux Control for SPI1_SDI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[13*3+2:13*3]	 pinMux Control for SPI1_SCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  TW2_SCL                   0x0
///                                    ###
///                                    * pinMuxCntlBus[14*3+2:14*3]	 pinMux Control for TW2_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  TW2_SDA                   0x0
///                                    ###
///                                    * pinMuxCntlBus[15*3+2:15*3]	 pinMux Control for TW2_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI2_SS0n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[16*3+2:16*3]	 pinMux Control for SPI2_SS0n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SPI2_SS1n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[17*3+2:17*3]	 pinMux Control for SPI2_SS1n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI2_SS2n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[18*3+2:18*3]	 pinMux Control for SPI2_SS2n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI2_SS3n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[19*3+2:19*3]	 pinMux Control for SPI2_SS3n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %%        2          # Stuffing bits...
///     # 0x08008 pinMuxCntlBus2
///               %unsigned 3  SPI2_SDO                  0x0
///                                    ###
///                                    * pinMuxCntlBus[20*3+2:20*3]	 pinMux Control for SPI2_SDO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI2_SCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[21*3+2:21*3]	 pinMux Control for SPI2_SCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI2_SDI                  0x0
///                                    ###
///                                    * pinMuxCntlBus[22*3+2:22*3]	 pinMux Control for SPI2_SDI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  TW3_SCL                   0x0
///                                    ###
///                                    * pinMuxCntlBus[23*3+2:23*3]	 pinMux Control for TW3_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  TW3_SDA                   0x0
///                                    ###
///                                    * pinMuxCntlBus[24*3+2:24*3]	 pinMux Control for TW3_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  URT1_RXD                  0x0
///                                    ###
///                                    * pinMuxCntlBus[25*3+2:25*3]	 pinMux Control for URT1_RXD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  URT1_TXD                  0x0
///                                    ###
///                                    * pinMuxCntlBus[26*3+2:26*3]	 pinMux Control for URT1_TXD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  PWM0                      0x0
///                                    ###
///                                    * pinMuxCntlBus[27*3+2:27*3]	 pinMux Control for PWM[0]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %unsigned 3  PWM1                      0x0
///                                    ###
///                                    * pinMuxCntlBus[28*3+2:28*3]	 pinMux Control for PWM[1]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  PWM2                      0x0
///                                    ###
///                                    * pinMuxCntlBus[29*3+2:29*3]	 pinMux Control for PWM[2]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %%        2          # Stuffing bits...
///     # 0x0800C pinMuxCntlBus3
///               %unsigned 3  PWM3                      0x0
///                                    ###
///                                    * pinMuxCntlBus[30*3+2:30*3]	 pinMux Control for PWM[3]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  GPIO_A0                   0x0
///                                    ###
///                                    * pinMuxCntlBus[31*3+2:31*3]	 pinMux Control for GPIO_A[0]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %unsigned 3  GPIO_A1                   0x0
///                                    ###
///                                    * pinMuxCntlBus[32*3+2:32*3]	 pinMux Control for GPIO_A[1]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %unsigned 3  GPIO_A2                   0x0
///                                    ###
///                                    * pinMuxCntlBus[33*3+2:33*3]	 pinMux Control for GPIO_A[2]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  GPIO_A3                   0x0
///                                    ###
///                                    * pinMuxCntlBus[34*3+2:34*3]	 pinMux Control for GPIO_A[3]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  USB2_DRV_VBUS             0x0
///                                    ###
///                                    * pinMuxCntlBus[35*3+2:35*3]	 pinMux Control for USB2_DRV_VBUS
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SDIO_CDn                  0x0
///                                    ###
///                                    * pinMuxCntlBus[36*3+2:36*3]	 pinMux Control for SDIO_CDn
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  SDIO_WP                   0x0
///                                    ###
///                                    * pinMuxCntlBus[37*3+2:37*3]	 pinMux Control for SDIO_WP
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///               %unsigned 3  NFALE                     0x0
///                                    ###
///                                    * pinMuxCntlBus[38*3+2:38*3]	 pinMux Control for NFALE
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  NFLCS                     0x0
///                                    ###
///                                    * pinMuxCntlBus[39*3+2:39*3]	 pinMux Control for NFLCS
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %%        2          # Stuffing bits...
///     # 0x08010 pinMuxCntlBus4
///               %unsigned 3  RGMII_CLK_OUT             0x0
///                                    ###
///                                    * pinMuxCntlBus[40*3+2:40*3]	 pinMux Control for RGMII_CLK_OUT
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIITXC                  0x0
///                                    ###
///                                    * pinMuxCntlBus[41*3+2:41*3]	 pinMux Control for RGMIITXC
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIITD0                  0x0
///                                    ###
///                                    * pinMuxCntlBus[42*3+2:42*3]	 pinMux Control for RGMIITD0
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIITD1                  0x0
///                                    ###
///                                    * pinMuxCntlBus[43*3+2:43*3]	 pinMux Control for RGMIITD1
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIITD2                  0x0
///                                    ###
///                                    * pinMuxCntlBus[44*3+2:44*3]	 pinMux Control for RGMIITD2
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIITD3                  0x0
///                                    ###
///                                    * pinMuxCntlBus[45*3+2:45*3]	 pinMux Control for RGMIITD3
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIITXCTL                0x0
///                                    ###
///                                    * pinMuxCntlBus[46*3+2:46*3]	 pinMux Control for RGMIITXCTL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIIRXC                  0x0
///                                    ###
///                                    * pinMuxCntlBus[47*3+2:47*3]	 pinMux Control for RGMIIRXC
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIIRD0                  0x0
///                                    ###
///                                    * pinMuxCntlBus[48*3+2:48*3]	 pinMux Control for RGMIIRD0
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIIRD1                  0x0
///                                    ###
///                                    * pinMuxCntlBus[49*3+2:49*3]	 pinMux Control for RGMIIRD1
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %%        2          # Stuffing bits...
///     # 0x08014 pinMuxCntlBus5
///               %unsigned 3  RGMIIRD2                  0x0
///                                    ###
///                                    * pinMuxCntlBus[50*3+2:50*3]	 pinMux Control for RGMIIRD2
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIIRD3                  0x0
///                                    ###
///                                    * pinMuxCntlBus[51*3+2:51*3]	 pinMux Control for RGMIIRD3
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  RGMIIRXCTL                0x0
///                                    ###
///                                    * pinMuxCntlBus[52*3+2:52*3]	 pinMux Control for RGMIIRXCTL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S1_DO                   0x0
///                                    ###
///                                    * pinMuxCntlBus[53*3+2:53*3]	 pinMux Control for I2S1_DO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_DI                   0x0
///                                    ###
///                                    * pinMuxCntlBus[54*3+2:54*3]	 pinMux Control for I2S1_DI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_LRCK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[55*3+2:55*3]	 pinMux Control for I2S1_LRCK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_BCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[56*3+2:56*3]	 pinMux Control for I2S1_BCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_MCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[57*3+2:57*3]	 pinMux Control for I2S1_MCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S2_LRCK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[58*3+2:58*3]	 pinMux Control for I2S2_LRCK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  I2S2_BCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[59*3+2:59*3]	 pinMux Control for I2S2_BCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %%        2          # Stuffing bits...
///     # 0x08018 pinMuxCntlBus6
///               %unsigned 3  I2S2_DO                   0x0
///                                    ###
///                                    * pinMuxCntlBus[60*3+2:60*3]	 pinMux Control for I2S2_DO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S2_DI                   0x0
///                                    ###
///                                    * pinMuxCntlBus[61*3+2:61*3]	 pinMux Control for I2S2_DI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  PDM_CLKIO                 0x0
///                                    ###
///                                    * pinMuxCntlBus[62*3+2:62*3]	 pinMux Control for PDM_CLKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %unsigned 3  PDM_DI0                   0x0
///                                    ###
///                                    * pinMuxCntlBus[63*3+2:63*3]	 pinMux Control for PDM_DI[0]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  PDM_DI1                   0x0
///                                    ###
///                                    * pinMuxCntlBus[64*3+2:64*3]	 pinMux Control for PDM_DI[1]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S3_DO                   0x0
///                                    ###
///                                    * pinMuxCntlBus[65*3+2:65*3]	 pinMux Control for I2S3_DO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S3_LRCK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[66*3+2:66*3]	 pinMux Control for I2S3_LRCK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S3_BCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[67*3+2:67*3]	 pinMux Control for I2S3_BCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S3_DI                   0x0
///                                    ###
///                                    * pinMuxCntlBus[68*3+2:68*3]	 pinMux Control for I2S3_DI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_4                    0x4
///               %unsigned 3  LCDD0                     0x0
///                                    ###
///                                    * pinMuxCntlBus[69*3+2:69*3]	 pinMux Control for LCDD0
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %%        2          # Stuffing bits...
///     # 0x0801C pinMuxCntlBus7
///               %unsigned 3  LCDD1                     0x0
///                                    ###
///                                    * pinMuxCntlBus[70*3+2:70*3]	 pinMux Control for LCDD1
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  LCDD2                     0x0
///                                    ###
///                                    * pinMuxCntlBus[71*3+2:71*3]	 pinMux Control for LCDD2
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD3                     0x0
///                                    ###
///                                    * pinMuxCntlBus[72*3+2:72*3]	 pinMux Control for LCDD3
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD4                     0x0
///                                    ###
///                                    * pinMuxCntlBus[73*3+2:73*3]	 pinMux Control for LCDD4
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD5                     0x0
///                                    ###
///                                    * pinMuxCntlBus[74*3+2:74*3]	 pinMux Control for LCDD5
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD6                     0x0
///                                    ###
///                                    * pinMuxCntlBus[75*3+2:75*3]	 pinMux Control for LCDD6
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD7                     0x0
///                                    ###
///                                    * pinMuxCntlBus[76*3+2:76*3]	 pinMux Control for LCDD7
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD8                     0x0
///                                    ###
///                                    * pinMuxCntlBus[77*3+2:77*3]	 pinMux Control for LCDD8
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  LCDD9                     0x0
///                                    ###
///                                    * pinMuxCntlBus[78*3+2:78*3]	 pinMux Control for LCDD9
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  LCDD10                    0x0
///                                    ###
///                                    * pinMuxCntlBus[79*3+2:79*3]	 pinMux Control for LCDD10
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %%        2          # Stuffing bits...
///     # 0x08020 pinMuxCntlBus8
///               %unsigned 3  LCDD11                    0x0
///                                    ###
///                                    * pinMuxCntlBus[80*3+2:80*3]	 pinMux Control for LCDD11
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD12                    0x0
///                                    ###
///                                    * pinMuxCntlBus[81*3+2:81*3]	 pinMux Control for LCDD12
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD13                    0x0
///                                    ###
///                                    * pinMuxCntlBus[82*3+2:82*3]	 pinMux Control for LCDD13
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD14                    0x0
///                                    ###
///                                    * pinMuxCntlBus[83*3+2:83*3]	 pinMux Control for LCDD14
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD15                    0x0
///                                    ###
///                                    * pinMuxCntlBus[84*3+2:84*3]	 pinMux Control for LCDD15
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD16                    0x0
///                                    ###
///                                    * pinMuxCntlBus[85*3+2:85*3]	 pinMux Control for LCDD16
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  LCDD17                    0x0
///                                    ###
///                                    * pinMuxCntlBus[86*3+2:86*3]	 pinMux Control for LCDD17
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  LCDD18                    0x0
///                                    ###
///                                    * pinMuxCntlBus[87*3+2:87*3]	 pinMux Control for LCDD18
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD19                    0x0
///                                    ###
///                                    * pinMuxCntlBus[88*3+2:88*3]	 pinMux Control for LCDD19
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD20                    0x0
///                                    ###
///                                    * pinMuxCntlBus[89*3+2:89*3]	 pinMux Control for LCDD20
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %%        2          # Stuffing bits...
///     # 0x08024 pinMuxCntlBus9
///               %unsigned 3  LCDD21                    0x0
///                                    ###
///                                    * pinMuxCntlBus[90*3+2:90*3]	 pinMux Control for LCDD21
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD22                    0x0
///                                    ###
///                                    * pinMuxCntlBus[91*3+2:91*3]	 pinMux Control for LCDD22
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDD23                    0x0
///                                    ###
///                                    * pinMuxCntlBus[92*3+2:92*3]	 pinMux Control for LCDD23
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LPCLK                     0x0
///                                    ###
///                                    * pinMuxCntlBus[93*3+2:93*3]	 pinMux Control for LPCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDGPIO0                  0x0
///                                    ###
///                                    * pinMuxCntlBus[94*3+2:94*3]	 pinMux Control for LCDGPIO0
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDGPIO1                  0x0
///                                    ###
///                                    * pinMuxCntlBus[95*3+2:95*3]	 pinMux Control for LCDGPIO1
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDGPIO2                  0x0
///                                    ###
///                                    * pinMuxCntlBus[96*3+2:96*3]	 pinMux Control for LCDGPIO2
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  LCDGPIO3                  0x0
///                                    ###
///                                    * pinMuxCntlBus[97*3+2:97*3]	 pinMux Control for LCDGPIO3
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  LCDGPIO4                  0x0
///                                    ###
///                                    * pinMuxCntlBus[98*3+2:98*3]	 pinMux Control for LCDGPIO4
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %%        5          # Stuffing bits...
///     @ 0x08028                      (W-)
///     #         # Stuffing bytes...
///               %% 16064
///     @ 0x08800 TW0_SCLCntl          (P-)
///               ###
///               * Pad Control for TW0_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08804 TW0_SDACntl          (P-)
///               ###
///               * Pad Control for TW0_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08808 TW1_SCLCntl          (P-)
///               ###
///               * Pad Control for TW1_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0880C TW1_SDACntl          (P-)
///               ###
///               * Pad Control for TW1_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08810 FORCE_MUTECntl       (P-)
///               ###
///               * Pad Control for FORCE_MUTE
///               ###
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  ST                        0x0
///               %%        29         # Stuffing bits...
///     @ 0x08814 TMSCntl              (P-)
///               ###
///               * Pad Control for TMS
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08818 TDICntl              (P-)
///               ###
///               * Pad Control for TDI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x1
///               %unsigned 1  PS                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0881C TDOCntl              (P-)
///               ###
///               * Pad Control for TDO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08820 SPI1_SS0nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS0n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08824 SPI1_SS1nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS1n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08828 SPI1_SS2nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS2n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0882C SPI1_SS3nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS3n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08830 SPI1_SDOCntl         (P-)
///               ###
///               * Pad Control for SPI1_SDO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08834 SPI1_SDICntl         (P-)
///               ###
///               * Pad Control for SPI1_SDI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08838 SPI1_SCLKCntl        (P-)
///               ###
///               * Pad Control for SPI1_SCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0883C TW2_SCLCntl          (P-)
///               ###
///               * Pad Control for TW2_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08840 TW2_SDACntl          (P-)
///               ###
///               * Pad Control for TW2_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08844 SPI2_SS0nCntl        (P-)
///               ###
///               * Pad Control for SPI2_SS0n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08848 SPI2_SS1nCntl        (P-)
///               ###
///               * Pad Control for SPI2_SS1n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0884C SPI2_SS2nCntl        (P-)
///               ###
///               * Pad Control for SPI2_SS2n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08850 SPI2_SS3nCntl        (P-)
///               ###
///               * Pad Control for SPI2_SS3n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08854 SPI2_SDOCntl         (P-)
///               ###
///               * Pad Control for SPI2_SDO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08858 SPI2_SCLKCntl        (P-)
///               ###
///               * Pad Control for SPI2_SCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0885C SPI2_SDICntl         (P-)
///               ###
///               * Pad Control for SPI2_SDI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08860 TW3_SCLCntl          (P-)
///               ###
///               * Pad Control for TW3_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08864 TW3_SDACntl          (P-)
///               ###
///               * Pad Control for TW3_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08868 URT1_RXDCntl         (P-)
///               ###
///               * Pad Control for URT1_RXD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0886C URT1_TXDCntl         (P-)
///               ###
///               * Pad Control for URT1_TXD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08870 PWM0Cntl             (P-)
///               ###
///               * Pad Control for PWM[0]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08874 PWM1Cntl             (P-)
///               ###
///               * Pad Control for PWM[1]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08878 PWM2Cntl             (P-)
///               ###
///               * Pad Control for PWM[2]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0887C PWM3Cntl             (P-)
///               ###
///               * Pad Control for PWM[3]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08880 GPIO_A0Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[0]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08884 GPIO_A1Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[1]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08888 GPIO_A2Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[2]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0888C GPIO_A3Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[3]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08890 USB2_DRV_VBUSCntl    (P-)
///               ###
///               * Pad Control for USB2_DRV_VBUS
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08894 SDIO_CDnCntl         (P-)
///               ###
///               * Pad Control for SDIO_CDn
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08898 SDIO_WPCntl          (P-)
///               ###
///               * Pad Control for SDIO_WP
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0889C NFALECntl            (P-)
///               ###
///               * Pad Control for NFALE
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088A0 NFLCSCntl            (P-)
///               ###
///               * Pad Control for NFLCS
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088A4 RGMII_CLK_OUTCntl    (P-)
///               ###
///               * Pad Control for RGMII_CLK_OUT
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088A8 RGMIITXCCntl         (P-)
///               ###
///               * Pad Control for RGMIITXC
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088AC RGMIITD0Cntl         (P-)
///               ###
///               * Pad Control for RGMIITD0
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088B0 RGMIITD1Cntl         (P-)
///               ###
///               * Pad Control for RGMIITD1
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088B4 RGMIITD2Cntl         (P-)
///               ###
///               * Pad Control for RGMIITD2
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088B8 RGMIITD3Cntl         (P-)
///               ###
///               * Pad Control for RGMIITD3
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088BC RGMIITXCTLCntl       (P-)
///               ###
///               * Pad Control for RGMIITXCTL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088C0 RGMIIRXCCntl         (P-)
///               ###
///               * Pad Control for RGMIIRXC
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088C4 RGMIIRD0Cntl         (P-)
///               ###
///               * Pad Control for RGMIIRD0
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088C8 RGMIIRD1Cntl         (P-)
///               ###
///               * Pad Control for RGMIIRD1
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088CC RGMIIRD2Cntl         (P-)
///               ###
///               * Pad Control for RGMIIRD2
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088D0 RGMIIRD3Cntl         (P-)
///               ###
///               * Pad Control for RGMIIRD3
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088D4 RGMIIRXCTLCntl       (P-)
///               ###
///               * Pad Control for RGMIIRXCTL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088D8 RCLKICntl            (P-)
///               ###
///               * Pad Control for RCLKI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  RD0                       0x0
///               %unsigned 1  RD1                       0x0
///               %unsigned 1  REF0                      0x0
///               %unsigned 1  REF1                      0x0
///               %unsigned 1  XE                        0x1
///               %%        23         # Stuffing bits...
///     @ 0x088DC I2S1_DOCntl          (P-)
///               ###
///               * Pad Control for I2S1_DO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088E0 I2S1_DICntl          (P-)
///               ###
///               * Pad Control for I2S1_DI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088E4 I2S1_LRCKCntl        (P-)
///               ###
///               * Pad Control for I2S1_LRCK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088E8 I2S1_BCLKCntl        (P-)
///               ###
///               * Pad Control for I2S1_BCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088EC I2S1_MCLKCntl        (P-)
///               ###
///               * Pad Control for I2S1_MCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088F0 I2S2_LRCKCntl        (P-)
///               ###
///               * Pad Control for I2S2_LRCK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x088F4 I2S2_BCLKCntl        (P-)
///               ###
///               * Pad Control for I2S2_BCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088F8 I2S2_DOCntl          (P-)
///               ###
///               * Pad Control for I2S2_DO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x088FC I2S2_DICntl          (P-)
///               ###
///               * Pad Control for I2S2_DI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08900 PDM_CLKIOCntl        (P-)
///               ###
///               * Pad Control for PDM_CLKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08904 PDM_DI0Cntl          (P-)
///               ###
///               * Pad Control for PDM_DI[0]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08908 PDM_DI1Cntl          (P-)
///               ###
///               * Pad Control for PDM_DI[1]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0890C I2S3_DOCntl          (P-)
///               ###
///               * Pad Control for I2S3_DO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08910 I2S3_LRCKCntl        (P-)
///               ###
///               * Pad Control for I2S3_LRCK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08914 I2S3_BCLKCntl        (P-)
///               ###
///               * Pad Control for I2S3_BCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08918 I2S3_DICntl          (P-)
///               ###
///               * Pad Control for I2S3_DI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0891C LCDD0Cntl            (P-)
///               ###
///               * Pad Control for LCDD0
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08920 LCDD1Cntl            (P-)
///               ###
///               * Pad Control for LCDD1
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08924 LCDD2Cntl            (P-)
///               ###
///               * Pad Control for LCDD2
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08928 LCDD3Cntl            (P-)
///               ###
///               * Pad Control for LCDD3
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0892C LCDD4Cntl            (P-)
///               ###
///               * Pad Control for LCDD4
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08930 LCDD5Cntl            (P-)
///               ###
///               * Pad Control for LCDD5
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08934 LCDD6Cntl            (P-)
///               ###
///               * Pad Control for LCDD6
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08938 LCDD7Cntl            (P-)
///               ###
///               * Pad Control for LCDD7
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0893C LCDD8Cntl            (P-)
///               ###
///               * Pad Control for LCDD8
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08940 LCDD9Cntl            (P-)
///               ###
///               * Pad Control for LCDD9
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08944 LCDD10Cntl           (P-)
///               ###
///               * Pad Control for LCDD10
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08948 LCDD11Cntl           (P-)
///               ###
///               * Pad Control for LCDD11
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0894C LCDD12Cntl           (P-)
///               ###
///               * Pad Control for LCDD12
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08950 LCDD13Cntl           (P-)
///               ###
///               * Pad Control for LCDD13
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08954 LCDD14Cntl           (P-)
///               ###
///               * Pad Control for LCDD14
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08958 LCDD15Cntl           (P-)
///               ###
///               * Pad Control for LCDD15
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0895C LCDD16Cntl           (P-)
///               ###
///               * Pad Control for LCDD16
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08960 LCDD17Cntl           (P-)
///               ###
///               * Pad Control for LCDD17
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08964 LCDD18Cntl           (P-)
///               ###
///               * Pad Control for LCDD18
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08968 LCDD19Cntl           (P-)
///               ###
///               * Pad Control for LCDD19
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0896C LCDD20Cntl           (P-)
///               ###
///               * Pad Control for LCDD20
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08970 LCDD21Cntl           (P-)
///               ###
///               * Pad Control for LCDD21
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08974 LCDD22Cntl           (P-)
///               ###
///               * Pad Control for LCDD22
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08978 LCDD23Cntl           (P-)
///               ###
///               * Pad Control for LCDD23
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0897C LPCLKCntl            (P-)
///               ###
///               * Pad Control for LPCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08980 LCDGPIO0Cntl         (P-)
///               ###
///               * Pad Control for LCDGPIO0
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08984 LCDGPIO1Cntl         (P-)
///               ###
///               * Pad Control for LCDGPIO1
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08988 LCDGPIO2Cntl         (P-)
///               ###
///               * Pad Control for LCDGPIO2
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0898C LCDGPIO3Cntl         (P-)
///               ###
///               * Pad Control for LCDGPIO3
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08990 LCDGPIO4Cntl         (P-)
///               ###
///               * Pad Control for LCDGPIO4
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:   35220B, bits:    2695b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_Gbl
#define h_Gbl () {}

    #define     RA_Gbl_ProductId                               0x0000

    #define     BA_Gbl_ProductId_Id                            0x0000
    #define     B16Gbl_ProductId_Id                            0x0000
    #define   LSb32Gbl_ProductId_Id                               0
    #define   LSb16Gbl_ProductId_Id                               0
    #define       bGbl_ProductId_Id                            32
    #define   MSK32Gbl_ProductId_Id                               0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ProductId_ext                           0x0004

    #define     BA_Gbl_ProductId_ext_ID_EXT                    0x0004
    #define     B16Gbl_ProductId_ext_ID_EXT                    0x0004
    #define   LSb32Gbl_ProductId_ext_ID_EXT                       0
    #define   LSb16Gbl_ProductId_ext_ID_EXT                       0
    #define       bGbl_ProductId_ext_ID_EXT                    8
    #define   MSK32Gbl_ProductId_ext_ID_EXT                       0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_INT_ID                                  0x0008

    #define     BA_Gbl_INT_ID_VALUE                            0x0008
    #define     B16Gbl_INT_ID_VALUE                            0x0008
    #define   LSb32Gbl_INT_ID_VALUE                               0
    #define   LSb16Gbl_INT_ID_VALUE                               0
    #define       bGbl_INT_ID_VALUE                            8
    #define   MSK32Gbl_INT_ID_VALUE                               0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrap                               0x000C

    #define     BA_Gbl_bootStrap_softwareStrap                 0x000C
    #define     B16Gbl_bootStrap_softwareStrap                 0x000C
    #define   LSb32Gbl_bootStrap_softwareStrap                    0
    #define   LSb16Gbl_bootStrap_softwareStrap                    0
    #define       bGbl_bootStrap_softwareStrap                 16
    #define   MSK32Gbl_bootStrap_softwareStrap                    0x0000FFFF

    #define     BA_Gbl_bootStrap_bootSrc                       0x000E
    #define     B16Gbl_bootStrap_bootSrc                       0x000E
    #define   LSb32Gbl_bootStrap_bootSrc                          16
    #define   LSb16Gbl_bootStrap_bootSrc                          0
    #define       bGbl_bootStrap_bootSrc                       2
    #define   MSK32Gbl_bootStrap_bootSrc                          0x00030000
    #define        Gbl_bootStrap_bootSrc_ROM_SPI_BOOT                       0x0
    #define        Gbl_bootStrap_bootSrc_ROM_NAND_BOOT                      0x1
    #define        Gbl_bootStrap_bootSrc_ROM_EMMC_BOOT                      0x2
    #define        Gbl_bootStrap_bootSrc_ROM_SPI_DIRECT_BOOT                0x3

    #define     BA_Gbl_bootStrap_cpuRstByps                    0x000E
    #define     B16Gbl_bootStrap_cpuRstByps                    0x000E
    #define   LSb32Gbl_bootStrap_cpuRstByps                       18
    #define   LSb16Gbl_bootStrap_cpuRstByps                       2
    #define       bGbl_bootStrap_cpuRstByps                    1
    #define   MSK32Gbl_bootStrap_cpuRstByps                       0x00040000
    #define        Gbl_bootStrap_cpuRstByps_CPU_INT_RST_BYPS                0x1
    #define        Gbl_bootStrap_cpuRstByps_CPU_INT_RST_EN                  0x0

    #define     BA_Gbl_bootStrap_pllPwrDown                    0x000E
    #define     B16Gbl_bootStrap_pllPwrDown                    0x000E
    #define   LSb32Gbl_bootStrap_pllPwrDown                       19
    #define   LSb16Gbl_bootStrap_pllPwrDown                       3
    #define       bGbl_bootStrap_pllPwrDown                    1
    #define   MSK32Gbl_bootStrap_pllPwrDown                       0x00080000
    #define        Gbl_bootStrap_pllPwrDown_PWR_DOWN                        0x1
    #define        Gbl_bootStrap_pllPwrDown_PWR_UP                          0x0

    #define     BA_Gbl_bootStrap_sysPll_0Byps                  0x000E
    #define     B16Gbl_bootStrap_sysPll_0Byps                  0x000E
    #define   LSb32Gbl_bootStrap_sysPll_0Byps                     20
    #define   LSb16Gbl_bootStrap_sysPll_0Byps                     4
    #define       bGbl_bootStrap_sysPll_0Byps                  1
    #define   MSK32Gbl_bootStrap_sysPll_0Byps                     0x00100000
    #define        Gbl_bootStrap_sysPll_0Byps_PLL_OUT                       0x0
    #define        Gbl_bootStrap_sysPll_0Byps_BYPS                          0x1

    #define     BA_Gbl_bootStrap_sysPll_1Byps                  0x000E
    #define     B16Gbl_bootStrap_sysPll_1Byps                  0x000E
    #define   LSb32Gbl_bootStrap_sysPll_1Byps                     21
    #define   LSb16Gbl_bootStrap_sysPll_1Byps                     5
    #define       bGbl_bootStrap_sysPll_1Byps                  1
    #define   MSK32Gbl_bootStrap_sysPll_1Byps                     0x00200000
    #define        Gbl_bootStrap_sysPll_1Byps_PLL_OUT                       0x0
    #define        Gbl_bootStrap_sysPll_1Byps_BYPS                          0x1

    #define     BA_Gbl_bootStrap_memPllByps                    0x000E
    #define     B16Gbl_bootStrap_memPllByps                    0x000E
    #define   LSb32Gbl_bootStrap_memPllByps                       22
    #define   LSb16Gbl_bootStrap_memPllByps                       6
    #define       bGbl_bootStrap_memPllByps                    1
    #define   MSK32Gbl_bootStrap_memPllByps                       0x00400000
    #define        Gbl_bootStrap_memPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_memPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_cpuPllByps                    0x000E
    #define     B16Gbl_bootStrap_cpuPllByps                    0x000E
    #define   LSb32Gbl_bootStrap_cpuPllByps                       23
    #define   LSb16Gbl_bootStrap_cpuPllByps                       7
    #define       bGbl_bootStrap_cpuPllByps                    1
    #define   MSK32Gbl_bootStrap_cpuPllByps                       0x00800000
    #define        Gbl_bootStrap_cpuPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_cpuPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_emmcV12Enable                 0x000F
    #define     B16Gbl_bootStrap_emmcV12Enable                 0x000E
    #define   LSb32Gbl_bootStrap_emmcV12Enable                    24
    #define   LSb16Gbl_bootStrap_emmcV12Enable                    8
    #define       bGbl_bootStrap_emmcV12Enable                 1
    #define   MSK32Gbl_bootStrap_emmcV12Enable                    0x01000000
    #define        Gbl_bootStrap_emmcV12Enable_V1R8                         0x0
    #define        Gbl_bootStrap_emmcV12Enable_V1R2                         0x1

    #define     BA_Gbl_bootStrap_ENG_EN                        0x000F
    #define     B16Gbl_bootStrap_ENG_EN                        0x000E
    #define   LSb32Gbl_bootStrap_ENG_EN                           25
    #define   LSb16Gbl_bootStrap_ENG_EN                           9
    #define       bGbl_bootStrap_ENG_EN                        1
    #define   MSK32Gbl_bootStrap_ENG_EN                           0x02000000
    #define        Gbl_bootStrap_ENG_EN_PRODUCTION_MODE                     0x0
    #define        Gbl_bootStrap_ENG_EN_DEVELOP_MODE                       0x1

    #define     BA_Gbl_bootStrap_LEGACY_BOOT                   0x000F
    #define     B16Gbl_bootStrap_LEGACY_BOOT                   0x000E
    #define   LSb32Gbl_bootStrap_LEGACY_BOOT                      26
    #define   LSb16Gbl_bootStrap_LEGACY_BOOT                      10
    #define       bGbl_bootStrap_LEGACY_BOOT                   1
    #define   MSK32Gbl_bootStrap_LEGACY_BOOT                      0x04000000
    #define        Gbl_bootStrap_LEGACY_BOOT_FAST_BOOT_MODE                 0x0
    #define        Gbl_bootStrap_LEGACY_BOOT_LEGACY_BOOT_MODE               0x1

    #define     BA_Gbl_bootStrap_aPll_0Byps                    0x000F
    #define     B16Gbl_bootStrap_aPll_0Byps                    0x000E
    #define   LSb32Gbl_bootStrap_aPll_0Byps                       27
    #define   LSb16Gbl_bootStrap_aPll_0Byps                       11
    #define       bGbl_bootStrap_aPll_0Byps                    1
    #define   MSK32Gbl_bootStrap_aPll_0Byps                       0x08000000
    #define        Gbl_bootStrap_aPll_0Byps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_aPll_0Byps_BYPS                            0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrapEn                             0x0010

    #define     BA_Gbl_bootStrapEn_cpuRstBypsEn                0x0010
    #define     B16Gbl_bootStrapEn_cpuRstBypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_cpuRstBypsEn                   0
    #define   LSb16Gbl_bootStrapEn_cpuRstBypsEn                   0
    #define       bGbl_bootStrapEn_cpuRstBypsEn                1
    #define   MSK32Gbl_bootStrapEn_cpuRstBypsEn                   0x00000001
    #define        Gbl_bootStrapEn_cpuRstBypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_cpuRstBypsEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_pllPwrDownEn                0x0010
    #define     B16Gbl_bootStrapEn_pllPwrDownEn                0x0010
    #define   LSb32Gbl_bootStrapEn_pllPwrDownEn                   1
    #define   LSb16Gbl_bootStrapEn_pllPwrDownEn                   1
    #define       bGbl_bootStrapEn_pllPwrDownEn                1
    #define   MSK32Gbl_bootStrapEn_pllPwrDownEn                   0x00000002
    #define        Gbl_bootStrapEn_pllPwrDownEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_pllPwrDownEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_sysPLL_0BypsEn              0x0010
    #define     B16Gbl_bootStrapEn_sysPLL_0BypsEn              0x0010
    #define   LSb32Gbl_bootStrapEn_sysPLL_0BypsEn                 2
    #define   LSb16Gbl_bootStrapEn_sysPLL_0BypsEn                 2
    #define       bGbl_bootStrapEn_sysPLL_0BypsEn              1
    #define   MSK32Gbl_bootStrapEn_sysPLL_0BypsEn                 0x00000004
    #define        Gbl_bootStrapEn_sysPLL_0BypsEn_ENABLE                    0x1
    #define        Gbl_bootStrapEn_sysPLL_0BypsEn_DISABLE                   0x0

    #define     BA_Gbl_bootStrapEn_memPLLBypsEn                0x0010
    #define     B16Gbl_bootStrapEn_memPLLBypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_memPLLBypsEn                   3
    #define   LSb16Gbl_bootStrapEn_memPLLBypsEn                   3
    #define       bGbl_bootStrapEn_memPLLBypsEn                1
    #define   MSK32Gbl_bootStrapEn_memPLLBypsEn                   0x00000008
    #define        Gbl_bootStrapEn_memPLLBypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_memPLLBypsEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_cpuPLLBypsEn                0x0010
    #define     B16Gbl_bootStrapEn_cpuPLLBypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_cpuPLLBypsEn                   4
    #define   LSb16Gbl_bootStrapEn_cpuPLLBypsEn                   4
    #define       bGbl_bootStrapEn_cpuPLLBypsEn                1
    #define   MSK32Gbl_bootStrapEn_cpuPLLBypsEn                   0x00000010
    #define        Gbl_bootStrapEn_cpuPLLBypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_cpuPLLBypsEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_legacyBootEn                0x0010
    #define     B16Gbl_bootStrapEn_legacyBootEn                0x0010
    #define   LSb32Gbl_bootStrapEn_legacyBootEn                   5
    #define   LSb16Gbl_bootStrapEn_legacyBootEn                   5
    #define       bGbl_bootStrapEn_legacyBootEn                1
    #define   MSK32Gbl_bootStrapEn_legacyBootEn                   0x00000020
    #define        Gbl_bootStrapEn_legacyBootEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_legacyBootEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_sysPLL_1BypsEn              0x0010
    #define     B16Gbl_bootStrapEn_sysPLL_1BypsEn              0x0010
    #define   LSb32Gbl_bootStrapEn_sysPLL_1BypsEn                 6
    #define   LSb16Gbl_bootStrapEn_sysPLL_1BypsEn                 6
    #define       bGbl_bootStrapEn_sysPLL_1BypsEn              1
    #define   MSK32Gbl_bootStrapEn_sysPLL_1BypsEn                 0x00000040
    #define        Gbl_bootStrapEn_sysPLL_1BypsEn_ENABLE                    0x1
    #define        Gbl_bootStrapEn_sysPLL_1BypsEn_DISABLE                   0x0

    #define     BA_Gbl_bootStrapEn_aPLL_0BypsEn                0x0010
    #define     B16Gbl_bootStrapEn_aPLL_0BypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_aPLL_0BypsEn                   7
    #define   LSb16Gbl_bootStrapEn_aPLL_0BypsEn                   7
    #define       bGbl_bootStrapEn_aPLL_0BypsEn                1
    #define   MSK32Gbl_bootStrapEn_aPLL_0BypsEn                   0x00000080
    #define        Gbl_bootStrapEn_aPLL_0BypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_aPLL_0BypsEn_DISABLE                     0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_pkgSel                                  0x0014

    #define     BA_Gbl_pkgSel_DDR32bit                         0x0014
    #define     B16Gbl_pkgSel_DDR32bit                         0x0014
    #define   LSb32Gbl_pkgSel_DDR32bit                            0
    #define   LSb16Gbl_pkgSel_DDR32bit                            0
    #define       bGbl_pkgSel_DDR32bit                         1
    #define   MSK32Gbl_pkgSel_DDR32bit                            0x00000001

    #define     BA_Gbl_pkgSel_reserved                         0x0014
    #define     B16Gbl_pkgSel_reserved                         0x0014
    #define   LSb32Gbl_pkgSel_reserved                            1
    #define   LSb16Gbl_pkgSel_reserved                            1
    #define       bGbl_pkgSel_reserved                         1
    #define   MSK32Gbl_pkgSel_reserved                            0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_chipCntl                                0x0040

    #define     BA_Gbl_chipCntl_DBG_SEL                        0x0040
    #define     B16Gbl_chipCntl_DBG_SEL                        0x0040
    #define   LSb32Gbl_chipCntl_DBG_SEL                           0
    #define   LSb16Gbl_chipCntl_DBG_SEL                           0
    #define       bGbl_chipCntl_DBG_SEL                        3
    #define   MSK32Gbl_chipCntl_DBG_SEL                           0x00000007

    #define     BA_Gbl_chipCntl_TW1_SEL                        0x0040
    #define     B16Gbl_chipCntl_TW1_SEL                        0x0040
    #define   LSb32Gbl_chipCntl_TW1_SEL                           3
    #define   LSb16Gbl_chipCntl_TW1_SEL                           3
    #define       bGbl_chipCntl_TW1_SEL                        1
    #define   MSK32Gbl_chipCntl_TW1_SEL                           0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic0                             0x0080

    #define     BA_Gbl_sw_generic0_swReg0                      0x0080
    #define     B16Gbl_sw_generic0_swReg0                      0x0080
    #define   LSb32Gbl_sw_generic0_swReg0                         0
    #define   LSb16Gbl_sw_generic0_swReg0                         0
    #define       bGbl_sw_generic0_swReg0                      32
    #define   MSK32Gbl_sw_generic0_swReg0                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic1                             0x0084

    #define     BA_Gbl_sw_generic1_swReg1                      0x0084
    #define     B16Gbl_sw_generic1_swReg1                      0x0084
    #define   LSb32Gbl_sw_generic1_swReg1                         0
    #define   LSb16Gbl_sw_generic1_swReg1                         0
    #define       bGbl_sw_generic1_swReg1                      32
    #define   MSK32Gbl_sw_generic1_swReg1                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic2                             0x0088

    #define     BA_Gbl_sw_generic2_swReg2                      0x0088
    #define     B16Gbl_sw_generic2_swReg2                      0x0088
    #define   LSb32Gbl_sw_generic2_swReg2                         0
    #define   LSb16Gbl_sw_generic2_swReg2                         0
    #define       bGbl_sw_generic2_swReg2                      32
    #define   MSK32Gbl_sw_generic2_swReg2                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic3                             0x008C

    #define     BA_Gbl_sw_generic3_swReg3                      0x008C
    #define     B16Gbl_sw_generic3_swReg3                      0x008C
    #define   LSb32Gbl_sw_generic3_swReg3                         0
    #define   LSb16Gbl_sw_generic3_swReg3                         0
    #define       bGbl_sw_generic3_swReg3                      32
    #define   MSK32Gbl_sw_generic3_swReg3                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_SOC                                0x0100
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_EMMC                           0x010C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_SDIO                           0x0110
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_USB2                           0x0114
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_SISS                           0x0118
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_PB                             0x011C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_GFX3D                          0x0120
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_MC                             0x0124
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_ALM                            0x0128
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_SPMEM                          0x012C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_USB3                           0x0130
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_GE                             0x0134
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_NAND                           0x0138
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FPGAR                                   0x0198

    #define     BA_Gbl_FPGAR_FPGAR                             0x0198
    #define     B16Gbl_FPGAR_FPGAR                             0x0198
    #define   LSb32Gbl_FPGAR_FPGAR                                0
    #define   LSb16Gbl_FPGAR_FPGAR                                0
    #define       bGbl_FPGAR_FPGAR                             32
    #define   MSK32Gbl_FPGAR_FPGAR                                0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FPGARW                                  0x019C

    #define     BA_Gbl_FPGARW_FPGARW                           0x019C
    #define     B16Gbl_FPGARW_FPGARW                           0x019C
    #define   LSb32Gbl_FPGARW_FPGARW                              0
    #define   LSb16Gbl_FPGARW_FPGARW                              0
    #define       bGbl_FPGARW_FPGARW                           32
    #define   MSK32Gbl_FPGARW_FPGARW                              0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sysPll_0                                0x0200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sysPll_1                                0x0220
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ResetTrigger                            0x0600

    #define     BA_Gbl_ResetTrigger_chipReset                  0x0600
    #define     B16Gbl_ResetTrigger_chipReset                  0x0600
    #define   LSb32Gbl_ResetTrigger_chipReset                     0
    #define   LSb16Gbl_ResetTrigger_chipReset                     0
    #define       bGbl_ResetTrigger_chipReset                  1
    #define   MSK32Gbl_ResetTrigger_chipReset                     0x00000001
    #define        Gbl_ResetTrigger_chipReset_assert                        0x1
    #define        Gbl_ResetTrigger_chipReset_deassert                      0x0

    #define     BA_Gbl_ResetTrigger_socDdrSyncReset            0x0600
    #define     B16Gbl_ResetTrigger_socDdrSyncReset            0x0600
    #define   LSb32Gbl_ResetTrigger_socDdrSyncReset               1
    #define   LSb16Gbl_ResetTrigger_socDdrSyncReset               1
    #define       bGbl_ResetTrigger_socDdrSyncReset            1
    #define   MSK32Gbl_ResetTrigger_socDdrSyncReset               0x00000002
    #define        Gbl_ResetTrigger_socDdrSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_socDdrSyncReset_deassert                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ResetStatus                             0x0604

    #define     BA_Gbl_ResetStatus_ChipResetStatus             0x0604
    #define     B16Gbl_ResetStatus_ChipResetStatus             0x0604
    #define   LSb32Gbl_ResetStatus_ChipResetStatus                0
    #define   LSb16Gbl_ResetStatus_ChipResetStatus                0
    #define       bGbl_ResetStatus_ChipResetStatus             1
    #define   MSK32Gbl_ResetStatus_ChipResetStatus                0x00000001
    #define        Gbl_ResetStatus_ChipResetStatus_asserted                 0x1
    #define        Gbl_ResetStatus_ChipResetStatus_deasserted               0x0

    #define     BA_Gbl_ResetStatus_socDdrSyncResetStatus       0x0604
    #define     B16Gbl_ResetStatus_socDdrSyncResetStatus       0x0604
    #define   LSb32Gbl_ResetStatus_socDdrSyncResetStatus          1
    #define   LSb16Gbl_ResetStatus_socDdrSyncResetStatus          1
    #define       bGbl_ResetStatus_socDdrSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_socDdrSyncResetStatus          0x00000002
    #define        Gbl_ResetStatus_socDdrSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_socDdrSyncResetStatus_deasserted              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_WDTResetStatus                          0x060C

    #define     BA_Gbl_WDTResetStatus_wd0Status                0x060C
    #define     B16Gbl_WDTResetStatus_wd0Status                0x060C
    #define   LSb32Gbl_WDTResetStatus_wd0Status                   0
    #define   LSb16Gbl_WDTResetStatus_wd0Status                   0
    #define       bGbl_WDTResetStatus_wd0Status                1
    #define   MSK32Gbl_WDTResetStatus_wd0Status                   0x00000001
    #define        Gbl_WDTResetStatus_wd0Status_asserted                    0x1
    #define        Gbl_WDTResetStatus_wd0Status_deasserted                  0x0

    #define     BA_Gbl_WDTResetStatus_wd1Status                0x060C
    #define     B16Gbl_WDTResetStatus_wd1Status                0x060C
    #define   LSb32Gbl_WDTResetStatus_wd1Status                   1
    #define   LSb16Gbl_WDTResetStatus_wd1Status                   1
    #define       bGbl_WDTResetStatus_wd1Status                1
    #define   MSK32Gbl_WDTResetStatus_wd1Status                   0x00000002
    #define        Gbl_WDTResetStatus_wd1Status_asserted                    0x1
    #define        Gbl_WDTResetStatus_wd1Status_deasserted                  0x0

    #define     BA_Gbl_WDTResetStatus_wd2Status                0x060C
    #define     B16Gbl_WDTResetStatus_wd2Status                0x060C
    #define   LSb32Gbl_WDTResetStatus_wd2Status                   2
    #define   LSb16Gbl_WDTResetStatus_wd2Status                   2
    #define       bGbl_WDTResetStatus_wd2Status                1
    #define   MSK32Gbl_WDTResetStatus_wd2Status                   0x00000004
    #define        Gbl_WDTResetStatus_wd2Status_asserted                    0x1
    #define        Gbl_WDTResetStatus_wd2Status_deasserted                  0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_WDTSysRstMask                           0x0610

    #define     BA_Gbl_WDTSysRstMask_wdt0Mask                  0x0610
    #define     B16Gbl_WDTSysRstMask_wdt0Mask                  0x0610
    #define   LSb32Gbl_WDTSysRstMask_wdt0Mask                     0
    #define   LSb16Gbl_WDTSysRstMask_wdt0Mask                     0
    #define       bGbl_WDTSysRstMask_wdt0Mask                  1
    #define   MSK32Gbl_WDTSysRstMask_wdt0Mask                     0x00000001

    #define     BA_Gbl_WDTSysRstMask_wdt1Mask                  0x0610
    #define     B16Gbl_WDTSysRstMask_wdt1Mask                  0x0610
    #define   LSb32Gbl_WDTSysRstMask_wdt1Mask                     1
    #define   LSb16Gbl_WDTSysRstMask_wdt1Mask                     1
    #define       bGbl_WDTSysRstMask_wdt1Mask                  1
    #define   MSK32Gbl_WDTSysRstMask_wdt1Mask                     0x00000002

    #define     BA_Gbl_WDTSysRstMask_wdt2Mask                  0x0610
    #define     B16Gbl_WDTSysRstMask_wdt2Mask                  0x0610
    #define   LSb32Gbl_WDTSysRstMask_wdt2Mask                     2
    #define   LSb16Gbl_WDTSysRstMask_wdt2Mask                     2
    #define       bGbl_WDTSysRstMask_wdt2Mask                  1
    #define   MSK32Gbl_WDTSysRstMask_wdt2Mask                     0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_CHIP_RESET_TRACKER                      0x0614

    #define     BA_Gbl_CHIP_RESET_TRACKER_VALUE                0x0614
    #define     B16Gbl_CHIP_RESET_TRACKER_VALUE                0x0614
    #define   LSb32Gbl_CHIP_RESET_TRACKER_VALUE                   0
    #define   LSb16Gbl_CHIP_RESET_TRACKER_VALUE                   0
    #define       bGbl_CHIP_RESET_TRACKER_VALUE                32
    #define   MSK32Gbl_CHIP_RESET_TRACKER_VALUE                   0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioReset                               0x0620

    #define     BA_Gbl_avioReset_SyncReset                     0x0620
    #define     B16Gbl_avioReset_SyncReset                     0x0620
    #define   LSb32Gbl_avioReset_SyncReset                        0
    #define   LSb16Gbl_avioReset_SyncReset                        0
    #define       bGbl_avioReset_SyncReset                     1
    #define   MSK32Gbl_avioReset_SyncReset                        0x00000001
    #define        Gbl_avioReset_SyncReset_assert                           0x1
    #define        Gbl_avioReset_SyncReset_deassert                         0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioResetStatus                         0x0624

    #define     BA_Gbl_avioResetStatus_SyncReset               0x0624
    #define     B16Gbl_avioResetStatus_SyncReset               0x0624
    #define   LSb32Gbl_avioResetStatus_SyncReset                  0
    #define   LSb16Gbl_avioResetStatus_SyncReset                  0
    #define       bGbl_avioResetStatus_SyncReset               1
    #define   MSK32Gbl_avioResetStatus_SyncReset                  0x00000001
    #define        Gbl_avioResetStatus_SyncReset_assert                     0x1
    #define        Gbl_avioResetStatus_SyncReset_deassert                   0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifReset                              0x0680

    #define     BA_Gbl_perifReset_SyncReset                    0x0680
    #define     B16Gbl_perifReset_SyncReset                    0x0680
    #define   LSb32Gbl_perifReset_SyncReset                       0
    #define   LSb16Gbl_perifReset_SyncReset                       0
    #define       bGbl_perifReset_SyncReset                    1
    #define   MSK32Gbl_perifReset_SyncReset                       0x00000001
    #define        Gbl_perifReset_SyncReset_assert                          0x1
    #define        Gbl_perifReset_SyncReset_deassert                        0x0

    #define     BA_Gbl_perifReset_ahbApbSyncReset              0x0680
    #define     B16Gbl_perifReset_ahbApbSyncReset              0x0680
    #define   LSb32Gbl_perifReset_ahbApbSyncReset                 1
    #define   LSb16Gbl_perifReset_ahbApbSyncReset                 1
    #define       bGbl_perifReset_ahbApbSyncReset              1
    #define   MSK32Gbl_perifReset_ahbApbSyncReset                 0x00000002
    #define        Gbl_perifReset_ahbApbSyncReset_assert                    0x1
    #define        Gbl_perifReset_ahbApbSyncReset_deassert                  0x0

    #define     BA_Gbl_perifReset_sdioSyncReset                0x0680
    #define     B16Gbl_perifReset_sdioSyncReset                0x0680
    #define   LSb32Gbl_perifReset_sdioSyncReset                   2
    #define   LSb16Gbl_perifReset_sdioSyncReset                   2
    #define       bGbl_perifReset_sdioSyncReset                1
    #define   MSK32Gbl_perifReset_sdioSyncReset                   0x00000004
    #define        Gbl_perifReset_sdioSyncReset_assert                      0x1
    #define        Gbl_perifReset_sdioSyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_ReservedSyncReset            0x0680
    #define     B16Gbl_perifReset_ReservedSyncReset            0x0680
    #define   LSb32Gbl_perifReset_ReservedSyncReset               3
    #define   LSb16Gbl_perifReset_ReservedSyncReset               3
    #define       bGbl_perifReset_ReservedSyncReset            1
    #define   MSK32Gbl_perifReset_ReservedSyncReset               0x00000008
    #define        Gbl_perifReset_ReservedSyncReset_assert                  0x1
    #define        Gbl_perifReset_ReservedSyncReset_deassert                0x0

    #define     BA_Gbl_perifReset_usb0SyncReset                0x0680
    #define     B16Gbl_perifReset_usb0SyncReset                0x0680
    #define   LSb32Gbl_perifReset_usb0SyncReset                   4
    #define   LSb16Gbl_perifReset_usb0SyncReset                   4
    #define       bGbl_perifReset_usb0SyncReset                1
    #define   MSK32Gbl_perifReset_usb0SyncReset                   0x00000010
    #define        Gbl_perifReset_usb0SyncReset_assert                      0x1
    #define        Gbl_perifReset_usb0SyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_emmcSyncReset                0x0680
    #define     B16Gbl_perifReset_emmcSyncReset                0x0680
    #define   LSb32Gbl_perifReset_emmcSyncReset                   5
    #define   LSb16Gbl_perifReset_emmcSyncReset                   5
    #define       bGbl_perifReset_emmcSyncReset                1
    #define   MSK32Gbl_perifReset_emmcSyncReset                   0x00000020
    #define        Gbl_perifReset_emmcSyncReset_assert                      0x1
    #define        Gbl_perifReset_emmcSyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_pBridgeSyncReset             0x0680
    #define     B16Gbl_perifReset_pBridgeSyncReset             0x0680
    #define   LSb32Gbl_perifReset_pBridgeSyncReset                6
    #define   LSb16Gbl_perifReset_pBridgeSyncReset                6
    #define       bGbl_perifReset_pBridgeSyncReset             1
    #define   MSK32Gbl_perifReset_pBridgeSyncReset                0x00000040
    #define        Gbl_perifReset_pBridgeSyncReset_assert                   0x1
    #define        Gbl_perifReset_pBridgeSyncReset_deassert                 0x0

    #define     BA_Gbl_perifReset_usb3SyncReset                0x0680
    #define     B16Gbl_perifReset_usb3SyncReset                0x0680
    #define   LSb32Gbl_perifReset_usb3SyncReset                   7
    #define   LSb16Gbl_perifReset_usb3SyncReset                   7
    #define       bGbl_perifReset_usb3SyncReset                1
    #define   MSK32Gbl_perifReset_usb3SyncReset                   0x00000080
    #define        Gbl_perifReset_usb3SyncReset_assert                      0x1
    #define        Gbl_perifReset_usb3SyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_nfcSysSyncReset              0x0681
    #define     B16Gbl_perifReset_nfcSysSyncReset              0x0680
    #define   LSb32Gbl_perifReset_nfcSysSyncReset                 8
    #define   LSb16Gbl_perifReset_nfcSysSyncReset                 8
    #define       bGbl_perifReset_nfcSysSyncReset              1
    #define   MSK32Gbl_perifReset_nfcSysSyncReset                 0x00000100
    #define        Gbl_perifReset_nfcSysSyncReset_assert                    0x1
    #define        Gbl_perifReset_nfcSysSyncReset_deassert                  0x0

    #define     BA_Gbl_perifReset_nfcRegSyncReset              0x0681
    #define     B16Gbl_perifReset_nfcRegSyncReset              0x0680
    #define   LSb32Gbl_perifReset_nfcRegSyncReset                 9
    #define   LSb16Gbl_perifReset_nfcRegSyncReset                 9
    #define       bGbl_perifReset_nfcRegSyncReset              1
    #define   MSK32Gbl_perifReset_nfcRegSyncReset                 0x00000200
    #define        Gbl_perifReset_nfcRegSyncReset_assert                    0x1
    #define        Gbl_perifReset_nfcRegSyncReset_deassert                  0x0

    #define     BA_Gbl_perifReset_gethRgmiiSyncReset           0x0681
    #define     B16Gbl_perifReset_gethRgmiiSyncReset           0x0680
    #define   LSb32Gbl_perifReset_gethRgmiiSyncReset              10
    #define   LSb16Gbl_perifReset_gethRgmiiSyncReset              10
    #define       bGbl_perifReset_gethRgmiiSyncReset           1
    #define   MSK32Gbl_perifReset_gethRgmiiSyncReset              0x00000400
    #define        Gbl_perifReset_gethRgmiiSyncReset_assert                 0x1
    #define        Gbl_perifReset_gethRgmiiSyncReset_deassert               0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifResetStatus                        0x0684

    #define     BA_Gbl_perifResetStatus_SyncReset              0x0684
    #define     B16Gbl_perifResetStatus_SyncReset              0x0684
    #define   LSb32Gbl_perifResetStatus_SyncReset                 0
    #define   LSb16Gbl_perifResetStatus_SyncReset                 0
    #define       bGbl_perifResetStatus_SyncReset              1
    #define   MSK32Gbl_perifResetStatus_SyncReset                 0x00000001
    #define        Gbl_perifResetStatus_SyncReset_assert                    0x1
    #define        Gbl_perifResetStatus_SyncReset_deassert                  0x0

    #define     BA_Gbl_perifResetStatus_ahbApbSyncReset        0x0684
    #define     B16Gbl_perifResetStatus_ahbApbSyncReset        0x0684
    #define   LSb32Gbl_perifResetStatus_ahbApbSyncReset           1
    #define   LSb16Gbl_perifResetStatus_ahbApbSyncReset           1
    #define       bGbl_perifResetStatus_ahbApbSyncReset        1
    #define   MSK32Gbl_perifResetStatus_ahbApbSyncReset           0x00000002
    #define        Gbl_perifResetStatus_ahbApbSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_ahbApbSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_sdioSyncReset          0x0684
    #define     B16Gbl_perifResetStatus_sdioSyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_sdioSyncReset             2
    #define   LSb16Gbl_perifResetStatus_sdioSyncReset             2
    #define       bGbl_perifResetStatus_sdioSyncReset          1
    #define   MSK32Gbl_perifResetStatus_sdioSyncReset             0x00000004
    #define        Gbl_perifResetStatus_sdioSyncReset_assert                0x1
    #define        Gbl_perifResetStatus_sdioSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_bcmSyncReset           0x0684
    #define     B16Gbl_perifResetStatus_bcmSyncReset           0x0684
    #define   LSb32Gbl_perifResetStatus_bcmSyncReset              3
    #define   LSb16Gbl_perifResetStatus_bcmSyncReset              3
    #define       bGbl_perifResetStatus_bcmSyncReset           1
    #define   MSK32Gbl_perifResetStatus_bcmSyncReset              0x00000008
    #define        Gbl_perifResetStatus_bcmSyncReset_assert                 0x1
    #define        Gbl_perifResetStatus_bcmSyncReset_deassert               0x0

    #define     BA_Gbl_perifResetStatus_usb0SyncReset          0x0684
    #define     B16Gbl_perifResetStatus_usb0SyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_usb0SyncReset             4
    #define   LSb16Gbl_perifResetStatus_usb0SyncReset             4
    #define       bGbl_perifResetStatus_usb0SyncReset          1
    #define   MSK32Gbl_perifResetStatus_usb0SyncReset             0x00000010
    #define        Gbl_perifResetStatus_usb0SyncReset_assert                0x1
    #define        Gbl_perifResetStatus_usb0SyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_emmcSyncReset          0x0684
    #define     B16Gbl_perifResetStatus_emmcSyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_emmcSyncReset             5
    #define   LSb16Gbl_perifResetStatus_emmcSyncReset             5
    #define       bGbl_perifResetStatus_emmcSyncReset          1
    #define   MSK32Gbl_perifResetStatus_emmcSyncReset             0x00000020
    #define        Gbl_perifResetStatus_emmcSyncReset_assert                0x1
    #define        Gbl_perifResetStatus_emmcSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_pBridgeSyncReset       0x0684
    #define     B16Gbl_perifResetStatus_pBridgeSyncReset       0x0684
    #define   LSb32Gbl_perifResetStatus_pBridgeSyncReset          6
    #define   LSb16Gbl_perifResetStatus_pBridgeSyncReset          6
    #define       bGbl_perifResetStatus_pBridgeSyncReset       1
    #define   MSK32Gbl_perifResetStatus_pBridgeSyncReset          0x00000040
    #define        Gbl_perifResetStatus_pBridgeSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_pBridgeSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_usb3SyncReset          0x0684
    #define     B16Gbl_perifResetStatus_usb3SyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_usb3SyncReset             7
    #define   LSb16Gbl_perifResetStatus_usb3SyncReset             7
    #define       bGbl_perifResetStatus_usb3SyncReset          1
    #define   MSK32Gbl_perifResetStatus_usb3SyncReset             0x00000080
    #define        Gbl_perifResetStatus_usb3SyncReset_assert                0x1
    #define        Gbl_perifResetStatus_usb3SyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_nfcSysSyncReset        0x0685
    #define     B16Gbl_perifResetStatus_nfcSysSyncReset        0x0684
    #define   LSb32Gbl_perifResetStatus_nfcSysSyncReset           8
    #define   LSb16Gbl_perifResetStatus_nfcSysSyncReset           8
    #define       bGbl_perifResetStatus_nfcSysSyncReset        1
    #define   MSK32Gbl_perifResetStatus_nfcSysSyncReset           0x00000100
    #define        Gbl_perifResetStatus_nfcSysSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_nfcSysSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_nfcRegSyncReset        0x0685
    #define     B16Gbl_perifResetStatus_nfcRegSyncReset        0x0684
    #define   LSb32Gbl_perifResetStatus_nfcRegSyncReset           9
    #define   LSb16Gbl_perifResetStatus_nfcRegSyncReset           9
    #define       bGbl_perifResetStatus_nfcRegSyncReset        1
    #define   MSK32Gbl_perifResetStatus_nfcRegSyncReset           0x00000200
    #define        Gbl_perifResetStatus_nfcRegSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_nfcRegSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_gethRgmiiSyncReset     0x0685
    #define     B16Gbl_perifResetStatus_gethRgmiiSyncReset     0x0684
    #define   LSb32Gbl_perifResetStatus_gethRgmiiSyncReset        10
    #define   LSb16Gbl_perifResetStatus_gethRgmiiSyncReset        10
    #define       bGbl_perifResetStatus_gethRgmiiSyncReset     1
    #define   MSK32Gbl_perifResetStatus_gethRgmiiSyncReset        0x00000400
    #define        Gbl_perifResetStatus_gethRgmiiSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_gethRgmiiSyncReset_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifStickyResetN                       0x0688

    #define     BA_Gbl_perifStickyResetN_usb0PhyRstn           0x0688
    #define     B16Gbl_perifStickyResetN_usb0PhyRstn           0x0688
    #define   LSb32Gbl_perifStickyResetN_usb0PhyRstn              0
    #define   LSb16Gbl_perifStickyResetN_usb0PhyRstn              0
    #define       bGbl_perifStickyResetN_usb0PhyRstn           1
    #define   MSK32Gbl_perifStickyResetN_usb0PhyRstn              0x00000001
    #define        Gbl_perifStickyResetN_usb0PhyRstn_asserted               0x0
    #define        Gbl_perifStickyResetN_usb0PhyRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_usb0CoreRstn          0x0688
    #define     B16Gbl_perifStickyResetN_usb0CoreRstn          0x0688
    #define   LSb32Gbl_perifStickyResetN_usb0CoreRstn             1
    #define   LSb16Gbl_perifStickyResetN_usb0CoreRstn             1
    #define       bGbl_perifStickyResetN_usb0CoreRstn          1
    #define   MSK32Gbl_perifStickyResetN_usb0CoreRstn             0x00000002
    #define        Gbl_perifStickyResetN_usb0CoreRstn_asserted              0x0
    #define        Gbl_perifStickyResetN_usb0CoreRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_usb0MahbRstn          0x0688
    #define     B16Gbl_perifStickyResetN_usb0MahbRstn          0x0688
    #define   LSb32Gbl_perifStickyResetN_usb0MahbRstn             2
    #define   LSb16Gbl_perifStickyResetN_usb0MahbRstn             2
    #define       bGbl_perifStickyResetN_usb0MahbRstn          1
    #define   MSK32Gbl_perifStickyResetN_usb0MahbRstn             0x00000004
    #define        Gbl_perifStickyResetN_usb0MahbRstn_asserted              0x0
    #define        Gbl_perifStickyResetN_usb0MahbRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_usb3PhyRstn           0x0688
    #define     B16Gbl_perifStickyResetN_usb3PhyRstn           0x0688
    #define   LSb32Gbl_perifStickyResetN_usb3PhyRstn              3
    #define   LSb16Gbl_perifStickyResetN_usb3PhyRstn              3
    #define       bGbl_perifStickyResetN_usb3PhyRstn           1
    #define   MSK32Gbl_perifStickyResetN_usb3PhyRstn              0x00000008
    #define        Gbl_perifStickyResetN_usb3PhyRstn_asserted               0x0
    #define        Gbl_perifStickyResetN_usb3PhyRstn_deasserted              0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_apbPerifResetTrigger                    0x068C

    #define     BA_Gbl_apbPerifResetTrigger_uart0SyncReset     0x068C
    #define     B16Gbl_apbPerifResetTrigger_uart0SyncReset     0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_uart0SyncReset        0
    #define   LSb16Gbl_apbPerifResetTrigger_uart0SyncReset        0
    #define       bGbl_apbPerifResetTrigger_uart0SyncReset     1
    #define   MSK32Gbl_apbPerifResetTrigger_uart0SyncReset        0x00000001
    #define        Gbl_apbPerifResetTrigger_uart0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_uart0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_uart1SyncReset     0x068C
    #define     B16Gbl_apbPerifResetTrigger_uart1SyncReset     0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_uart1SyncReset        1
    #define   LSb16Gbl_apbPerifResetTrigger_uart1SyncReset        1
    #define       bGbl_apbPerifResetTrigger_uart1SyncReset     1
    #define   MSK32Gbl_apbPerifResetTrigger_uart1SyncReset        0x00000002
    #define        Gbl_apbPerifResetTrigger_uart1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_uart1SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_i2c0SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_i2c0SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_i2c0SyncReset         2
    #define   LSb16Gbl_apbPerifResetTrigger_i2c0SyncReset         2
    #define       bGbl_apbPerifResetTrigger_i2c0SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_i2c0SyncReset         0x00000004
    #define        Gbl_apbPerifResetTrigger_i2c0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_i2c0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_i2c1SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_i2c1SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_i2c1SyncReset         3
    #define   LSb16Gbl_apbPerifResetTrigger_i2c1SyncReset         3
    #define       bGbl_apbPerifResetTrigger_i2c1SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_i2c1SyncReset         0x00000008
    #define        Gbl_apbPerifResetTrigger_i2c1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_i2c1SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_i2c2SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_i2c2SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_i2c2SyncReset         4
    #define   LSb16Gbl_apbPerifResetTrigger_i2c2SyncReset         4
    #define       bGbl_apbPerifResetTrigger_i2c2SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_i2c2SyncReset         0x00000010
    #define        Gbl_apbPerifResetTrigger_i2c2SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_i2c2SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_i2c3SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_i2c3SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_i2c3SyncReset         5
    #define   LSb16Gbl_apbPerifResetTrigger_i2c3SyncReset         5
    #define       bGbl_apbPerifResetTrigger_i2c3SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_i2c3SyncReset         0x00000020
    #define        Gbl_apbPerifResetTrigger_i2c3SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_i2c3SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_spi1SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_spi1SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_spi1SyncReset         6
    #define   LSb16Gbl_apbPerifResetTrigger_spi1SyncReset         6
    #define       bGbl_apbPerifResetTrigger_spi1SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_spi1SyncReset         0x00000040
    #define        Gbl_apbPerifResetTrigger_spi1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_spi1SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_spi2SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_spi2SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_spi2SyncReset         7
    #define   LSb16Gbl_apbPerifResetTrigger_spi2SyncReset         7
    #define       bGbl_apbPerifResetTrigger_spi2SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_spi2SyncReset         0x00000080
    #define        Gbl_apbPerifResetTrigger_spi2SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_spi2SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_timer0SyncReset    0x068D
    #define     B16Gbl_apbPerifResetTrigger_timer0SyncReset    0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_timer0SyncReset       8
    #define   LSb16Gbl_apbPerifResetTrigger_timer0SyncReset       8
    #define       bGbl_apbPerifResetTrigger_timer0SyncReset    1
    #define   MSK32Gbl_apbPerifResetTrigger_timer0SyncReset       0x00000100
    #define        Gbl_apbPerifResetTrigger_timer0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_timer0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_timer1SyncReset    0x068D
    #define     B16Gbl_apbPerifResetTrigger_timer1SyncReset    0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_timer1SyncReset       9
    #define   LSb16Gbl_apbPerifResetTrigger_timer1SyncReset       9
    #define       bGbl_apbPerifResetTrigger_timer1SyncReset    1
    #define   MSK32Gbl_apbPerifResetTrigger_timer1SyncReset       0x00000200
    #define        Gbl_apbPerifResetTrigger_timer1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_timer1SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_wdt0SyncReset      0x068D
    #define     B16Gbl_apbPerifResetTrigger_wdt0SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_wdt0SyncReset         10
    #define   LSb16Gbl_apbPerifResetTrigger_wdt0SyncReset         10
    #define       bGbl_apbPerifResetTrigger_wdt0SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_wdt0SyncReset         0x00000400
    #define        Gbl_apbPerifResetTrigger_wdt0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_wdt0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_wdt1SyncReset      0x068D
    #define     B16Gbl_apbPerifResetTrigger_wdt1SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_wdt1SyncReset         11
    #define   LSb16Gbl_apbPerifResetTrigger_wdt1SyncReset         11
    #define       bGbl_apbPerifResetTrigger_wdt1SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_wdt1SyncReset         0x00000800
    #define        Gbl_apbPerifResetTrigger_wdt1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_wdt1SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_wdt2SyncReset      0x068D
    #define     B16Gbl_apbPerifResetTrigger_wdt2SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_wdt2SyncReset         12
    #define   LSb16Gbl_apbPerifResetTrigger_wdt2SyncReset         12
    #define       bGbl_apbPerifResetTrigger_wdt2SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_wdt2SyncReset         0x00001000
    #define        Gbl_apbPerifResetTrigger_wdt2SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_wdt2SyncReset_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_apbPerifResetStatus                     0x0690

    #define     BA_Gbl_apbPerifResetStatus_uart0SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_uart0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_uart0SyncResetStatus    0
    #define   LSb16Gbl_apbPerifResetStatus_uart0SyncResetStatus    0
    #define       bGbl_apbPerifResetStatus_uart0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_uart0SyncResetStatus    0x00000001
    #define        Gbl_apbPerifResetStatus_uart0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_uart0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_uart1SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_uart1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_uart1SyncResetStatus    1
    #define   LSb16Gbl_apbPerifResetStatus_uart1SyncResetStatus    1
    #define       bGbl_apbPerifResetStatus_uart1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_uart1SyncResetStatus    0x00000002
    #define        Gbl_apbPerifResetStatus_uart1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_uart1SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c0SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c0SyncResetStatus    2
    #define   LSb16Gbl_apbPerifResetStatus_i2c0SyncResetStatus    2
    #define       bGbl_apbPerifResetStatus_i2c0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c0SyncResetStatus    0x00000004
    #define        Gbl_apbPerifResetStatus_i2c0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c1SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c1SyncResetStatus    3
    #define   LSb16Gbl_apbPerifResetStatus_i2c1SyncResetStatus    3
    #define       bGbl_apbPerifResetStatus_i2c1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c1SyncResetStatus    0x00000008
    #define        Gbl_apbPerifResetStatus_i2c1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c1SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c2SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c2SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c2SyncResetStatus    4
    #define   LSb16Gbl_apbPerifResetStatus_i2c2SyncResetStatus    4
    #define       bGbl_apbPerifResetStatus_i2c2SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c2SyncResetStatus    0x00000010
    #define        Gbl_apbPerifResetStatus_i2c2SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c2SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c3SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c3SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c3SyncResetStatus    5
    #define   LSb16Gbl_apbPerifResetStatus_i2c3SyncResetStatus    5
    #define       bGbl_apbPerifResetStatus_i2c3SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c3SyncResetStatus    0x00000020
    #define        Gbl_apbPerifResetStatus_i2c3SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c3SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_spi1SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_spi1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_spi1SyncResetStatus    6
    #define   LSb16Gbl_apbPerifResetStatus_spi1SyncResetStatus    6
    #define       bGbl_apbPerifResetStatus_spi1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_spi1SyncResetStatus    0x00000040
    #define        Gbl_apbPerifResetStatus_spi1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_spi1SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_spi2SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_spi2SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_spi2SyncResetStatus    7
    #define   LSb16Gbl_apbPerifResetStatus_spi2SyncResetStatus    7
    #define       bGbl_apbPerifResetStatus_spi2SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_spi2SyncResetStatus    0x00000080
    #define        Gbl_apbPerifResetStatus_spi2SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_spi2SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_timer0SyncResetStatus 0x0691
    #define     B16Gbl_apbPerifResetStatus_timer0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_timer0SyncResetStatus    8
    #define   LSb16Gbl_apbPerifResetStatus_timer0SyncResetStatus    8
    #define       bGbl_apbPerifResetStatus_timer0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_timer0SyncResetStatus    0x00000100
    #define        Gbl_apbPerifResetStatus_timer0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_timer0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_timer1SyncResetStatus 0x0691
    #define     B16Gbl_apbPerifResetStatus_timer1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_timer1SyncResetStatus    9
    #define   LSb16Gbl_apbPerifResetStatus_timer1SyncResetStatus    9
    #define       bGbl_apbPerifResetStatus_timer1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_timer1SyncResetStatus    0x00000200
    #define        Gbl_apbPerifResetStatus_timer1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_timer1SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_wdt0SyncResetStatus 0x0691
    #define     B16Gbl_apbPerifResetStatus_wdt0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_wdt0SyncResetStatus    10
    #define   LSb16Gbl_apbPerifResetStatus_wdt0SyncResetStatus    10
    #define       bGbl_apbPerifResetStatus_wdt0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_wdt0SyncResetStatus    0x00000400
    #define        Gbl_apbPerifResetStatus_wdt0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_wdt0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_wdt1SyncResetStatus 0x0691
    #define     B16Gbl_apbPerifResetStatus_wdt1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_wdt1SyncResetStatus    11
    #define   LSb16Gbl_apbPerifResetStatus_wdt1SyncResetStatus    11
    #define       bGbl_apbPerifResetStatus_wdt1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_wdt1SyncResetStatus    0x00000800
    #define        Gbl_apbPerifResetStatus_wdt1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_wdt1SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_wdt2SyncResetStatus 0x0691
    #define     B16Gbl_apbPerifResetStatus_wdt2SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_wdt2SyncResetStatus    12
    #define   LSb16Gbl_apbPerifResetStatus_wdt2SyncResetStatus    12
    #define       bGbl_apbPerifResetStatus_wdt2SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_wdt2SyncResetStatus    0x00001000
    #define        Gbl_apbPerifResetStatus_wdt2SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_wdt2SyncResetStatus_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topStickyResetN                         0x0694

    #define     BA_Gbl_topStickyResetN_gpuCoreRstn             0x0694
    #define     B16Gbl_topStickyResetN_gpuCoreRstn             0x0694
    #define   LSb32Gbl_topStickyResetN_gpuCoreRstn                0
    #define   LSb16Gbl_topStickyResetN_gpuCoreRstn                0
    #define       bGbl_topStickyResetN_gpuCoreRstn             1
    #define   MSK32Gbl_topStickyResetN_gpuCoreRstn                0x00000001
    #define        Gbl_topStickyResetN_gpuCoreRstn_asserted                 0x0
    #define        Gbl_topStickyResetN_gpuCoreRstn_deasserted               0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_clkEnable                               0x0700

    #define     BA_Gbl_clkEnable_usb0CoreClkEn                 0x0700
    #define     B16Gbl_clkEnable_usb0CoreClkEn                 0x0700
    #define   LSb32Gbl_clkEnable_usb0CoreClkEn                    0
    #define   LSb16Gbl_clkEnable_usb0CoreClkEn                    0
    #define       bGbl_clkEnable_usb0CoreClkEn                 1
    #define   MSK32Gbl_clkEnable_usb0CoreClkEn                    0x00000001
    #define        Gbl_clkEnable_usb0CoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_usb0CoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_sdioSysClkEn                  0x0700
    #define     B16Gbl_clkEnable_sdioSysClkEn                  0x0700
    #define   LSb32Gbl_clkEnable_sdioSysClkEn                     1
    #define   LSb16Gbl_clkEnable_sdioSysClkEn                     1
    #define       bGbl_clkEnable_sdioSysClkEn                  1
    #define   MSK32Gbl_clkEnable_sdioSysClkEn                     0x00000002
    #define        Gbl_clkEnable_sdioSysClkEn_enable                        0x1
    #define        Gbl_clkEnable_sdioSysClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_emmcSysClkEn                  0x0700
    #define     B16Gbl_clkEnable_emmcSysClkEn                  0x0700
    #define   LSb32Gbl_clkEnable_emmcSysClkEn                     2
    #define   LSb16Gbl_clkEnable_emmcSysClkEn                     2
    #define       bGbl_clkEnable_emmcSysClkEn                  1
    #define   MSK32Gbl_clkEnable_emmcSysClkEn                     0x00000004
    #define        Gbl_clkEnable_emmcSysClkEn_enable                        0x1
    #define        Gbl_clkEnable_emmcSysClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_pBridgeCoreClkEn              0x0700
    #define     B16Gbl_clkEnable_pBridgeCoreClkEn              0x0700
    #define   LSb32Gbl_clkEnable_pBridgeCoreClkEn                 3
    #define   LSb16Gbl_clkEnable_pBridgeCoreClkEn                 3
    #define       bGbl_clkEnable_pBridgeCoreClkEn              1
    #define   MSK32Gbl_clkEnable_pBridgeCoreClkEn                 0x00000008
    #define        Gbl_clkEnable_pBridgeCoreClkEn_enable                    0x1
    #define        Gbl_clkEnable_pBridgeCoreClkEn_disable                   0x0

    #define     BA_Gbl_clkEnable_gpuAxiClkEn                   0x0700
    #define     B16Gbl_clkEnable_gpuAxiClkEn                   0x0700
    #define   LSb32Gbl_clkEnable_gpuAxiClkEn                      4
    #define   LSb16Gbl_clkEnable_gpuAxiClkEn                      4
    #define       bGbl_clkEnable_gpuAxiClkEn                   1
    #define   MSK32Gbl_clkEnable_gpuAxiClkEn                      0x00000010
    #define        Gbl_clkEnable_gpuAxiClkEn_enable                         0x1
    #define        Gbl_clkEnable_gpuAxiClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_gethRgmiiSysClkEn             0x0700
    #define     B16Gbl_clkEnable_gethRgmiiSysClkEn             0x0700
    #define   LSb32Gbl_clkEnable_gethRgmiiSysClkEn                5
    #define   LSb16Gbl_clkEnable_gethRgmiiSysClkEn                5
    #define       bGbl_clkEnable_gethRgmiiSysClkEn             1
    #define   MSK32Gbl_clkEnable_gethRgmiiSysClkEn                0x00000020
    #define        Gbl_clkEnable_gethRgmiiSysClkEn_enable                   0x1
    #define        Gbl_clkEnable_gethRgmiiSysClkEn_disable                  0x0

    #define     BA_Gbl_clkEnable_nfcSysClkEn                   0x0700
    #define     B16Gbl_clkEnable_nfcSysClkEn                   0x0700
    #define   LSb32Gbl_clkEnable_nfcSysClkEn                      6
    #define   LSb16Gbl_clkEnable_nfcSysClkEn                      6
    #define       bGbl_clkEnable_nfcSysClkEn                   1
    #define   MSK32Gbl_clkEnable_nfcSysClkEn                      0x00000040
    #define        Gbl_clkEnable_nfcSysClkEn_enable                         0x1
    #define        Gbl_clkEnable_nfcSysClkEn_disable                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ClkSwitch                               0x0710

    #define     BA_Gbl_ClkSwitch_sysPLL_0SWBypass              0x0710
    #define     B16Gbl_ClkSwitch_sysPLL_0SWBypass              0x0710
    #define   LSb32Gbl_ClkSwitch_sysPLL_0SWBypass                 0
    #define   LSb16Gbl_ClkSwitch_sysPLL_0SWBypass                 0
    #define       bGbl_ClkSwitch_sysPLL_0SWBypass              1
    #define   MSK32Gbl_ClkSwitch_sysPLL_0SWBypass                 0x00000001
    #define        Gbl_ClkSwitch_sysPLL_0SWBypass_refClk                    0x1
    #define        Gbl_ClkSwitch_sysPLL_0SWBypass_pllClk                    0x0

    #define     BA_Gbl_ClkSwitch_sysPLL_1SWBypass              0x0710
    #define     B16Gbl_ClkSwitch_sysPLL_1SWBypass              0x0710
    #define   LSb32Gbl_ClkSwitch_sysPLL_1SWBypass                 1
    #define   LSb16Gbl_ClkSwitch_sysPLL_1SWBypass                 1
    #define       bGbl_ClkSwitch_sysPLL_1SWBypass              1
    #define   MSK32Gbl_ClkSwitch_sysPLL_1SWBypass                 0x00000002
    #define        Gbl_ClkSwitch_sysPLL_1SWBypass_refClk                    0x1
    #define        Gbl_ClkSwitch_sysPLL_1SWBypass_pllClk                    0x0

    #define     BA_Gbl_ClkSwitch_memPLLSWBypass                0x0710
    #define     B16Gbl_ClkSwitch_memPLLSWBypass                0x0710
    #define   LSb32Gbl_ClkSwitch_memPLLSWBypass                   2
    #define   LSb16Gbl_ClkSwitch_memPLLSWBypass                   2
    #define       bGbl_ClkSwitch_memPLLSWBypass                1
    #define   MSK32Gbl_ClkSwitch_memPLLSWBypass                   0x00000004
    #define        Gbl_ClkSwitch_memPLLSWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_memPLLSWBypass_pllClk                      0x0

    #define     BA_Gbl_ClkSwitch_cpuPLLSWBypass                0x0710
    #define     B16Gbl_ClkSwitch_cpuPLLSWBypass                0x0710
    #define   LSb32Gbl_ClkSwitch_cpuPLLSWBypass                   3
    #define   LSb16Gbl_ClkSwitch_cpuPLLSWBypass                   3
    #define       bGbl_ClkSwitch_cpuPLLSWBypass                1
    #define   MSK32Gbl_ClkSwitch_cpuPLLSWBypass                   0x00000008
    #define        Gbl_ClkSwitch_cpuPLLSWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_cpuPLLSWBypass_pllClk                      0x0

    #define     BA_Gbl_ClkSwitch_aPLL_0SWBypass                0x0710
    #define     B16Gbl_ClkSwitch_aPLL_0SWBypass                0x0710
    #define   LSb32Gbl_ClkSwitch_aPLL_0SWBypass                   4
    #define   LSb16Gbl_ClkSwitch_aPLL_0SWBypass                   4
    #define       bGbl_ClkSwitch_aPLL_0SWBypass                1
    #define   MSK32Gbl_ClkSwitch_aPLL_0SWBypass                   0x00000010
    #define        Gbl_ClkSwitch_aPLL_0SWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_aPLL_0SWBypass_pllClk                      0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpufastRefClk                           0x0720
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_memfastRefClk                           0x0724
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cfgClk                                  0x0728
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_atbClk                                  0x072C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_apbCoreClk                              0x0730
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk480mGroup0                   0x0734
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk480mGroup1                   0x0738
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk480mGroup2                   0x073C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup0                   0x0740
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup1                   0x0744
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup2                   0x0748
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup3                   0x074C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup4                   0x0750
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk125mGroup0                  0x0754
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk250mGroup0                  0x0758
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk500mGroup0                  0x075C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk200mGroup0                  0x0760
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk200mGroup1                  0x0764
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_emmcClk                                 0x0768
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sd0Clk                                  0x076C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gethRgmiiClk                            0x0770
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk                             0x0774
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb3CoreClk                             0x0778
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_nfcEccClk                               0x077C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_nfcCoreClk                              0x0780
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bcmClk                                  0x0784
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gpuClk                                  0x0788
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sysClk                                  0x078C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_aioSysClk                               0x0790
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifSysClk                             0x0794
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioSysClk                              0x0798
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avSysClk                                0x079C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_lcdc1ScanClk                            0x07A0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_lcdc2ScanClk                            0x07A4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SECURE_SCAN_EN                          0x0900

    #define     BA_Gbl_SECURE_SCAN_EN_SET                      0x0900
    #define     B16Gbl_SECURE_SCAN_EN_SET                      0x0900
    #define   LSb32Gbl_SECURE_SCAN_EN_SET                         0
    #define   LSb16Gbl_SECURE_SCAN_EN_SET                         0
    #define       bGbl_SECURE_SCAN_EN_SET                      1
    #define   MSK32Gbl_SECURE_SCAN_EN_SET                         0x00000001

    #define     BA_Gbl_SECURE_SCAN_EN_drcg                     0x0900
    #define     B16Gbl_SECURE_SCAN_EN_drcg                     0x0900
    #define   LSb32Gbl_SECURE_SCAN_EN_drcg                        1
    #define   LSb16Gbl_SECURE_SCAN_EN_drcg                        1
    #define       bGbl_SECURE_SCAN_EN_drcg                     1
    #define   MSK32Gbl_SECURE_SCAN_EN_drcg                        0x00000002
    #define        Gbl_SECURE_SCAN_EN_drcg_drcgActive                       0x1
    #define        Gbl_SECURE_SCAN_EN_drcg_drcgInactive                     0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gic400_ctrl                             0x0960

    #define     BA_Gbl_gic400_ctrl_cfgsdisable                 0x0960
    #define     B16Gbl_gic400_ctrl_cfgsdisable                 0x0960
    #define   LSb32Gbl_gic400_ctrl_cfgsdisable                    0
    #define   LSb16Gbl_gic400_ctrl_cfgsdisable                    0
    #define       bGbl_gic400_ctrl_cfgsdisable                 1
    #define   MSK32Gbl_gic400_ctrl_cfgsdisable                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_0                              0x0970

    #define     BA_Gbl_GFX_CTRL_0_timer_enable                 0x0970
    #define     B16Gbl_GFX_CTRL_0_timer_enable                 0x0970
    #define   LSb32Gbl_GFX_CTRL_0_timer_enable                    0
    #define   LSb16Gbl_GFX_CTRL_0_timer_enable                    0
    #define       bGbl_GFX_CTRL_0_timer_enable                 1
    #define   MSK32Gbl_GFX_CTRL_0_timer_enable                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_1                              0x0974

    #define     BA_Gbl_GFX_CTRL_1_timer_load                   0x0974
    #define     B16Gbl_GFX_CTRL_1_timer_load                   0x0974
    #define   LSb32Gbl_GFX_CTRL_1_timer_load                      0
    #define   LSb16Gbl_GFX_CTRL_1_timer_load                      0
    #define       bGbl_GFX_CTRL_1_timer_load                   1
    #define   MSK32Gbl_GFX_CTRL_1_timer_load                      0x00000001

    #define     BA_Gbl_GFX_CTRL_1_timer_halt                   0x0974
    #define     B16Gbl_GFX_CTRL_1_timer_halt                   0x0974
    #define   LSb32Gbl_GFX_CTRL_1_timer_halt                      1
    #define   LSb16Gbl_GFX_CTRL_1_timer_halt                      1
    #define       bGbl_GFX_CTRL_1_timer_halt                   1
    #define   MSK32Gbl_GFX_CTRL_1_timer_halt                      0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_2                              0x0978

    #define     BA_Gbl_GFX_CTRL_2_timer_value_lsb              0x0978
    #define     B16Gbl_GFX_CTRL_2_timer_value_lsb              0x0978
    #define   LSb32Gbl_GFX_CTRL_2_timer_value_lsb                 0
    #define   LSb16Gbl_GFX_CTRL_2_timer_value_lsb                 0
    #define       bGbl_GFX_CTRL_2_timer_value_lsb              32
    #define   MSK32Gbl_GFX_CTRL_2_timer_value_lsb                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_3                              0x097C

    #define     BA_Gbl_GFX_CTRL_3_timer_value_msb              0x097C
    #define     B16Gbl_GFX_CTRL_3_timer_value_msb              0x097C
    #define   LSb32Gbl_GFX_CTRL_3_timer_value_msb                 0
    #define   LSb16Gbl_GFX_CTRL_3_timer_value_msb                 0
    #define       bGbl_GFX_CTRL_3_timer_value_msb              32
    #define   MSK32Gbl_GFX_CTRL_3_timer_value_msb                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_TIMER_VALUE                         0x0980

    #define     BA_Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb  0x0980
    #define     B16Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb  0x0980
    #define   LSb32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb     0
    #define   LSb16Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb     0
    #define       bGbl_GFX_TIMER_VALUE_timer_binary_value_lsb  32
    #define   MSK32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb     0xFFFFFFFF

    #define     RA_Gbl_GFX_TIMER_VALUE1                        0x0984

    #define     BA_Gbl_GFX_TIMER_VALUE_timer_binary_value_msb  0x0984
    #define     B16Gbl_GFX_TIMER_VALUE_timer_binary_value_msb  0x0984
    #define   LSb32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb     0
    #define   LSb16Gbl_GFX_TIMER_VALUE_timer_binary_value_msb     0
    #define       bGbl_GFX_TIMER_VALUE_timer_binary_value_msb  32
    #define   MSK32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb     0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_STATUS                              0x098C

    #define     BA_Gbl_GFX_STATUS_gfx3d_idle                   0x098C
    #define     B16Gbl_GFX_STATUS_gfx3d_idle                   0x098C
    #define   LSb32Gbl_GFX_STATUS_gfx3d_idle                      0
    #define   LSb16Gbl_GFX_STATUS_gfx3d_idle                      0
    #define       bGbl_GFX_STATUS_gfx3d_idle                   1
    #define   MSK32Gbl_GFX_STATUS_gfx3d_idle                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USBOTG_REFCLK_CTRL0                     0x0990

    #define     BA_Gbl_USBOTG_REFCLK_CTRL0_divval              0x0990
    #define     B16Gbl_USBOTG_REFCLK_CTRL0_divval              0x0990
    #define   LSb32Gbl_USBOTG_REFCLK_CTRL0_divval                 0
    #define   LSb16Gbl_USBOTG_REFCLK_CTRL0_divval                 0
    #define       bGbl_USBOTG_REFCLK_CTRL0_divval              32
    #define   MSK32Gbl_USBOTG_REFCLK_CTRL0_divval                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USBOTG_REFCLK_CTRL1                     0x0994

    #define     BA_Gbl_USBOTG_REFCLK_CTRL1_lowcnt              0x0994
    #define     B16Gbl_USBOTG_REFCLK_CTRL1_lowcnt              0x0994
    #define   LSb32Gbl_USBOTG_REFCLK_CTRL1_lowcnt                 0
    #define   LSb16Gbl_USBOTG_REFCLK_CTRL1_lowcnt                 0
    #define       bGbl_USBOTG_REFCLK_CTRL1_lowcnt              32
    #define   MSK32Gbl_USBOTG_REFCLK_CTRL1_lowcnt                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_PORT_CTRL                          0x09D0

    #define     BA_Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel            0x09D0
    #define     B16Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel            0x09D0
    #define   LSb32Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel               0
    #define   LSb16Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel               0
    #define       bGbl_I2S2_PORT_CTRL_i2s2_mclk_sel            1
    #define   MSK32Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD_IO_CTRL                            0x09D4

    #define     BA_Gbl_LCDD_IO_CTRL_MS                         0x09D4
    #define     B16Gbl_LCDD_IO_CTRL_MS                         0x09D4
    #define   LSb32Gbl_LCDD_IO_CTRL_MS                            0
    #define   LSb16Gbl_LCDD_IO_CTRL_MS                            0
    #define       bGbl_LCDD_IO_CTRL_MS                         2
    #define   MSK32Gbl_LCDD_IO_CTRL_MS                            0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_POR_EN_status                           0x09E0

    #define     BA_Gbl_POR_EN_status_POR_EN                    0x09E0
    #define     B16Gbl_POR_EN_status_POR_EN                    0x09E0
    #define   LSb32Gbl_POR_EN_status_POR_EN                       0
    #define   LSb16Gbl_POR_EN_status_POR_EN                       0
    #define       bGbl_POR_EN_status_POR_EN                    1
    #define   MSK32Gbl_POR_EN_status_POR_EN                       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_POR_EN_OVRD                             0x09E4

    #define     BA_Gbl_POR_EN_OVRD_POR_EN_OVRD_EN              0x09E4
    #define     B16Gbl_POR_EN_OVRD_POR_EN_OVRD_EN              0x09E4
    #define   LSb32Gbl_POR_EN_OVRD_POR_EN_OVRD_EN                 0
    #define   LSb16Gbl_POR_EN_OVRD_POR_EN_OVRD_EN                 0
    #define       bGbl_POR_EN_OVRD_POR_EN_OVRD_EN              1
    #define   MSK32Gbl_POR_EN_OVRD_POR_EN_OVRD_EN                 0x00000001

    #define     BA_Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL             0x09E4
    #define     B16Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL             0x09E4
    #define   LSb32Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL                1
    #define   LSb16Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL                1
    #define       bGbl_POR_EN_OVRD_POR_EN_OVRD_VAL             1
    #define   MSK32Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL                0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_POR_status                              0x09F0

    #define     BA_Gbl_POR_status_POR_VDDIO_SOC                0x09F0
    #define     B16Gbl_POR_status_POR_VDDIO_SOC                0x09F0
    #define   LSb32Gbl_POR_status_POR_VDDIO_SOC                   0
    #define   LSb16Gbl_POR_status_POR_VDDIO_SOC                   0
    #define       bGbl_POR_status_POR_VDDIO_SOC                1
    #define   MSK32Gbl_POR_status_POR_VDDIO_SOC                   0x00000001

    #define     BA_Gbl_POR_status_POR_VDDIO3P3_SOC             0x09F0
    #define     B16Gbl_POR_status_POR_VDDIO3P3_SOC             0x09F0
    #define   LSb32Gbl_POR_status_POR_VDDIO3P3_SOC                1
    #define   LSb16Gbl_POR_status_POR_VDDIO3P3_SOC                1
    #define       bGbl_POR_status_POR_VDDIO3P3_SOC             1
    #define   MSK32Gbl_POR_status_POR_VDDIO3P3_SOC                0x00000002

    #define     BA_Gbl_POR_status_POR_VDD_CPU                  0x09F0
    #define     B16Gbl_POR_status_POR_VDD_CPU                  0x09F0
    #define   LSb32Gbl_POR_status_POR_VDD_CPU                     2
    #define   LSb16Gbl_POR_status_POR_VDD_CPU                     2
    #define       bGbl_POR_status_POR_VDD_CPU                  1
    #define   MSK32Gbl_POR_status_POR_VDD_CPU                     0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_POR_CTL                                 0x09F4

    #define     BA_Gbl_POR_CTL_SOC_VDD1P8V_BYPASS              0x09F4
    #define     B16Gbl_POR_CTL_SOC_VDD1P8V_BYPASS              0x09F4
    #define   LSb32Gbl_POR_CTL_SOC_VDD1P8V_BYPASS                 0
    #define   LSb16Gbl_POR_CTL_SOC_VDD1P8V_BYPASS                 0
    #define       bGbl_POR_CTL_SOC_VDD1P8V_BYPASS              1
    #define   MSK32Gbl_POR_CTL_SOC_VDD1P8V_BYPASS                 0x00000001

    #define     BA_Gbl_POR_CTL_POR_SOC_IO_1P8V_PD              0x09F4
    #define     B16Gbl_POR_CTL_POR_SOC_IO_1P8V_PD              0x09F4
    #define   LSb32Gbl_POR_CTL_POR_SOC_IO_1P8V_PD                 1
    #define   LSb16Gbl_POR_CTL_POR_SOC_IO_1P8V_PD                 1
    #define       bGbl_POR_CTL_POR_SOC_IO_1P8V_PD              1
    #define   MSK32Gbl_POR_CTL_POR_SOC_IO_1P8V_PD                 0x00000002

    #define     BA_Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH             0x09F4
    #define     B16Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH             0x09F4
    #define   LSb32Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH                2
    #define   LSb16Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH                2
    #define       bGbl_POR_CTL_POR_SOC_IO_1P8V_VTH             2
    #define   MSK32Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH                0x0000000C

    #define     BA_Gbl_POR_CTL_SOC_VDD3P3V_BYPASS              0x09F4
    #define     B16Gbl_POR_CTL_SOC_VDD3P3V_BYPASS              0x09F4
    #define   LSb32Gbl_POR_CTL_SOC_VDD3P3V_BYPASS                 4
    #define   LSb16Gbl_POR_CTL_SOC_VDD3P3V_BYPASS                 4
    #define       bGbl_POR_CTL_SOC_VDD3P3V_BYPASS              1
    #define   MSK32Gbl_POR_CTL_SOC_VDD3P3V_BYPASS                 0x00000010

    #define     BA_Gbl_POR_CTL_POR_SOC_IO_3P3V_PD              0x09F4
    #define     B16Gbl_POR_CTL_POR_SOC_IO_3P3V_PD              0x09F4
    #define   LSb32Gbl_POR_CTL_POR_SOC_IO_3P3V_PD                 5
    #define   LSb16Gbl_POR_CTL_POR_SOC_IO_3P3V_PD                 5
    #define       bGbl_POR_CTL_POR_SOC_IO_3P3V_PD              1
    #define   MSK32Gbl_POR_CTL_POR_SOC_IO_3P3V_PD                 0x00000020

    #define     BA_Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH             0x09F4
    #define     B16Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH             0x09F4
    #define   LSb32Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH                6
    #define   LSb16Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH                6
    #define       bGbl_POR_CTL_POR_SOC_IO_3P3V_VTH             2
    #define   MSK32Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH                0x000000C0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PERIF                                   0x0A00
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PLL_COUNTER                             0x0B00
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_pinMuxCntlBus                           0x8000

    #define     BA_Gbl_pinMuxCntlBus_TW0_SCL                   0x8000
    #define     B16Gbl_pinMuxCntlBus_TW0_SCL                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_TW0_SCL                      0
    #define   LSb16Gbl_pinMuxCntlBus_TW0_SCL                      0
    #define       bGbl_pinMuxCntlBus_TW0_SCL                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW0_SCL                      0x00000007
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_3                         0x3

    #define     BA_Gbl_pinMuxCntlBus_TW0_SDA                   0x8000
    #define     B16Gbl_pinMuxCntlBus_TW0_SDA                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_TW0_SDA                      3
    #define   LSb16Gbl_pinMuxCntlBus_TW0_SDA                      3
    #define       bGbl_pinMuxCntlBus_TW0_SDA                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW0_SDA                      0x00000038
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_3                         0x3

    #define     BA_Gbl_pinMuxCntlBus_TW1_SCL                   0x8000
    #define     B16Gbl_pinMuxCntlBus_TW1_SCL                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_TW1_SCL                      6
    #define   LSb16Gbl_pinMuxCntlBus_TW1_SCL                      6
    #define       bGbl_pinMuxCntlBus_TW1_SCL                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW1_SCL                      0x000001C0
    #define        Gbl_pinMuxCntlBus_TW1_SCL_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW1_SCL_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW1_SCL_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_TW1_SCL_MODE_5                         0x5

    #define     BA_Gbl_pinMuxCntlBus_TW1_SDA                   0x8001
    #define     B16Gbl_pinMuxCntlBus_TW1_SDA                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_TW1_SDA                      9
    #define   LSb16Gbl_pinMuxCntlBus_TW1_SDA                      9
    #define       bGbl_pinMuxCntlBus_TW1_SDA                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW1_SDA                      0x00000E00
    #define        Gbl_pinMuxCntlBus_TW1_SDA_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW1_SDA_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW1_SDA_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW1_SDA_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_TW1_SDA_MODE_5                         0x5

    #define     BA_Gbl_pinMuxCntlBus_TMS                       0x8001
    #define     B16Gbl_pinMuxCntlBus_TMS                       0x8000
    #define   LSb32Gbl_pinMuxCntlBus_TMS                          12
    #define   LSb16Gbl_pinMuxCntlBus_TMS                          12
    #define       bGbl_pinMuxCntlBus_TMS                       3
    #define   MSK32Gbl_pinMuxCntlBus_TMS                          0x00007000
    #define        Gbl_pinMuxCntlBus_TMS_MODE_0                             0x0
    #define        Gbl_pinMuxCntlBus_TMS_MODE_1                             0x1
    #define        Gbl_pinMuxCntlBus_TMS_MODE_2                             0x2
    #define        Gbl_pinMuxCntlBus_TMS_MODE_3                             0x3

    #define     BA_Gbl_pinMuxCntlBus_TDI                       0x8001
    #define     B16Gbl_pinMuxCntlBus_TDI                       0x8000
    #define   LSb32Gbl_pinMuxCntlBus_TDI                          15
    #define   LSb16Gbl_pinMuxCntlBus_TDI                          15
    #define       bGbl_pinMuxCntlBus_TDI                       3
    #define   MSK32Gbl_pinMuxCntlBus_TDI                          0x00038000
    #define        Gbl_pinMuxCntlBus_TDI_MODE_0                             0x0
    #define        Gbl_pinMuxCntlBus_TDI_MODE_1                             0x1
    #define        Gbl_pinMuxCntlBus_TDI_MODE_2                             0x2
    #define        Gbl_pinMuxCntlBus_TDI_MODE_3                             0x3
    #define        Gbl_pinMuxCntlBus_TDI_MODE_4                             0x4

    #define     BA_Gbl_pinMuxCntlBus_TDO                       0x8002
    #define     B16Gbl_pinMuxCntlBus_TDO                       0x8002
    #define   LSb32Gbl_pinMuxCntlBus_TDO                          18
    #define   LSb16Gbl_pinMuxCntlBus_TDO                          2
    #define       bGbl_pinMuxCntlBus_TDO                       3
    #define   MSK32Gbl_pinMuxCntlBus_TDO                          0x001C0000
    #define        Gbl_pinMuxCntlBus_TDO_MODE_0                             0x0
    #define        Gbl_pinMuxCntlBus_TDO_MODE_1                             0x1
    #define        Gbl_pinMuxCntlBus_TDO_MODE_2                             0x2
    #define        Gbl_pinMuxCntlBus_TDO_MODE_3                             0x3

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS0n                 0x8002
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS0n                 0x8002
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS0n                    21
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS0n                    5
    #define       bGbl_pinMuxCntlBus_SPI1_SS0n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS0n                    0x00E00000
    #define        Gbl_pinMuxCntlBus_SPI1_SS0n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS0n_MODE_1                       0x1

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS1n                 0x8003
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS1n                 0x8002
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS1n                    24
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS1n                    8
    #define       bGbl_pinMuxCntlBus_SPI1_SS1n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS1n                    0x07000000
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_4                       0x4

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS2n                 0x8003
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS2n                 0x8002
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS2n                    27
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS2n                    11
    #define       bGbl_pinMuxCntlBus_SPI1_SS2n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS2n                    0x38000000
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_4                       0x4
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_7                       0x7

    #define     RA_Gbl_pinMuxCntlBus1                          0x8004

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS3n                 0x8004
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS3n                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS3n                    0
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS3n                    0
    #define       bGbl_pinMuxCntlBus_SPI1_SS3n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS3n                    0x00000007
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_2                       0x2

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SDO                  0x8004
    #define     B16Gbl_pinMuxCntlBus_SPI1_SDO                  0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SDO                     3
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SDO                     3
    #define       bGbl_pinMuxCntlBus_SPI1_SDO                  3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SDO                     0x00000038
    #define        Gbl_pinMuxCntlBus_SPI1_SDO_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SDO_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SDO_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SDI                  0x8004
    #define     B16Gbl_pinMuxCntlBus_SPI1_SDI                  0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SDI                     6
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SDI                     6
    #define       bGbl_pinMuxCntlBus_SPI1_SDI                  3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SDI                     0x000001C0
    #define        Gbl_pinMuxCntlBus_SPI1_SDI_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SDI_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SDI_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SCLK                 0x8005
    #define     B16Gbl_pinMuxCntlBus_SPI1_SCLK                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SCLK                    9
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SCLK                    9
    #define       bGbl_pinMuxCntlBus_SPI1_SCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SCLK                    0x00000E00
    #define        Gbl_pinMuxCntlBus_SPI1_SCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SCLK_MODE_1                       0x1

    #define     BA_Gbl_pinMuxCntlBus_TW2_SCL                   0x8005
    #define     B16Gbl_pinMuxCntlBus_TW2_SCL                   0x8004
    #define   LSb32Gbl_pinMuxCntlBus_TW2_SCL                      12
    #define   LSb16Gbl_pinMuxCntlBus_TW2_SCL                      12
    #define       bGbl_pinMuxCntlBus_TW2_SCL                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW2_SCL                      0x00007000
    #define        Gbl_pinMuxCntlBus_TW2_SCL_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW2_SCL_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW2_SCL_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW2_SCL_MODE_3                         0x3

    #define     BA_Gbl_pinMuxCntlBus_TW2_SDA                   0x8005
    #define     B16Gbl_pinMuxCntlBus_TW2_SDA                   0x8004
    #define   LSb32Gbl_pinMuxCntlBus_TW2_SDA                      15
    #define   LSb16Gbl_pinMuxCntlBus_TW2_SDA                      15
    #define       bGbl_pinMuxCntlBus_TW2_SDA                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW2_SDA                      0x00038000
    #define        Gbl_pinMuxCntlBus_TW2_SDA_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW2_SDA_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW2_SDA_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW2_SDA_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_TW2_SDA_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SS0n                 0x8006
    #define     B16Gbl_pinMuxCntlBus_SPI2_SS0n                 0x8006
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SS0n                    18
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SS0n                    2
    #define       bGbl_pinMuxCntlBus_SPI2_SS0n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SS0n                    0x001C0000
    #define        Gbl_pinMuxCntlBus_SPI2_SS0n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SS0n_MODE_1                       0x1

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SS1n                 0x8006
    #define     B16Gbl_pinMuxCntlBus_SPI2_SS1n                 0x8006
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SS1n                    21
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SS1n                    5
    #define       bGbl_pinMuxCntlBus_SPI2_SS1n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SS1n                    0x00E00000
    #define        Gbl_pinMuxCntlBus_SPI2_SS1n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SS1n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI2_SS1n_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_SPI2_SS1n_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SS2n                 0x8007
    #define     B16Gbl_pinMuxCntlBus_SPI2_SS2n                 0x8006
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SS2n                    24
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SS2n                    8
    #define       bGbl_pinMuxCntlBus_SPI2_SS2n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SS2n                    0x07000000
    #define        Gbl_pinMuxCntlBus_SPI2_SS2n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SS2n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI2_SS2n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI2_SS2n_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_SPI2_SS2n_MODE_4                       0x4
    #define        Gbl_pinMuxCntlBus_SPI2_SS2n_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SS3n                 0x8007
    #define     B16Gbl_pinMuxCntlBus_SPI2_SS3n                 0x8006
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SS3n                    27
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SS3n                    11
    #define       bGbl_pinMuxCntlBus_SPI2_SS3n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SS3n                    0x38000000
    #define        Gbl_pinMuxCntlBus_SPI2_SS3n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SS3n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI2_SS3n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI2_SS3n_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_SPI2_SS3n_MODE_4                       0x4
    #define        Gbl_pinMuxCntlBus_SPI2_SS3n_MODE_7                       0x7

    #define     RA_Gbl_pinMuxCntlBus2                          0x8008

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SDO                  0x8008
    #define     B16Gbl_pinMuxCntlBus_SPI2_SDO                  0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SDO                     0
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SDO                     0
    #define       bGbl_pinMuxCntlBus_SPI2_SDO                  3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SDO                     0x00000007
    #define        Gbl_pinMuxCntlBus_SPI2_SDO_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SDO_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_SPI2_SDO_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SCLK                 0x8008
    #define     B16Gbl_pinMuxCntlBus_SPI2_SCLK                 0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SCLK                    3
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SCLK                    3
    #define       bGbl_pinMuxCntlBus_SPI2_SCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SCLK                    0x00000038
    #define        Gbl_pinMuxCntlBus_SPI2_SCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SCLK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI2_SCLK_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI2_SDI                  0x8008
    #define     B16Gbl_pinMuxCntlBus_SPI2_SDI                  0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SPI2_SDI                     6
    #define   LSb16Gbl_pinMuxCntlBus_SPI2_SDI                     6
    #define       bGbl_pinMuxCntlBus_SPI2_SDI                  3
    #define   MSK32Gbl_pinMuxCntlBus_SPI2_SDI                     0x000001C0
    #define        Gbl_pinMuxCntlBus_SPI2_SDI_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SPI2_SDI_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_SPI2_SDI_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_TW3_SCL                   0x8009
    #define     B16Gbl_pinMuxCntlBus_TW3_SCL                   0x8008
    #define   LSb32Gbl_pinMuxCntlBus_TW3_SCL                      9
    #define   LSb16Gbl_pinMuxCntlBus_TW3_SCL                      9
    #define       bGbl_pinMuxCntlBus_TW3_SCL                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW3_SCL                      0x00000E00
    #define        Gbl_pinMuxCntlBus_TW3_SCL_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW3_SCL_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW3_SCL_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW3_SCL_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_TW3_SCL_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_TW3_SDA                   0x8009
    #define     B16Gbl_pinMuxCntlBus_TW3_SDA                   0x8008
    #define   LSb32Gbl_pinMuxCntlBus_TW3_SDA                      12
    #define   LSb16Gbl_pinMuxCntlBus_TW3_SDA                      12
    #define       bGbl_pinMuxCntlBus_TW3_SDA                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW3_SDA                      0x00007000
    #define        Gbl_pinMuxCntlBus_TW3_SDA_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW3_SDA_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW3_SDA_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_TW3_SDA_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_TW3_SDA_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_URT1_RXD                  0x8009
    #define     B16Gbl_pinMuxCntlBus_URT1_RXD                  0x8008
    #define   LSb32Gbl_pinMuxCntlBus_URT1_RXD                     15
    #define   LSb16Gbl_pinMuxCntlBus_URT1_RXD                     15
    #define       bGbl_pinMuxCntlBus_URT1_RXD                  3
    #define   MSK32Gbl_pinMuxCntlBus_URT1_RXD                     0x00038000
    #define        Gbl_pinMuxCntlBus_URT1_RXD_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_URT1_RXD_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_URT1_RXD_MODE_3                        0x3
    #define        Gbl_pinMuxCntlBus_URT1_RXD_MODE_4                        0x4
    #define        Gbl_pinMuxCntlBus_URT1_RXD_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_URT1_TXD                  0x800A
    #define     B16Gbl_pinMuxCntlBus_URT1_TXD                  0x800A
    #define   LSb32Gbl_pinMuxCntlBus_URT1_TXD                     18
    #define   LSb16Gbl_pinMuxCntlBus_URT1_TXD                     2
    #define       bGbl_pinMuxCntlBus_URT1_TXD                  3
    #define   MSK32Gbl_pinMuxCntlBus_URT1_TXD                     0x001C0000
    #define        Gbl_pinMuxCntlBus_URT1_TXD_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_URT1_TXD_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_URT1_TXD_MODE_3                        0x3
    #define        Gbl_pinMuxCntlBus_URT1_TXD_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_PWM0                      0x800A
    #define     B16Gbl_pinMuxCntlBus_PWM0                      0x800A
    #define   LSb32Gbl_pinMuxCntlBus_PWM0                         21
    #define   LSb16Gbl_pinMuxCntlBus_PWM0                         5
    #define       bGbl_pinMuxCntlBus_PWM0                      3
    #define   MSK32Gbl_pinMuxCntlBus_PWM0                         0x00E00000
    #define        Gbl_pinMuxCntlBus_PWM0_MODE_0                            0x0
    #define        Gbl_pinMuxCntlBus_PWM0_MODE_1                            0x1
    #define        Gbl_pinMuxCntlBus_PWM0_MODE_2                            0x2
    #define        Gbl_pinMuxCntlBus_PWM0_MODE_7                            0x7

    #define     BA_Gbl_pinMuxCntlBus_PWM1                      0x800B
    #define     B16Gbl_pinMuxCntlBus_PWM1                      0x800A
    #define   LSb32Gbl_pinMuxCntlBus_PWM1                         24
    #define   LSb16Gbl_pinMuxCntlBus_PWM1                         8
    #define       bGbl_pinMuxCntlBus_PWM1                      3
    #define   MSK32Gbl_pinMuxCntlBus_PWM1                         0x07000000
    #define        Gbl_pinMuxCntlBus_PWM1_MODE_0                            0x0
    #define        Gbl_pinMuxCntlBus_PWM1_MODE_1                            0x1
    #define        Gbl_pinMuxCntlBus_PWM1_MODE_7                            0x7

    #define     BA_Gbl_pinMuxCntlBus_PWM2                      0x800B
    #define     B16Gbl_pinMuxCntlBus_PWM2                      0x800A
    #define   LSb32Gbl_pinMuxCntlBus_PWM2                         27
    #define   LSb16Gbl_pinMuxCntlBus_PWM2                         11
    #define       bGbl_pinMuxCntlBus_PWM2                      3
    #define   MSK32Gbl_pinMuxCntlBus_PWM2                         0x38000000
    #define        Gbl_pinMuxCntlBus_PWM2_MODE_0                            0x0
    #define        Gbl_pinMuxCntlBus_PWM2_MODE_1                            0x1
    #define        Gbl_pinMuxCntlBus_PWM2_MODE_2                            0x2
    #define        Gbl_pinMuxCntlBus_PWM2_MODE_7                            0x7

    #define     RA_Gbl_pinMuxCntlBus3                          0x800C

    #define     BA_Gbl_pinMuxCntlBus_PWM3                      0x800C
    #define     B16Gbl_pinMuxCntlBus_PWM3                      0x800C
    #define   LSb32Gbl_pinMuxCntlBus_PWM3                         0
    #define   LSb16Gbl_pinMuxCntlBus_PWM3                         0
    #define       bGbl_pinMuxCntlBus_PWM3                      3
    #define   MSK32Gbl_pinMuxCntlBus_PWM3                         0x00000007
    #define        Gbl_pinMuxCntlBus_PWM3_MODE_0                            0x0
    #define        Gbl_pinMuxCntlBus_PWM3_MODE_1                            0x1
    #define        Gbl_pinMuxCntlBus_PWM3_MODE_3                            0x3
    #define        Gbl_pinMuxCntlBus_PWM3_MODE_7                            0x7

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A0                   0x800C
    #define     B16Gbl_pinMuxCntlBus_GPIO_A0                   0x800C
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A0                      3
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A0                      3
    #define       bGbl_pinMuxCntlBus_GPIO_A0                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A0                      0x00000038
    #define        Gbl_pinMuxCntlBus_GPIO_A0_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_GPIO_A0_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_GPIO_A0_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_GPIO_A0_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A1                   0x800C
    #define     B16Gbl_pinMuxCntlBus_GPIO_A1                   0x800C
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A1                      6
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A1                      6
    #define       bGbl_pinMuxCntlBus_GPIO_A1                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A1                      0x000001C0
    #define        Gbl_pinMuxCntlBus_GPIO_A1_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_GPIO_A1_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_GPIO_A1_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_GPIO_A1_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A2                   0x800D
    #define     B16Gbl_pinMuxCntlBus_GPIO_A2                   0x800C
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A2                      9
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A2                      9
    #define       bGbl_pinMuxCntlBus_GPIO_A2                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A2                      0x00000E00
    #define        Gbl_pinMuxCntlBus_GPIO_A2_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_GPIO_A2_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_GPIO_A2_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_GPIO_A2_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A3                   0x800D
    #define     B16Gbl_pinMuxCntlBus_GPIO_A3                   0x800C
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A3                      12
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A3                      12
    #define       bGbl_pinMuxCntlBus_GPIO_A3                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A3                      0x00007000
    #define        Gbl_pinMuxCntlBus_GPIO_A3_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_GPIO_A3_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_GPIO_A3_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_GPIO_A3_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_USB2_DRV_VBUS             0x800D
    #define     B16Gbl_pinMuxCntlBus_USB2_DRV_VBUS             0x800C
    #define   LSb32Gbl_pinMuxCntlBus_USB2_DRV_VBUS                15
    #define   LSb16Gbl_pinMuxCntlBus_USB2_DRV_VBUS                15
    #define       bGbl_pinMuxCntlBus_USB2_DRV_VBUS             3
    #define   MSK32Gbl_pinMuxCntlBus_USB2_DRV_VBUS                0x00038000
    #define        Gbl_pinMuxCntlBus_USB2_DRV_VBUS_MODE_0                   0x0
    #define        Gbl_pinMuxCntlBus_USB2_DRV_VBUS_MODE_1                   0x1

    #define     BA_Gbl_pinMuxCntlBus_SDIO_CDn                  0x800E
    #define     B16Gbl_pinMuxCntlBus_SDIO_CDn                  0x800E
    #define   LSb32Gbl_pinMuxCntlBus_SDIO_CDn                     18
    #define   LSb16Gbl_pinMuxCntlBus_SDIO_CDn                     2
    #define       bGbl_pinMuxCntlBus_SDIO_CDn                  3
    #define   MSK32Gbl_pinMuxCntlBus_SDIO_CDn                     0x001C0000
    #define        Gbl_pinMuxCntlBus_SDIO_CDn_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SDIO_CDn_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_SDIO_CDn_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_SDIO_CDn_MODE_3                        0x3

    #define     BA_Gbl_pinMuxCntlBus_SDIO_WP                   0x800E
    #define     B16Gbl_pinMuxCntlBus_SDIO_WP                   0x800E
    #define   LSb32Gbl_pinMuxCntlBus_SDIO_WP                      21
    #define   LSb16Gbl_pinMuxCntlBus_SDIO_WP                      5
    #define       bGbl_pinMuxCntlBus_SDIO_WP                   3
    #define   MSK32Gbl_pinMuxCntlBus_SDIO_WP                      0x00E00000
    #define        Gbl_pinMuxCntlBus_SDIO_WP_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_SDIO_WP_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_SDIO_WP_MODE_3                         0x3

    #define     BA_Gbl_pinMuxCntlBus_NFALE                     0x800F
    #define     B16Gbl_pinMuxCntlBus_NFALE                     0x800E
    #define   LSb32Gbl_pinMuxCntlBus_NFALE                        24
    #define   LSb16Gbl_pinMuxCntlBus_NFALE                        8
    #define       bGbl_pinMuxCntlBus_NFALE                     3
    #define   MSK32Gbl_pinMuxCntlBus_NFALE                        0x07000000
    #define        Gbl_pinMuxCntlBus_NFALE_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_NFALE_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_NFLCS                     0x800F
    #define     B16Gbl_pinMuxCntlBus_NFLCS                     0x800E
    #define   LSb32Gbl_pinMuxCntlBus_NFLCS                        27
    #define   LSb16Gbl_pinMuxCntlBus_NFLCS                        11
    #define       bGbl_pinMuxCntlBus_NFLCS                     3
    #define   MSK32Gbl_pinMuxCntlBus_NFLCS                        0x38000000
    #define        Gbl_pinMuxCntlBus_NFLCS_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_NFLCS_MODE_1                           0x1

    #define     RA_Gbl_pinMuxCntlBus4                          0x8010

    #define     BA_Gbl_pinMuxCntlBus_RGMII_CLK_OUT             0x8010
    #define     B16Gbl_pinMuxCntlBus_RGMII_CLK_OUT             0x8010
    #define   LSb32Gbl_pinMuxCntlBus_RGMII_CLK_OUT                0
    #define   LSb16Gbl_pinMuxCntlBus_RGMII_CLK_OUT                0
    #define       bGbl_pinMuxCntlBus_RGMII_CLK_OUT             3
    #define   MSK32Gbl_pinMuxCntlBus_RGMII_CLK_OUT                0x00000007
    #define        Gbl_pinMuxCntlBus_RGMII_CLK_OUT_MODE_0                   0x0
    #define        Gbl_pinMuxCntlBus_RGMII_CLK_OUT_MODE_1                   0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIITXC                  0x8010
    #define     B16Gbl_pinMuxCntlBus_RGMIITXC                  0x8010
    #define   LSb32Gbl_pinMuxCntlBus_RGMIITXC                     3
    #define   LSb16Gbl_pinMuxCntlBus_RGMIITXC                     3
    #define       bGbl_pinMuxCntlBus_RGMIITXC                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIITXC                     0x00000038
    #define        Gbl_pinMuxCntlBus_RGMIITXC_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIITXC_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIITD0                  0x8010
    #define     B16Gbl_pinMuxCntlBus_RGMIITD0                  0x8010
    #define   LSb32Gbl_pinMuxCntlBus_RGMIITD0                     6
    #define   LSb16Gbl_pinMuxCntlBus_RGMIITD0                     6
    #define       bGbl_pinMuxCntlBus_RGMIITD0                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIITD0                     0x000001C0
    #define        Gbl_pinMuxCntlBus_RGMIITD0_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIITD0_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIITD1                  0x8011
    #define     B16Gbl_pinMuxCntlBus_RGMIITD1                  0x8010
    #define   LSb32Gbl_pinMuxCntlBus_RGMIITD1                     9
    #define   LSb16Gbl_pinMuxCntlBus_RGMIITD1                     9
    #define       bGbl_pinMuxCntlBus_RGMIITD1                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIITD1                     0x00000E00
    #define        Gbl_pinMuxCntlBus_RGMIITD1_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIITD1_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIITD2                  0x8011
    #define     B16Gbl_pinMuxCntlBus_RGMIITD2                  0x8010
    #define   LSb32Gbl_pinMuxCntlBus_RGMIITD2                     12
    #define   LSb16Gbl_pinMuxCntlBus_RGMIITD2                     12
    #define       bGbl_pinMuxCntlBus_RGMIITD2                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIITD2                     0x00007000
    #define        Gbl_pinMuxCntlBus_RGMIITD2_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIITD2_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIITD3                  0x8011
    #define     B16Gbl_pinMuxCntlBus_RGMIITD3                  0x8010
    #define   LSb32Gbl_pinMuxCntlBus_RGMIITD3                     15
    #define   LSb16Gbl_pinMuxCntlBus_RGMIITD3                     15
    #define       bGbl_pinMuxCntlBus_RGMIITD3                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIITD3                     0x00038000
    #define        Gbl_pinMuxCntlBus_RGMIITD3_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIITD3_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIITXCTL                0x8012
    #define     B16Gbl_pinMuxCntlBus_RGMIITXCTL                0x8012
    #define   LSb32Gbl_pinMuxCntlBus_RGMIITXCTL                   18
    #define   LSb16Gbl_pinMuxCntlBus_RGMIITXCTL                   2
    #define       bGbl_pinMuxCntlBus_RGMIITXCTL                3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIITXCTL                   0x001C0000
    #define        Gbl_pinMuxCntlBus_RGMIITXCTL_MODE_0                      0x0
    #define        Gbl_pinMuxCntlBus_RGMIITXCTL_MODE_1                      0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIIRXC                  0x8012
    #define     B16Gbl_pinMuxCntlBus_RGMIIRXC                  0x8012
    #define   LSb32Gbl_pinMuxCntlBus_RGMIIRXC                     21
    #define   LSb16Gbl_pinMuxCntlBus_RGMIIRXC                     5
    #define       bGbl_pinMuxCntlBus_RGMIIRXC                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIIRXC                     0x00E00000
    #define        Gbl_pinMuxCntlBus_RGMIIRXC_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIIRXC_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIIRD0                  0x8013
    #define     B16Gbl_pinMuxCntlBus_RGMIIRD0                  0x8012
    #define   LSb32Gbl_pinMuxCntlBus_RGMIIRD0                     24
    #define   LSb16Gbl_pinMuxCntlBus_RGMIIRD0                     8
    #define       bGbl_pinMuxCntlBus_RGMIIRD0                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIIRD0                     0x07000000
    #define        Gbl_pinMuxCntlBus_RGMIIRD0_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIIRD0_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIIRD1                  0x8013
    #define     B16Gbl_pinMuxCntlBus_RGMIIRD1                  0x8012
    #define   LSb32Gbl_pinMuxCntlBus_RGMIIRD1                     27
    #define   LSb16Gbl_pinMuxCntlBus_RGMIIRD1                     11
    #define       bGbl_pinMuxCntlBus_RGMIIRD1                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIIRD1                     0x38000000
    #define        Gbl_pinMuxCntlBus_RGMIIRD1_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIIRD1_MODE_1                        0x1

    #define     RA_Gbl_pinMuxCntlBus5                          0x8014

    #define     BA_Gbl_pinMuxCntlBus_RGMIIRD2                  0x8014
    #define     B16Gbl_pinMuxCntlBus_RGMIIRD2                  0x8014
    #define   LSb32Gbl_pinMuxCntlBus_RGMIIRD2                     0
    #define   LSb16Gbl_pinMuxCntlBus_RGMIIRD2                     0
    #define       bGbl_pinMuxCntlBus_RGMIIRD2                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIIRD2                     0x00000007
    #define        Gbl_pinMuxCntlBus_RGMIIRD2_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIIRD2_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIIRD3                  0x8014
    #define     B16Gbl_pinMuxCntlBus_RGMIIRD3                  0x8014
    #define   LSb32Gbl_pinMuxCntlBus_RGMIIRD3                     3
    #define   LSb16Gbl_pinMuxCntlBus_RGMIIRD3                     3
    #define       bGbl_pinMuxCntlBus_RGMIIRD3                  3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIIRD3                     0x00000038
    #define        Gbl_pinMuxCntlBus_RGMIIRD3_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_RGMIIRD3_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_RGMIIRXCTL                0x8014
    #define     B16Gbl_pinMuxCntlBus_RGMIIRXCTL                0x8014
    #define   LSb32Gbl_pinMuxCntlBus_RGMIIRXCTL                   6
    #define   LSb16Gbl_pinMuxCntlBus_RGMIIRXCTL                   6
    #define       bGbl_pinMuxCntlBus_RGMIIRXCTL                3
    #define   MSK32Gbl_pinMuxCntlBus_RGMIIRXCTL                   0x000001C0
    #define        Gbl_pinMuxCntlBus_RGMIIRXCTL_MODE_0                      0x0
    #define        Gbl_pinMuxCntlBus_RGMIIRXCTL_MODE_1                      0x1

    #define     BA_Gbl_pinMuxCntlBus_I2S1_DO                   0x8015
    #define     B16Gbl_pinMuxCntlBus_I2S1_DO                   0x8014
    #define   LSb32Gbl_pinMuxCntlBus_I2S1_DO                      9
    #define   LSb16Gbl_pinMuxCntlBus_I2S1_DO                      9
    #define       bGbl_pinMuxCntlBus_I2S1_DO                   3
    #define   MSK32Gbl_pinMuxCntlBus_I2S1_DO                      0x00000E00
    #define        Gbl_pinMuxCntlBus_I2S1_DO_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_I2S1_DO_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_I2S1_DO_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_I2S1_DO_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S1_DI                   0x8015
    #define     B16Gbl_pinMuxCntlBus_I2S1_DI                   0x8014
    #define   LSb32Gbl_pinMuxCntlBus_I2S1_DI                      12
    #define   LSb16Gbl_pinMuxCntlBus_I2S1_DI                      12
    #define       bGbl_pinMuxCntlBus_I2S1_DI                   3
    #define   MSK32Gbl_pinMuxCntlBus_I2S1_DI                      0x00007000
    #define        Gbl_pinMuxCntlBus_I2S1_DI_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_I2S1_DI_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_I2S1_DI_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_I2S1_DI_MODE_4                         0x4
    #define        Gbl_pinMuxCntlBus_I2S1_DI_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S1_LRCK                 0x8015
    #define     B16Gbl_pinMuxCntlBus_I2S1_LRCK                 0x8014
    #define   LSb32Gbl_pinMuxCntlBus_I2S1_LRCK                    15
    #define   LSb16Gbl_pinMuxCntlBus_I2S1_LRCK                    15
    #define       bGbl_pinMuxCntlBus_I2S1_LRCK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S1_LRCK                    0x00038000
    #define        Gbl_pinMuxCntlBus_I2S1_LRCK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S1_LRCK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_I2S1_LRCK_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_I2S1_LRCK_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S1_BCLK                 0x8016
    #define     B16Gbl_pinMuxCntlBus_I2S1_BCLK                 0x8016
    #define   LSb32Gbl_pinMuxCntlBus_I2S1_BCLK                    18
    #define   LSb16Gbl_pinMuxCntlBus_I2S1_BCLK                    2
    #define       bGbl_pinMuxCntlBus_I2S1_BCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S1_BCLK                    0x001C0000
    #define        Gbl_pinMuxCntlBus_I2S1_BCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S1_BCLK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_I2S1_BCLK_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_I2S1_BCLK_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S1_MCLK                 0x8016
    #define     B16Gbl_pinMuxCntlBus_I2S1_MCLK                 0x8016
    #define   LSb32Gbl_pinMuxCntlBus_I2S1_MCLK                    21
    #define   LSb16Gbl_pinMuxCntlBus_I2S1_MCLK                    5
    #define       bGbl_pinMuxCntlBus_I2S1_MCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S1_MCLK                    0x00E00000
    #define        Gbl_pinMuxCntlBus_I2S1_MCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S1_MCLK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_I2S1_MCLK_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_I2S1_MCLK_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S2_LRCK                 0x8017
    #define     B16Gbl_pinMuxCntlBus_I2S2_LRCK                 0x8016
    #define   LSb32Gbl_pinMuxCntlBus_I2S2_LRCK                    24
    #define   LSb16Gbl_pinMuxCntlBus_I2S2_LRCK                    8
    #define       bGbl_pinMuxCntlBus_I2S2_LRCK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S2_LRCK                    0x07000000
    #define        Gbl_pinMuxCntlBus_I2S2_LRCK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S2_LRCK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_I2S2_LRCK_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_I2S2_LRCK_MODE_3                       0x3

    #define     BA_Gbl_pinMuxCntlBus_I2S2_BCLK                 0x8017
    #define     B16Gbl_pinMuxCntlBus_I2S2_BCLK                 0x8016
    #define   LSb32Gbl_pinMuxCntlBus_I2S2_BCLK                    27
    #define   LSb16Gbl_pinMuxCntlBus_I2S2_BCLK                    11
    #define       bGbl_pinMuxCntlBus_I2S2_BCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S2_BCLK                    0x38000000
    #define        Gbl_pinMuxCntlBus_I2S2_BCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S2_BCLK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_I2S2_BCLK_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_I2S2_BCLK_MODE_3                       0x3

    #define     RA_Gbl_pinMuxCntlBus6                          0x8018

    #define     BA_Gbl_pinMuxCntlBus_I2S2_DO                   0x8018
    #define     B16Gbl_pinMuxCntlBus_I2S2_DO                   0x8018
    #define   LSb32Gbl_pinMuxCntlBus_I2S2_DO                      0
    #define   LSb16Gbl_pinMuxCntlBus_I2S2_DO                      0
    #define       bGbl_pinMuxCntlBus_I2S2_DO                   3
    #define   MSK32Gbl_pinMuxCntlBus_I2S2_DO                      0x00000007
    #define        Gbl_pinMuxCntlBus_I2S2_DO_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_I2S2_DO_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_I2S2_DO_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_I2S2_DO_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S2_DI                   0x8018
    #define     B16Gbl_pinMuxCntlBus_I2S2_DI                   0x8018
    #define   LSb32Gbl_pinMuxCntlBus_I2S2_DI                      3
    #define   LSb16Gbl_pinMuxCntlBus_I2S2_DI                      3
    #define       bGbl_pinMuxCntlBus_I2S2_DI                   3
    #define   MSK32Gbl_pinMuxCntlBus_I2S2_DI                      0x00000038
    #define        Gbl_pinMuxCntlBus_I2S2_DI_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_I2S2_DI_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_I2S2_DI_MODE_3                         0x3
    #define        Gbl_pinMuxCntlBus_I2S2_DI_MODE_4                         0x4
    #define        Gbl_pinMuxCntlBus_I2S2_DI_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_PDM_CLKIO                 0x8018
    #define     B16Gbl_pinMuxCntlBus_PDM_CLKIO                 0x8018
    #define   LSb32Gbl_pinMuxCntlBus_PDM_CLKIO                    6
    #define   LSb16Gbl_pinMuxCntlBus_PDM_CLKIO                    6
    #define       bGbl_pinMuxCntlBus_PDM_CLKIO                 3
    #define   MSK32Gbl_pinMuxCntlBus_PDM_CLKIO                    0x000001C0
    #define        Gbl_pinMuxCntlBus_PDM_CLKIO_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_PDM_CLKIO_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_PDM_CLKIO_MODE_2                       0x2

    #define     BA_Gbl_pinMuxCntlBus_PDM_DI0                   0x8019
    #define     B16Gbl_pinMuxCntlBus_PDM_DI0                   0x8018
    #define   LSb32Gbl_pinMuxCntlBus_PDM_DI0                      9
    #define   LSb16Gbl_pinMuxCntlBus_PDM_DI0                      9
    #define       bGbl_pinMuxCntlBus_PDM_DI0                   3
    #define   MSK32Gbl_pinMuxCntlBus_PDM_DI0                      0x00000E00
    #define        Gbl_pinMuxCntlBus_PDM_DI0_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_PDM_DI0_MODE_1                         0x1

    #define     BA_Gbl_pinMuxCntlBus_PDM_DI1                   0x8019
    #define     B16Gbl_pinMuxCntlBus_PDM_DI1                   0x8018
    #define   LSb32Gbl_pinMuxCntlBus_PDM_DI1                      12
    #define   LSb16Gbl_pinMuxCntlBus_PDM_DI1                      12
    #define       bGbl_pinMuxCntlBus_PDM_DI1                   3
    #define   MSK32Gbl_pinMuxCntlBus_PDM_DI1                      0x00007000
    #define        Gbl_pinMuxCntlBus_PDM_DI1_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_PDM_DI1_MODE_1                         0x1

    #define     BA_Gbl_pinMuxCntlBus_I2S3_DO                   0x8019
    #define     B16Gbl_pinMuxCntlBus_I2S3_DO                   0x8018
    #define   LSb32Gbl_pinMuxCntlBus_I2S3_DO                      15
    #define   LSb16Gbl_pinMuxCntlBus_I2S3_DO                      15
    #define       bGbl_pinMuxCntlBus_I2S3_DO                   3
    #define   MSK32Gbl_pinMuxCntlBus_I2S3_DO                      0x00038000
    #define        Gbl_pinMuxCntlBus_I2S3_DO_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_I2S3_DO_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_I2S3_DO_MODE_4                         0x4
    #define        Gbl_pinMuxCntlBus_I2S3_DO_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_I2S3_LRCK                 0x801A
    #define     B16Gbl_pinMuxCntlBus_I2S3_LRCK                 0x801A
    #define   LSb32Gbl_pinMuxCntlBus_I2S3_LRCK                    18
    #define   LSb16Gbl_pinMuxCntlBus_I2S3_LRCK                    2
    #define       bGbl_pinMuxCntlBus_I2S3_LRCK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S3_LRCK                    0x001C0000
    #define        Gbl_pinMuxCntlBus_I2S3_LRCK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S3_LRCK_MODE_1                       0x1

    #define     BA_Gbl_pinMuxCntlBus_I2S3_BCLK                 0x801A
    #define     B16Gbl_pinMuxCntlBus_I2S3_BCLK                 0x801A
    #define   LSb32Gbl_pinMuxCntlBus_I2S3_BCLK                    21
    #define   LSb16Gbl_pinMuxCntlBus_I2S3_BCLK                    5
    #define       bGbl_pinMuxCntlBus_I2S3_BCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_I2S3_BCLK                    0x00E00000
    #define        Gbl_pinMuxCntlBus_I2S3_BCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_I2S3_BCLK_MODE_1                       0x1

    #define     BA_Gbl_pinMuxCntlBus_I2S3_DI                   0x801B
    #define     B16Gbl_pinMuxCntlBus_I2S3_DI                   0x801A
    #define   LSb32Gbl_pinMuxCntlBus_I2S3_DI                      24
    #define   LSb16Gbl_pinMuxCntlBus_I2S3_DI                      8
    #define       bGbl_pinMuxCntlBus_I2S3_DI                   3
    #define   MSK32Gbl_pinMuxCntlBus_I2S3_DI                      0x07000000
    #define        Gbl_pinMuxCntlBus_I2S3_DI_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_I2S3_DI_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_I2S3_DI_MODE_4                         0x4

    #define     BA_Gbl_pinMuxCntlBus_LCDD0                     0x801B
    #define     B16Gbl_pinMuxCntlBus_LCDD0                     0x801A
    #define   LSb32Gbl_pinMuxCntlBus_LCDD0                        27
    #define   LSb16Gbl_pinMuxCntlBus_LCDD0                        11
    #define       bGbl_pinMuxCntlBus_LCDD0                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD0                        0x38000000
    #define        Gbl_pinMuxCntlBus_LCDD0_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD0_MODE_1                           0x1
    #define        Gbl_pinMuxCntlBus_LCDD0_MODE_2                           0x2
    #define        Gbl_pinMuxCntlBus_LCDD0_MODE_3                           0x3

    #define     RA_Gbl_pinMuxCntlBus7                          0x801C

    #define     BA_Gbl_pinMuxCntlBus_LCDD1                     0x801C
    #define     B16Gbl_pinMuxCntlBus_LCDD1                     0x801C
    #define   LSb32Gbl_pinMuxCntlBus_LCDD1                        0
    #define   LSb16Gbl_pinMuxCntlBus_LCDD1                        0
    #define       bGbl_pinMuxCntlBus_LCDD1                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD1                        0x00000007
    #define        Gbl_pinMuxCntlBus_LCDD1_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD1_MODE_1                           0x1
    #define        Gbl_pinMuxCntlBus_LCDD1_MODE_2                           0x2
    #define        Gbl_pinMuxCntlBus_LCDD1_MODE_3                           0x3

    #define     BA_Gbl_pinMuxCntlBus_LCDD2                     0x801C
    #define     B16Gbl_pinMuxCntlBus_LCDD2                     0x801C
    #define   LSb32Gbl_pinMuxCntlBus_LCDD2                        3
    #define   LSb16Gbl_pinMuxCntlBus_LCDD2                        3
    #define       bGbl_pinMuxCntlBus_LCDD2                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD2                        0x00000038
    #define        Gbl_pinMuxCntlBus_LCDD2_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD2_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD3                     0x801C
    #define     B16Gbl_pinMuxCntlBus_LCDD3                     0x801C
    #define   LSb32Gbl_pinMuxCntlBus_LCDD3                        6
    #define   LSb16Gbl_pinMuxCntlBus_LCDD3                        6
    #define       bGbl_pinMuxCntlBus_LCDD3                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD3                        0x000001C0
    #define        Gbl_pinMuxCntlBus_LCDD3_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD3_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD4                     0x801D
    #define     B16Gbl_pinMuxCntlBus_LCDD4                     0x801C
    #define   LSb32Gbl_pinMuxCntlBus_LCDD4                        9
    #define   LSb16Gbl_pinMuxCntlBus_LCDD4                        9
    #define       bGbl_pinMuxCntlBus_LCDD4                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD4                        0x00000E00
    #define        Gbl_pinMuxCntlBus_LCDD4_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD4_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD5                     0x801D
    #define     B16Gbl_pinMuxCntlBus_LCDD5                     0x801C
    #define   LSb32Gbl_pinMuxCntlBus_LCDD5                        12
    #define   LSb16Gbl_pinMuxCntlBus_LCDD5                        12
    #define       bGbl_pinMuxCntlBus_LCDD5                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD5                        0x00007000
    #define        Gbl_pinMuxCntlBus_LCDD5_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD5_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD6                     0x801D
    #define     B16Gbl_pinMuxCntlBus_LCDD6                     0x801C
    #define   LSb32Gbl_pinMuxCntlBus_LCDD6                        15
    #define   LSb16Gbl_pinMuxCntlBus_LCDD6                        15
    #define       bGbl_pinMuxCntlBus_LCDD6                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD6                        0x00038000
    #define        Gbl_pinMuxCntlBus_LCDD6_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD6_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD7                     0x801E
    #define     B16Gbl_pinMuxCntlBus_LCDD7                     0x801E
    #define   LSb32Gbl_pinMuxCntlBus_LCDD7                        18
    #define   LSb16Gbl_pinMuxCntlBus_LCDD7                        2
    #define       bGbl_pinMuxCntlBus_LCDD7                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD7                        0x001C0000
    #define        Gbl_pinMuxCntlBus_LCDD7_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD7_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD8                     0x801E
    #define     B16Gbl_pinMuxCntlBus_LCDD8                     0x801E
    #define   LSb32Gbl_pinMuxCntlBus_LCDD8                        21
    #define   LSb16Gbl_pinMuxCntlBus_LCDD8                        5
    #define       bGbl_pinMuxCntlBus_LCDD8                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD8                        0x00E00000
    #define        Gbl_pinMuxCntlBus_LCDD8_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD8_MODE_1                           0x1
    #define        Gbl_pinMuxCntlBus_LCDD8_MODE_2                           0x2
    #define        Gbl_pinMuxCntlBus_LCDD8_MODE_3                           0x3

    #define     BA_Gbl_pinMuxCntlBus_LCDD9                     0x801F
    #define     B16Gbl_pinMuxCntlBus_LCDD9                     0x801E
    #define   LSb32Gbl_pinMuxCntlBus_LCDD9                        24
    #define   LSb16Gbl_pinMuxCntlBus_LCDD9                        8
    #define       bGbl_pinMuxCntlBus_LCDD9                     3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD9                        0x07000000
    #define        Gbl_pinMuxCntlBus_LCDD9_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LCDD9_MODE_1                           0x1
    #define        Gbl_pinMuxCntlBus_LCDD9_MODE_2                           0x2
    #define        Gbl_pinMuxCntlBus_LCDD9_MODE_3                           0x3

    #define     BA_Gbl_pinMuxCntlBus_LCDD10                    0x801F
    #define     B16Gbl_pinMuxCntlBus_LCDD10                    0x801E
    #define   LSb32Gbl_pinMuxCntlBus_LCDD10                       27
    #define   LSb16Gbl_pinMuxCntlBus_LCDD10                       11
    #define       bGbl_pinMuxCntlBus_LCDD10                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD10                       0x38000000
    #define        Gbl_pinMuxCntlBus_LCDD10_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD10_MODE_1                          0x1

    #define     RA_Gbl_pinMuxCntlBus8                          0x8020

    #define     BA_Gbl_pinMuxCntlBus_LCDD11                    0x8020
    #define     B16Gbl_pinMuxCntlBus_LCDD11                    0x8020
    #define   LSb32Gbl_pinMuxCntlBus_LCDD11                       0
    #define   LSb16Gbl_pinMuxCntlBus_LCDD11                       0
    #define       bGbl_pinMuxCntlBus_LCDD11                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD11                       0x00000007
    #define        Gbl_pinMuxCntlBus_LCDD11_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD11_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD12                    0x8020
    #define     B16Gbl_pinMuxCntlBus_LCDD12                    0x8020
    #define   LSb32Gbl_pinMuxCntlBus_LCDD12                       3
    #define   LSb16Gbl_pinMuxCntlBus_LCDD12                       3
    #define       bGbl_pinMuxCntlBus_LCDD12                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD12                       0x00000038
    #define        Gbl_pinMuxCntlBus_LCDD12_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD12_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD13                    0x8020
    #define     B16Gbl_pinMuxCntlBus_LCDD13                    0x8020
    #define   LSb32Gbl_pinMuxCntlBus_LCDD13                       6
    #define   LSb16Gbl_pinMuxCntlBus_LCDD13                       6
    #define       bGbl_pinMuxCntlBus_LCDD13                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD13                       0x000001C0
    #define        Gbl_pinMuxCntlBus_LCDD13_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD13_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD14                    0x8021
    #define     B16Gbl_pinMuxCntlBus_LCDD14                    0x8020
    #define   LSb32Gbl_pinMuxCntlBus_LCDD14                       9
    #define   LSb16Gbl_pinMuxCntlBus_LCDD14                       9
    #define       bGbl_pinMuxCntlBus_LCDD14                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD14                       0x00000E00
    #define        Gbl_pinMuxCntlBus_LCDD14_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD14_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD15                    0x8021
    #define     B16Gbl_pinMuxCntlBus_LCDD15                    0x8020
    #define   LSb32Gbl_pinMuxCntlBus_LCDD15                       12
    #define   LSb16Gbl_pinMuxCntlBus_LCDD15                       12
    #define       bGbl_pinMuxCntlBus_LCDD15                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD15                       0x00007000
    #define        Gbl_pinMuxCntlBus_LCDD15_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD15_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD16                    0x8021
    #define     B16Gbl_pinMuxCntlBus_LCDD16                    0x8020
    #define   LSb32Gbl_pinMuxCntlBus_LCDD16                       15
    #define   LSb16Gbl_pinMuxCntlBus_LCDD16                       15
    #define       bGbl_pinMuxCntlBus_LCDD16                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD16                       0x00038000
    #define        Gbl_pinMuxCntlBus_LCDD16_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD16_MODE_1                          0x1
    #define        Gbl_pinMuxCntlBus_LCDD16_MODE_2                          0x2
    #define        Gbl_pinMuxCntlBus_LCDD16_MODE_3                          0x3

    #define     BA_Gbl_pinMuxCntlBus_LCDD17                    0x8022
    #define     B16Gbl_pinMuxCntlBus_LCDD17                    0x8022
    #define   LSb32Gbl_pinMuxCntlBus_LCDD17                       18
    #define   LSb16Gbl_pinMuxCntlBus_LCDD17                       2
    #define       bGbl_pinMuxCntlBus_LCDD17                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD17                       0x001C0000
    #define        Gbl_pinMuxCntlBus_LCDD17_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD17_MODE_1                          0x1
    #define        Gbl_pinMuxCntlBus_LCDD17_MODE_2                          0x2
    #define        Gbl_pinMuxCntlBus_LCDD17_MODE_3                          0x3

    #define     BA_Gbl_pinMuxCntlBus_LCDD18                    0x8022
    #define     B16Gbl_pinMuxCntlBus_LCDD18                    0x8022
    #define   LSb32Gbl_pinMuxCntlBus_LCDD18                       21
    #define   LSb16Gbl_pinMuxCntlBus_LCDD18                       5
    #define       bGbl_pinMuxCntlBus_LCDD18                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD18                       0x00E00000
    #define        Gbl_pinMuxCntlBus_LCDD18_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD18_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD19                    0x8023
    #define     B16Gbl_pinMuxCntlBus_LCDD19                    0x8022
    #define   LSb32Gbl_pinMuxCntlBus_LCDD19                       24
    #define   LSb16Gbl_pinMuxCntlBus_LCDD19                       8
    #define       bGbl_pinMuxCntlBus_LCDD19                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD19                       0x07000000
    #define        Gbl_pinMuxCntlBus_LCDD19_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD19_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD20                    0x8023
    #define     B16Gbl_pinMuxCntlBus_LCDD20                    0x8022
    #define   LSb32Gbl_pinMuxCntlBus_LCDD20                       27
    #define   LSb16Gbl_pinMuxCntlBus_LCDD20                       11
    #define       bGbl_pinMuxCntlBus_LCDD20                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD20                       0x38000000
    #define        Gbl_pinMuxCntlBus_LCDD20_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD20_MODE_1                          0x1

    #define     RA_Gbl_pinMuxCntlBus9                          0x8024

    #define     BA_Gbl_pinMuxCntlBus_LCDD21                    0x8024
    #define     B16Gbl_pinMuxCntlBus_LCDD21                    0x8024
    #define   LSb32Gbl_pinMuxCntlBus_LCDD21                       0
    #define   LSb16Gbl_pinMuxCntlBus_LCDD21                       0
    #define       bGbl_pinMuxCntlBus_LCDD21                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD21                       0x00000007
    #define        Gbl_pinMuxCntlBus_LCDD21_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD21_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD22                    0x8024
    #define     B16Gbl_pinMuxCntlBus_LCDD22                    0x8024
    #define   LSb32Gbl_pinMuxCntlBus_LCDD22                       3
    #define   LSb16Gbl_pinMuxCntlBus_LCDD22                       3
    #define       bGbl_pinMuxCntlBus_LCDD22                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD22                       0x00000038
    #define        Gbl_pinMuxCntlBus_LCDD22_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD22_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDD23                    0x8024
    #define     B16Gbl_pinMuxCntlBus_LCDD23                    0x8024
    #define   LSb32Gbl_pinMuxCntlBus_LCDD23                       6
    #define   LSb16Gbl_pinMuxCntlBus_LCDD23                       6
    #define       bGbl_pinMuxCntlBus_LCDD23                    3
    #define   MSK32Gbl_pinMuxCntlBus_LCDD23                       0x000001C0
    #define        Gbl_pinMuxCntlBus_LCDD23_MODE_0                          0x0
    #define        Gbl_pinMuxCntlBus_LCDD23_MODE_1                          0x1

    #define     BA_Gbl_pinMuxCntlBus_LPCLK                     0x8025
    #define     B16Gbl_pinMuxCntlBus_LPCLK                     0x8024
    #define   LSb32Gbl_pinMuxCntlBus_LPCLK                        9
    #define   LSb16Gbl_pinMuxCntlBus_LPCLK                        9
    #define       bGbl_pinMuxCntlBus_LPCLK                     3
    #define   MSK32Gbl_pinMuxCntlBus_LPCLK                        0x00000E00
    #define        Gbl_pinMuxCntlBus_LPCLK_MODE_0                           0x0
    #define        Gbl_pinMuxCntlBus_LPCLK_MODE_1                           0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDGPIO0                  0x8025
    #define     B16Gbl_pinMuxCntlBus_LCDGPIO0                  0x8024
    #define   LSb32Gbl_pinMuxCntlBus_LCDGPIO0                     12
    #define   LSb16Gbl_pinMuxCntlBus_LCDGPIO0                     12
    #define       bGbl_pinMuxCntlBus_LCDGPIO0                  3
    #define   MSK32Gbl_pinMuxCntlBus_LCDGPIO0                     0x00007000
    #define        Gbl_pinMuxCntlBus_LCDGPIO0_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_LCDGPIO0_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDGPIO1                  0x8025
    #define     B16Gbl_pinMuxCntlBus_LCDGPIO1                  0x8024
    #define   LSb32Gbl_pinMuxCntlBus_LCDGPIO1                     15
    #define   LSb16Gbl_pinMuxCntlBus_LCDGPIO1                     15
    #define       bGbl_pinMuxCntlBus_LCDGPIO1                  3
    #define   MSK32Gbl_pinMuxCntlBus_LCDGPIO1                     0x00038000
    #define        Gbl_pinMuxCntlBus_LCDGPIO1_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_LCDGPIO1_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDGPIO2                  0x8026
    #define     B16Gbl_pinMuxCntlBus_LCDGPIO2                  0x8026
    #define   LSb32Gbl_pinMuxCntlBus_LCDGPIO2                     18
    #define   LSb16Gbl_pinMuxCntlBus_LCDGPIO2                     2
    #define       bGbl_pinMuxCntlBus_LCDGPIO2                  3
    #define   MSK32Gbl_pinMuxCntlBus_LCDGPIO2                     0x001C0000
    #define        Gbl_pinMuxCntlBus_LCDGPIO2_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_LCDGPIO2_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_LCDGPIO3                  0x8026
    #define     B16Gbl_pinMuxCntlBus_LCDGPIO3                  0x8026
    #define   LSb32Gbl_pinMuxCntlBus_LCDGPIO3                     21
    #define   LSb16Gbl_pinMuxCntlBus_LCDGPIO3                     5
    #define       bGbl_pinMuxCntlBus_LCDGPIO3                  3
    #define   MSK32Gbl_pinMuxCntlBus_LCDGPIO3                     0x00E00000
    #define        Gbl_pinMuxCntlBus_LCDGPIO3_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_LCDGPIO3_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_LCDGPIO3_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_LCDGPIO3_MODE_3                        0x3

    #define     BA_Gbl_pinMuxCntlBus_LCDGPIO4                  0x8027
    #define     B16Gbl_pinMuxCntlBus_LCDGPIO4                  0x8026
    #define   LSb32Gbl_pinMuxCntlBus_LCDGPIO4                     24
    #define   LSb16Gbl_pinMuxCntlBus_LCDGPIO4                     8
    #define       bGbl_pinMuxCntlBus_LCDGPIO4                  3
    #define   MSK32Gbl_pinMuxCntlBus_LCDGPIO4                     0x07000000
    #define        Gbl_pinMuxCntlBus_LCDGPIO4_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_LCDGPIO4_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_LCDGPIO4_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_LCDGPIO4_MODE_3                        0x3
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW0_SCLCntl                             0x8800

    #define     BA_Gbl_TW0_SCLCntl_DS0                         0x8800
    #define     B16Gbl_TW0_SCLCntl_DS0                         0x8800
    #define   LSb32Gbl_TW0_SCLCntl_DS0                            0
    #define   LSb16Gbl_TW0_SCLCntl_DS0                            0
    #define       bGbl_TW0_SCLCntl_DS0                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS0                            0x00000001

    #define     BA_Gbl_TW0_SCLCntl_DS1                         0x8800
    #define     B16Gbl_TW0_SCLCntl_DS1                         0x8800
    #define   LSb32Gbl_TW0_SCLCntl_DS1                            1
    #define   LSb16Gbl_TW0_SCLCntl_DS1                            1
    #define       bGbl_TW0_SCLCntl_DS1                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS1                            0x00000002

    #define     BA_Gbl_TW0_SCLCntl_DS2                         0x8800
    #define     B16Gbl_TW0_SCLCntl_DS2                         0x8800
    #define   LSb32Gbl_TW0_SCLCntl_DS2                            2
    #define   LSb16Gbl_TW0_SCLCntl_DS2                            2
    #define       bGbl_TW0_SCLCntl_DS2                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS2                            0x00000004

    #define     BA_Gbl_TW0_SCLCntl_DS3                         0x8800
    #define     B16Gbl_TW0_SCLCntl_DS3                         0x8800
    #define   LSb32Gbl_TW0_SCLCntl_DS3                            3
    #define   LSb16Gbl_TW0_SCLCntl_DS3                            3
    #define       bGbl_TW0_SCLCntl_DS3                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS3                            0x00000008

    #define     BA_Gbl_TW0_SCLCntl_IE                          0x8800
    #define     B16Gbl_TW0_SCLCntl_IE                          0x8800
    #define   LSb32Gbl_TW0_SCLCntl_IE                             4
    #define   LSb16Gbl_TW0_SCLCntl_IE                             4
    #define       bGbl_TW0_SCLCntl_IE                          1
    #define   MSK32Gbl_TW0_SCLCntl_IE                             0x00000010

    #define     BA_Gbl_TW0_SCLCntl_PE                          0x8800
    #define     B16Gbl_TW0_SCLCntl_PE                          0x8800
    #define   LSb32Gbl_TW0_SCLCntl_PE                             5
    #define   LSb16Gbl_TW0_SCLCntl_PE                             5
    #define       bGbl_TW0_SCLCntl_PE                          1
    #define   MSK32Gbl_TW0_SCLCntl_PE                             0x00000020

    #define     BA_Gbl_TW0_SCLCntl_PS                          0x8800
    #define     B16Gbl_TW0_SCLCntl_PS                          0x8800
    #define   LSb32Gbl_TW0_SCLCntl_PS                             6
    #define   LSb16Gbl_TW0_SCLCntl_PS                             6
    #define       bGbl_TW0_SCLCntl_PS                          1
    #define   MSK32Gbl_TW0_SCLCntl_PS                             0x00000040

    #define     BA_Gbl_TW0_SCLCntl_SL                          0x8800
    #define     B16Gbl_TW0_SCLCntl_SL                          0x8800
    #define   LSb32Gbl_TW0_SCLCntl_SL                             7
    #define   LSb16Gbl_TW0_SCLCntl_SL                             7
    #define       bGbl_TW0_SCLCntl_SL                          1
    #define   MSK32Gbl_TW0_SCLCntl_SL                             0x00000080

    #define     BA_Gbl_TW0_SCLCntl_SPU                         0x8801
    #define     B16Gbl_TW0_SCLCntl_SPU                         0x8800
    #define   LSb32Gbl_TW0_SCLCntl_SPU                            8
    #define   LSb16Gbl_TW0_SCLCntl_SPU                            8
    #define       bGbl_TW0_SCLCntl_SPU                         1
    #define   MSK32Gbl_TW0_SCLCntl_SPU                            0x00000100

    #define     BA_Gbl_TW0_SCLCntl_ST                          0x8801
    #define     B16Gbl_TW0_SCLCntl_ST                          0x8800
    #define   LSb32Gbl_TW0_SCLCntl_ST                             9
    #define   LSb16Gbl_TW0_SCLCntl_ST                             9
    #define       bGbl_TW0_SCLCntl_ST                          1
    #define   MSK32Gbl_TW0_SCLCntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW0_SDACntl                             0x8804

    #define     BA_Gbl_TW0_SDACntl_DS0                         0x8804
    #define     B16Gbl_TW0_SDACntl_DS0                         0x8804
    #define   LSb32Gbl_TW0_SDACntl_DS0                            0
    #define   LSb16Gbl_TW0_SDACntl_DS0                            0
    #define       bGbl_TW0_SDACntl_DS0                         1
    #define   MSK32Gbl_TW0_SDACntl_DS0                            0x00000001

    #define     BA_Gbl_TW0_SDACntl_DS1                         0x8804
    #define     B16Gbl_TW0_SDACntl_DS1                         0x8804
    #define   LSb32Gbl_TW0_SDACntl_DS1                            1
    #define   LSb16Gbl_TW0_SDACntl_DS1                            1
    #define       bGbl_TW0_SDACntl_DS1                         1
    #define   MSK32Gbl_TW0_SDACntl_DS1                            0x00000002

    #define     BA_Gbl_TW0_SDACntl_DS2                         0x8804
    #define     B16Gbl_TW0_SDACntl_DS2                         0x8804
    #define   LSb32Gbl_TW0_SDACntl_DS2                            2
    #define   LSb16Gbl_TW0_SDACntl_DS2                            2
    #define       bGbl_TW0_SDACntl_DS2                         1
    #define   MSK32Gbl_TW0_SDACntl_DS2                            0x00000004

    #define     BA_Gbl_TW0_SDACntl_DS3                         0x8804
    #define     B16Gbl_TW0_SDACntl_DS3                         0x8804
    #define   LSb32Gbl_TW0_SDACntl_DS3                            3
    #define   LSb16Gbl_TW0_SDACntl_DS3                            3
    #define       bGbl_TW0_SDACntl_DS3                         1
    #define   MSK32Gbl_TW0_SDACntl_DS3                            0x00000008

    #define     BA_Gbl_TW0_SDACntl_IE                          0x8804
    #define     B16Gbl_TW0_SDACntl_IE                          0x8804
    #define   LSb32Gbl_TW0_SDACntl_IE                             4
    #define   LSb16Gbl_TW0_SDACntl_IE                             4
    #define       bGbl_TW0_SDACntl_IE                          1
    #define   MSK32Gbl_TW0_SDACntl_IE                             0x00000010

    #define     BA_Gbl_TW0_SDACntl_PE                          0x8804
    #define     B16Gbl_TW0_SDACntl_PE                          0x8804
    #define   LSb32Gbl_TW0_SDACntl_PE                             5
    #define   LSb16Gbl_TW0_SDACntl_PE                             5
    #define       bGbl_TW0_SDACntl_PE                          1
    #define   MSK32Gbl_TW0_SDACntl_PE                             0x00000020

    #define     BA_Gbl_TW0_SDACntl_PS                          0x8804
    #define     B16Gbl_TW0_SDACntl_PS                          0x8804
    #define   LSb32Gbl_TW0_SDACntl_PS                             6
    #define   LSb16Gbl_TW0_SDACntl_PS                             6
    #define       bGbl_TW0_SDACntl_PS                          1
    #define   MSK32Gbl_TW0_SDACntl_PS                             0x00000040

    #define     BA_Gbl_TW0_SDACntl_SL                          0x8804
    #define     B16Gbl_TW0_SDACntl_SL                          0x8804
    #define   LSb32Gbl_TW0_SDACntl_SL                             7
    #define   LSb16Gbl_TW0_SDACntl_SL                             7
    #define       bGbl_TW0_SDACntl_SL                          1
    #define   MSK32Gbl_TW0_SDACntl_SL                             0x00000080

    #define     BA_Gbl_TW0_SDACntl_SPU                         0x8805
    #define     B16Gbl_TW0_SDACntl_SPU                         0x8804
    #define   LSb32Gbl_TW0_SDACntl_SPU                            8
    #define   LSb16Gbl_TW0_SDACntl_SPU                            8
    #define       bGbl_TW0_SDACntl_SPU                         1
    #define   MSK32Gbl_TW0_SDACntl_SPU                            0x00000100

    #define     BA_Gbl_TW0_SDACntl_ST                          0x8805
    #define     B16Gbl_TW0_SDACntl_ST                          0x8804
    #define   LSb32Gbl_TW0_SDACntl_ST                             9
    #define   LSb16Gbl_TW0_SDACntl_ST                             9
    #define       bGbl_TW0_SDACntl_ST                          1
    #define   MSK32Gbl_TW0_SDACntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW1_SCLCntl                             0x8808

    #define     BA_Gbl_TW1_SCLCntl_DS0                         0x8808
    #define     B16Gbl_TW1_SCLCntl_DS0                         0x8808
    #define   LSb32Gbl_TW1_SCLCntl_DS0                            0
    #define   LSb16Gbl_TW1_SCLCntl_DS0                            0
    #define       bGbl_TW1_SCLCntl_DS0                         1
    #define   MSK32Gbl_TW1_SCLCntl_DS0                            0x00000001

    #define     BA_Gbl_TW1_SCLCntl_DS1                         0x8808
    #define     B16Gbl_TW1_SCLCntl_DS1                         0x8808
    #define   LSb32Gbl_TW1_SCLCntl_DS1                            1
    #define   LSb16Gbl_TW1_SCLCntl_DS1                            1
    #define       bGbl_TW1_SCLCntl_DS1                         1
    #define   MSK32Gbl_TW1_SCLCntl_DS1                            0x00000002

    #define     BA_Gbl_TW1_SCLCntl_DS2                         0x8808
    #define     B16Gbl_TW1_SCLCntl_DS2                         0x8808
    #define   LSb32Gbl_TW1_SCLCntl_DS2                            2
    #define   LSb16Gbl_TW1_SCLCntl_DS2                            2
    #define       bGbl_TW1_SCLCntl_DS2                         1
    #define   MSK32Gbl_TW1_SCLCntl_DS2                            0x00000004

    #define     BA_Gbl_TW1_SCLCntl_DS3                         0x8808
    #define     B16Gbl_TW1_SCLCntl_DS3                         0x8808
    #define   LSb32Gbl_TW1_SCLCntl_DS3                            3
    #define   LSb16Gbl_TW1_SCLCntl_DS3                            3
    #define       bGbl_TW1_SCLCntl_DS3                         1
    #define   MSK32Gbl_TW1_SCLCntl_DS3                            0x00000008

    #define     BA_Gbl_TW1_SCLCntl_IE                          0x8808
    #define     B16Gbl_TW1_SCLCntl_IE                          0x8808
    #define   LSb32Gbl_TW1_SCLCntl_IE                             4
    #define   LSb16Gbl_TW1_SCLCntl_IE                             4
    #define       bGbl_TW1_SCLCntl_IE                          1
    #define   MSK32Gbl_TW1_SCLCntl_IE                             0x00000010

    #define     BA_Gbl_TW1_SCLCntl_PE                          0x8808
    #define     B16Gbl_TW1_SCLCntl_PE                          0x8808
    #define   LSb32Gbl_TW1_SCLCntl_PE                             5
    #define   LSb16Gbl_TW1_SCLCntl_PE                             5
    #define       bGbl_TW1_SCLCntl_PE                          1
    #define   MSK32Gbl_TW1_SCLCntl_PE                             0x00000020

    #define     BA_Gbl_TW1_SCLCntl_PS                          0x8808
    #define     B16Gbl_TW1_SCLCntl_PS                          0x8808
    #define   LSb32Gbl_TW1_SCLCntl_PS                             6
    #define   LSb16Gbl_TW1_SCLCntl_PS                             6
    #define       bGbl_TW1_SCLCntl_PS                          1
    #define   MSK32Gbl_TW1_SCLCntl_PS                             0x00000040

    #define     BA_Gbl_TW1_SCLCntl_SL                          0x8808
    #define     B16Gbl_TW1_SCLCntl_SL                          0x8808
    #define   LSb32Gbl_TW1_SCLCntl_SL                             7
    #define   LSb16Gbl_TW1_SCLCntl_SL                             7
    #define       bGbl_TW1_SCLCntl_SL                          1
    #define   MSK32Gbl_TW1_SCLCntl_SL                             0x00000080

    #define     BA_Gbl_TW1_SCLCntl_SPU                         0x8809
    #define     B16Gbl_TW1_SCLCntl_SPU                         0x8808
    #define   LSb32Gbl_TW1_SCLCntl_SPU                            8
    #define   LSb16Gbl_TW1_SCLCntl_SPU                            8
    #define       bGbl_TW1_SCLCntl_SPU                         1
    #define   MSK32Gbl_TW1_SCLCntl_SPU                            0x00000100

    #define     BA_Gbl_TW1_SCLCntl_ST                          0x8809
    #define     B16Gbl_TW1_SCLCntl_ST                          0x8808
    #define   LSb32Gbl_TW1_SCLCntl_ST                             9
    #define   LSb16Gbl_TW1_SCLCntl_ST                             9
    #define       bGbl_TW1_SCLCntl_ST                          1
    #define   MSK32Gbl_TW1_SCLCntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW1_SDACntl                             0x880C

    #define     BA_Gbl_TW1_SDACntl_DS0                         0x880C
    #define     B16Gbl_TW1_SDACntl_DS0                         0x880C
    #define   LSb32Gbl_TW1_SDACntl_DS0                            0
    #define   LSb16Gbl_TW1_SDACntl_DS0                            0
    #define       bGbl_TW1_SDACntl_DS0                         1
    #define   MSK32Gbl_TW1_SDACntl_DS0                            0x00000001

    #define     BA_Gbl_TW1_SDACntl_DS1                         0x880C
    #define     B16Gbl_TW1_SDACntl_DS1                         0x880C
    #define   LSb32Gbl_TW1_SDACntl_DS1                            1
    #define   LSb16Gbl_TW1_SDACntl_DS1                            1
    #define       bGbl_TW1_SDACntl_DS1                         1
    #define   MSK32Gbl_TW1_SDACntl_DS1                            0x00000002

    #define     BA_Gbl_TW1_SDACntl_DS2                         0x880C
    #define     B16Gbl_TW1_SDACntl_DS2                         0x880C
    #define   LSb32Gbl_TW1_SDACntl_DS2                            2
    #define   LSb16Gbl_TW1_SDACntl_DS2                            2
    #define       bGbl_TW1_SDACntl_DS2                         1
    #define   MSK32Gbl_TW1_SDACntl_DS2                            0x00000004

    #define     BA_Gbl_TW1_SDACntl_DS3                         0x880C
    #define     B16Gbl_TW1_SDACntl_DS3                         0x880C
    #define   LSb32Gbl_TW1_SDACntl_DS3                            3
    #define   LSb16Gbl_TW1_SDACntl_DS3                            3
    #define       bGbl_TW1_SDACntl_DS3                         1
    #define   MSK32Gbl_TW1_SDACntl_DS3                            0x00000008

    #define     BA_Gbl_TW1_SDACntl_IE                          0x880C
    #define     B16Gbl_TW1_SDACntl_IE                          0x880C
    #define   LSb32Gbl_TW1_SDACntl_IE                             4
    #define   LSb16Gbl_TW1_SDACntl_IE                             4
    #define       bGbl_TW1_SDACntl_IE                          1
    #define   MSK32Gbl_TW1_SDACntl_IE                             0x00000010

    #define     BA_Gbl_TW1_SDACntl_PE                          0x880C
    #define     B16Gbl_TW1_SDACntl_PE                          0x880C
    #define   LSb32Gbl_TW1_SDACntl_PE                             5
    #define   LSb16Gbl_TW1_SDACntl_PE                             5
    #define       bGbl_TW1_SDACntl_PE                          1
    #define   MSK32Gbl_TW1_SDACntl_PE                             0x00000020

    #define     BA_Gbl_TW1_SDACntl_PS                          0x880C
    #define     B16Gbl_TW1_SDACntl_PS                          0x880C
    #define   LSb32Gbl_TW1_SDACntl_PS                             6
    #define   LSb16Gbl_TW1_SDACntl_PS                             6
    #define       bGbl_TW1_SDACntl_PS                          1
    #define   MSK32Gbl_TW1_SDACntl_PS                             0x00000040

    #define     BA_Gbl_TW1_SDACntl_SL                          0x880C
    #define     B16Gbl_TW1_SDACntl_SL                          0x880C
    #define   LSb32Gbl_TW1_SDACntl_SL                             7
    #define   LSb16Gbl_TW1_SDACntl_SL                             7
    #define       bGbl_TW1_SDACntl_SL                          1
    #define   MSK32Gbl_TW1_SDACntl_SL                             0x00000080

    #define     BA_Gbl_TW1_SDACntl_SPU                         0x880D
    #define     B16Gbl_TW1_SDACntl_SPU                         0x880C
    #define   LSb32Gbl_TW1_SDACntl_SPU                            8
    #define   LSb16Gbl_TW1_SDACntl_SPU                            8
    #define       bGbl_TW1_SDACntl_SPU                         1
    #define   MSK32Gbl_TW1_SDACntl_SPU                            0x00000100

    #define     BA_Gbl_TW1_SDACntl_ST                          0x880D
    #define     B16Gbl_TW1_SDACntl_ST                          0x880C
    #define   LSb32Gbl_TW1_SDACntl_ST                             9
    #define   LSb16Gbl_TW1_SDACntl_ST                             9
    #define       bGbl_TW1_SDACntl_ST                          1
    #define   MSK32Gbl_TW1_SDACntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FORCE_MUTECntl                          0x8810

    #define     BA_Gbl_FORCE_MUTECntl_PE                       0x8810
    #define     B16Gbl_FORCE_MUTECntl_PE                       0x8810
    #define   LSb32Gbl_FORCE_MUTECntl_PE                          0
    #define   LSb16Gbl_FORCE_MUTECntl_PE                          0
    #define       bGbl_FORCE_MUTECntl_PE                       1
    #define   MSK32Gbl_FORCE_MUTECntl_PE                          0x00000001

    #define     BA_Gbl_FORCE_MUTECntl_PS                       0x8810
    #define     B16Gbl_FORCE_MUTECntl_PS                       0x8810
    #define   LSb32Gbl_FORCE_MUTECntl_PS                          1
    #define   LSb16Gbl_FORCE_MUTECntl_PS                          1
    #define       bGbl_FORCE_MUTECntl_PS                       1
    #define   MSK32Gbl_FORCE_MUTECntl_PS                          0x00000002

    #define     BA_Gbl_FORCE_MUTECntl_ST                       0x8810
    #define     B16Gbl_FORCE_MUTECntl_ST                       0x8810
    #define   LSb32Gbl_FORCE_MUTECntl_ST                          2
    #define   LSb16Gbl_FORCE_MUTECntl_ST                          2
    #define       bGbl_FORCE_MUTECntl_ST                       1
    #define   MSK32Gbl_FORCE_MUTECntl_ST                          0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TMSCntl                                 0x8814

    #define     BA_Gbl_TMSCntl_DS0                             0x8814
    #define     B16Gbl_TMSCntl_DS0                             0x8814
    #define   LSb32Gbl_TMSCntl_DS0                                0
    #define   LSb16Gbl_TMSCntl_DS0                                0
    #define       bGbl_TMSCntl_DS0                             1
    #define   MSK32Gbl_TMSCntl_DS0                                0x00000001

    #define     BA_Gbl_TMSCntl_DS1                             0x8814
    #define     B16Gbl_TMSCntl_DS1                             0x8814
    #define   LSb32Gbl_TMSCntl_DS1                                1
    #define   LSb16Gbl_TMSCntl_DS1                                1
    #define       bGbl_TMSCntl_DS1                             1
    #define   MSK32Gbl_TMSCntl_DS1                                0x00000002

    #define     BA_Gbl_TMSCntl_DS2                             0x8814
    #define     B16Gbl_TMSCntl_DS2                             0x8814
    #define   LSb32Gbl_TMSCntl_DS2                                2
    #define   LSb16Gbl_TMSCntl_DS2                                2
    #define       bGbl_TMSCntl_DS2                             1
    #define   MSK32Gbl_TMSCntl_DS2                                0x00000004

    #define     BA_Gbl_TMSCntl_IE                              0x8814
    #define     B16Gbl_TMSCntl_IE                              0x8814
    #define   LSb32Gbl_TMSCntl_IE                                 3
    #define   LSb16Gbl_TMSCntl_IE                                 3
    #define       bGbl_TMSCntl_IE                              1
    #define   MSK32Gbl_TMSCntl_IE                                 0x00000008

    #define     BA_Gbl_TMSCntl_PD                              0x8814
    #define     B16Gbl_TMSCntl_PD                              0x8814
    #define   LSb32Gbl_TMSCntl_PD                                 4
    #define   LSb16Gbl_TMSCntl_PD                                 4
    #define       bGbl_TMSCntl_PD                              1
    #define   MSK32Gbl_TMSCntl_PD                                 0x00000010

    #define     BA_Gbl_TMSCntl_PU                              0x8814
    #define     B16Gbl_TMSCntl_PU                              0x8814
    #define   LSb32Gbl_TMSCntl_PU                                 5
    #define   LSb16Gbl_TMSCntl_PU                                 5
    #define       bGbl_TMSCntl_PU                              1
    #define   MSK32Gbl_TMSCntl_PU                                 0x00000020

    #define     BA_Gbl_TMSCntl_SL                              0x8814
    #define     B16Gbl_TMSCntl_SL                              0x8814
    #define   LSb32Gbl_TMSCntl_SL                                 6
    #define   LSb16Gbl_TMSCntl_SL                                 6
    #define       bGbl_TMSCntl_SL                              1
    #define   MSK32Gbl_TMSCntl_SL                                 0x00000040

    #define     BA_Gbl_TMSCntl_ST                              0x8814
    #define     B16Gbl_TMSCntl_ST                              0x8814
    #define   LSb32Gbl_TMSCntl_ST                                 7
    #define   LSb16Gbl_TMSCntl_ST                                 7
    #define       bGbl_TMSCntl_ST                              1
    #define   MSK32Gbl_TMSCntl_ST                                 0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TDICntl                                 0x8818

    #define     BA_Gbl_TDICntl_DS0                             0x8818
    #define     B16Gbl_TDICntl_DS0                             0x8818
    #define   LSb32Gbl_TDICntl_DS0                                0
    #define   LSb16Gbl_TDICntl_DS0                                0
    #define       bGbl_TDICntl_DS0                             1
    #define   MSK32Gbl_TDICntl_DS0                                0x00000001

    #define     BA_Gbl_TDICntl_DS1                             0x8818
    #define     B16Gbl_TDICntl_DS1                             0x8818
    #define   LSb32Gbl_TDICntl_DS1                                1
    #define   LSb16Gbl_TDICntl_DS1                                1
    #define       bGbl_TDICntl_DS1                             1
    #define   MSK32Gbl_TDICntl_DS1                                0x00000002

    #define     BA_Gbl_TDICntl_DS2                             0x8818
    #define     B16Gbl_TDICntl_DS2                             0x8818
    #define   LSb32Gbl_TDICntl_DS2                                2
    #define   LSb16Gbl_TDICntl_DS2                                2
    #define       bGbl_TDICntl_DS2                             1
    #define   MSK32Gbl_TDICntl_DS2                                0x00000004

    #define     BA_Gbl_TDICntl_DS3                             0x8818
    #define     B16Gbl_TDICntl_DS3                             0x8818
    #define   LSb32Gbl_TDICntl_DS3                                3
    #define   LSb16Gbl_TDICntl_DS3                                3
    #define       bGbl_TDICntl_DS3                             1
    #define   MSK32Gbl_TDICntl_DS3                                0x00000008

    #define     BA_Gbl_TDICntl_IE                              0x8818
    #define     B16Gbl_TDICntl_IE                              0x8818
    #define   LSb32Gbl_TDICntl_IE                                 4
    #define   LSb16Gbl_TDICntl_IE                                 4
    #define       bGbl_TDICntl_IE                              1
    #define   MSK32Gbl_TDICntl_IE                                 0x00000010

    #define     BA_Gbl_TDICntl_PE                              0x8818
    #define     B16Gbl_TDICntl_PE                              0x8818
    #define   LSb32Gbl_TDICntl_PE                                 5
    #define   LSb16Gbl_TDICntl_PE                                 5
    #define       bGbl_TDICntl_PE                              1
    #define   MSK32Gbl_TDICntl_PE                                 0x00000020

    #define     BA_Gbl_TDICntl_PS                              0x8818
    #define     B16Gbl_TDICntl_PS                              0x8818
    #define   LSb32Gbl_TDICntl_PS                                 6
    #define   LSb16Gbl_TDICntl_PS                                 6
    #define       bGbl_TDICntl_PS                              1
    #define   MSK32Gbl_TDICntl_PS                                 0x00000040

    #define     BA_Gbl_TDICntl_SL                              0x8818
    #define     B16Gbl_TDICntl_SL                              0x8818
    #define   LSb32Gbl_TDICntl_SL                                 7
    #define   LSb16Gbl_TDICntl_SL                                 7
    #define       bGbl_TDICntl_SL                              1
    #define   MSK32Gbl_TDICntl_SL                                 0x00000080

    #define     BA_Gbl_TDICntl_SPU                             0x8819
    #define     B16Gbl_TDICntl_SPU                             0x8818
    #define   LSb32Gbl_TDICntl_SPU                                8
    #define   LSb16Gbl_TDICntl_SPU                                8
    #define       bGbl_TDICntl_SPU                             1
    #define   MSK32Gbl_TDICntl_SPU                                0x00000100

    #define     BA_Gbl_TDICntl_ST                              0x8819
    #define     B16Gbl_TDICntl_ST                              0x8818
    #define   LSb32Gbl_TDICntl_ST                                 9
    #define   LSb16Gbl_TDICntl_ST                                 9
    #define       bGbl_TDICntl_ST                              1
    #define   MSK32Gbl_TDICntl_ST                                 0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TDOCntl                                 0x881C

    #define     BA_Gbl_TDOCntl_DS0                             0x881C
    #define     B16Gbl_TDOCntl_DS0                             0x881C
    #define   LSb32Gbl_TDOCntl_DS0                                0
    #define   LSb16Gbl_TDOCntl_DS0                                0
    #define       bGbl_TDOCntl_DS0                             1
    #define   MSK32Gbl_TDOCntl_DS0                                0x00000001

    #define     BA_Gbl_TDOCntl_DS1                             0x881C
    #define     B16Gbl_TDOCntl_DS1                             0x881C
    #define   LSb32Gbl_TDOCntl_DS1                                1
    #define   LSb16Gbl_TDOCntl_DS1                                1
    #define       bGbl_TDOCntl_DS1                             1
    #define   MSK32Gbl_TDOCntl_DS1                                0x00000002

    #define     BA_Gbl_TDOCntl_DS2                             0x881C
    #define     B16Gbl_TDOCntl_DS2                             0x881C
    #define   LSb32Gbl_TDOCntl_DS2                                2
    #define   LSb16Gbl_TDOCntl_DS2                                2
    #define       bGbl_TDOCntl_DS2                             1
    #define   MSK32Gbl_TDOCntl_DS2                                0x00000004

    #define     BA_Gbl_TDOCntl_IE                              0x881C
    #define     B16Gbl_TDOCntl_IE                              0x881C
    #define   LSb32Gbl_TDOCntl_IE                                 3
    #define   LSb16Gbl_TDOCntl_IE                                 3
    #define       bGbl_TDOCntl_IE                              1
    #define   MSK32Gbl_TDOCntl_IE                                 0x00000008

    #define     BA_Gbl_TDOCntl_PD                              0x881C
    #define     B16Gbl_TDOCntl_PD                              0x881C
    #define   LSb32Gbl_TDOCntl_PD                                 4
    #define   LSb16Gbl_TDOCntl_PD                                 4
    #define       bGbl_TDOCntl_PD                              1
    #define   MSK32Gbl_TDOCntl_PD                                 0x00000010

    #define     BA_Gbl_TDOCntl_PU                              0x881C
    #define     B16Gbl_TDOCntl_PU                              0x881C
    #define   LSb32Gbl_TDOCntl_PU                                 5
    #define   LSb16Gbl_TDOCntl_PU                                 5
    #define       bGbl_TDOCntl_PU                              1
    #define   MSK32Gbl_TDOCntl_PU                                 0x00000020

    #define     BA_Gbl_TDOCntl_SL                              0x881C
    #define     B16Gbl_TDOCntl_SL                              0x881C
    #define   LSb32Gbl_TDOCntl_SL                                 6
    #define   LSb16Gbl_TDOCntl_SL                                 6
    #define       bGbl_TDOCntl_SL                              1
    #define   MSK32Gbl_TDOCntl_SL                                 0x00000040

    #define     BA_Gbl_TDOCntl_ST                              0x881C
    #define     B16Gbl_TDOCntl_ST                              0x881C
    #define   LSb32Gbl_TDOCntl_ST                                 7
    #define   LSb16Gbl_TDOCntl_ST                                 7
    #define       bGbl_TDOCntl_ST                              1
    #define   MSK32Gbl_TDOCntl_ST                                 0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS0nCntl                           0x8820

    #define     BA_Gbl_SPI1_SS0nCntl_DS0                       0x8820
    #define     B16Gbl_SPI1_SS0nCntl_DS0                       0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS0nCntl_DS0                          0
    #define       bGbl_SPI1_SS0nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS0nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS0nCntl_DS1                       0x8820
    #define     B16Gbl_SPI1_SS0nCntl_DS1                       0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS0nCntl_DS1                          1
    #define       bGbl_SPI1_SS0nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS0nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS0nCntl_DS2                       0x8820
    #define     B16Gbl_SPI1_SS0nCntl_DS2                       0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS0nCntl_DS2                          2
    #define       bGbl_SPI1_SS0nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS0nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS0nCntl_IE                        0x8820
    #define     B16Gbl_SPI1_SS0nCntl_IE                        0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_IE                           3
    #define   LSb16Gbl_SPI1_SS0nCntl_IE                           3
    #define       bGbl_SPI1_SS0nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SS0nCntl_PD                        0x8820
    #define     B16Gbl_SPI1_SS0nCntl_PD                        0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_PD                           4
    #define   LSb16Gbl_SPI1_SS0nCntl_PD                           4
    #define       bGbl_SPI1_SS0nCntl_PD                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SS0nCntl_PU                        0x8820
    #define     B16Gbl_SPI1_SS0nCntl_PU                        0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_PU                           5
    #define   LSb16Gbl_SPI1_SS0nCntl_PU                           5
    #define       bGbl_SPI1_SS0nCntl_PU                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SS0nCntl_SL                        0x8820
    #define     B16Gbl_SPI1_SS0nCntl_SL                        0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_SL                           6
    #define   LSb16Gbl_SPI1_SS0nCntl_SL                           6
    #define       bGbl_SPI1_SS0nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SS0nCntl_ST                        0x8820
    #define     B16Gbl_SPI1_SS0nCntl_ST                        0x8820
    #define   LSb32Gbl_SPI1_SS0nCntl_ST                           7
    #define   LSb16Gbl_SPI1_SS0nCntl_ST                           7
    #define       bGbl_SPI1_SS0nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS1nCntl                           0x8824

    #define     BA_Gbl_SPI1_SS1nCntl_DS0                       0x8824
    #define     B16Gbl_SPI1_SS1nCntl_DS0                       0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS1nCntl_DS0                          0
    #define       bGbl_SPI1_SS1nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS1nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS1nCntl_DS1                       0x8824
    #define     B16Gbl_SPI1_SS1nCntl_DS1                       0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS1nCntl_DS1                          1
    #define       bGbl_SPI1_SS1nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS1nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS1nCntl_DS2                       0x8824
    #define     B16Gbl_SPI1_SS1nCntl_DS2                       0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS1nCntl_DS2                          2
    #define       bGbl_SPI1_SS1nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS1nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS1nCntl_IE                        0x8824
    #define     B16Gbl_SPI1_SS1nCntl_IE                        0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_IE                           3
    #define   LSb16Gbl_SPI1_SS1nCntl_IE                           3
    #define       bGbl_SPI1_SS1nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SS1nCntl_PD                        0x8824
    #define     B16Gbl_SPI1_SS1nCntl_PD                        0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_PD                           4
    #define   LSb16Gbl_SPI1_SS1nCntl_PD                           4
    #define       bGbl_SPI1_SS1nCntl_PD                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SS1nCntl_PU                        0x8824
    #define     B16Gbl_SPI1_SS1nCntl_PU                        0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_PU                           5
    #define   LSb16Gbl_SPI1_SS1nCntl_PU                           5
    #define       bGbl_SPI1_SS1nCntl_PU                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SS1nCntl_SL                        0x8824
    #define     B16Gbl_SPI1_SS1nCntl_SL                        0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_SL                           6
    #define   LSb16Gbl_SPI1_SS1nCntl_SL                           6
    #define       bGbl_SPI1_SS1nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SS1nCntl_ST                        0x8824
    #define     B16Gbl_SPI1_SS1nCntl_ST                        0x8824
    #define   LSb32Gbl_SPI1_SS1nCntl_ST                           7
    #define   LSb16Gbl_SPI1_SS1nCntl_ST                           7
    #define       bGbl_SPI1_SS1nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS2nCntl                           0x8828

    #define     BA_Gbl_SPI1_SS2nCntl_DS0                       0x8828
    #define     B16Gbl_SPI1_SS2nCntl_DS0                       0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS2nCntl_DS0                          0
    #define       bGbl_SPI1_SS2nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS2nCntl_DS1                       0x8828
    #define     B16Gbl_SPI1_SS2nCntl_DS1                       0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS2nCntl_DS1                          1
    #define       bGbl_SPI1_SS2nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS2nCntl_DS2                       0x8828
    #define     B16Gbl_SPI1_SS2nCntl_DS2                       0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS2nCntl_DS2                          2
    #define       bGbl_SPI1_SS2nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS2nCntl_DS3                       0x8828
    #define     B16Gbl_SPI1_SS2nCntl_DS3                       0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_DS3                          3
    #define   LSb16Gbl_SPI1_SS2nCntl_DS3                          3
    #define       bGbl_SPI1_SS2nCntl_DS3                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS3                          0x00000008

    #define     BA_Gbl_SPI1_SS2nCntl_IE                        0x8828
    #define     B16Gbl_SPI1_SS2nCntl_IE                        0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_IE                           4
    #define   LSb16Gbl_SPI1_SS2nCntl_IE                           4
    #define       bGbl_SPI1_SS2nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_IE                           0x00000010

    #define     BA_Gbl_SPI1_SS2nCntl_PE                        0x8828
    #define     B16Gbl_SPI1_SS2nCntl_PE                        0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_PE                           5
    #define   LSb16Gbl_SPI1_SS2nCntl_PE                           5
    #define       bGbl_SPI1_SS2nCntl_PE                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_PE                           0x00000020

    #define     BA_Gbl_SPI1_SS2nCntl_PS                        0x8828
    #define     B16Gbl_SPI1_SS2nCntl_PS                        0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_PS                           6
    #define   LSb16Gbl_SPI1_SS2nCntl_PS                           6
    #define       bGbl_SPI1_SS2nCntl_PS                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_PS                           0x00000040

    #define     BA_Gbl_SPI1_SS2nCntl_SL                        0x8828
    #define     B16Gbl_SPI1_SS2nCntl_SL                        0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_SL                           7
    #define   LSb16Gbl_SPI1_SS2nCntl_SL                           7
    #define       bGbl_SPI1_SS2nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_SL                           0x00000080

    #define     BA_Gbl_SPI1_SS2nCntl_SPU                       0x8829
    #define     B16Gbl_SPI1_SS2nCntl_SPU                       0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_SPU                          8
    #define   LSb16Gbl_SPI1_SS2nCntl_SPU                          8
    #define       bGbl_SPI1_SS2nCntl_SPU                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_SPU                          0x00000100

    #define     BA_Gbl_SPI1_SS2nCntl_ST                        0x8829
    #define     B16Gbl_SPI1_SS2nCntl_ST                        0x8828
    #define   LSb32Gbl_SPI1_SS2nCntl_ST                           9
    #define   LSb16Gbl_SPI1_SS2nCntl_ST                           9
    #define       bGbl_SPI1_SS2nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS3nCntl                           0x882C

    #define     BA_Gbl_SPI1_SS3nCntl_DS0                       0x882C
    #define     B16Gbl_SPI1_SS3nCntl_DS0                       0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS3nCntl_DS0                          0
    #define       bGbl_SPI1_SS3nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS3nCntl_DS1                       0x882C
    #define     B16Gbl_SPI1_SS3nCntl_DS1                       0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS3nCntl_DS1                          1
    #define       bGbl_SPI1_SS3nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS3nCntl_DS2                       0x882C
    #define     B16Gbl_SPI1_SS3nCntl_DS2                       0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS3nCntl_DS2                          2
    #define       bGbl_SPI1_SS3nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS3nCntl_IE                        0x882C
    #define     B16Gbl_SPI1_SS3nCntl_IE                        0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_IE                           3
    #define   LSb16Gbl_SPI1_SS3nCntl_IE                           3
    #define       bGbl_SPI1_SS3nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SS3nCntl_PD                        0x882C
    #define     B16Gbl_SPI1_SS3nCntl_PD                        0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_PD                           4
    #define   LSb16Gbl_SPI1_SS3nCntl_PD                           4
    #define       bGbl_SPI1_SS3nCntl_PD                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SS3nCntl_PU                        0x882C
    #define     B16Gbl_SPI1_SS3nCntl_PU                        0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_PU                           5
    #define   LSb16Gbl_SPI1_SS3nCntl_PU                           5
    #define       bGbl_SPI1_SS3nCntl_PU                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SS3nCntl_SL                        0x882C
    #define     B16Gbl_SPI1_SS3nCntl_SL                        0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_SL                           6
    #define   LSb16Gbl_SPI1_SS3nCntl_SL                           6
    #define       bGbl_SPI1_SS3nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SS3nCntl_ST                        0x882C
    #define     B16Gbl_SPI1_SS3nCntl_ST                        0x882C
    #define   LSb32Gbl_SPI1_SS3nCntl_ST                           7
    #define   LSb16Gbl_SPI1_SS3nCntl_ST                           7
    #define       bGbl_SPI1_SS3nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SDOCntl                            0x8830

    #define     BA_Gbl_SPI1_SDOCntl_DS0                        0x8830
    #define     B16Gbl_SPI1_SDOCntl_DS0                        0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_DS0                           0
    #define   LSb16Gbl_SPI1_SDOCntl_DS0                           0
    #define       bGbl_SPI1_SDOCntl_DS0                        1
    #define   MSK32Gbl_SPI1_SDOCntl_DS0                           0x00000001

    #define     BA_Gbl_SPI1_SDOCntl_DS1                        0x8830
    #define     B16Gbl_SPI1_SDOCntl_DS1                        0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_DS1                           1
    #define   LSb16Gbl_SPI1_SDOCntl_DS1                           1
    #define       bGbl_SPI1_SDOCntl_DS1                        1
    #define   MSK32Gbl_SPI1_SDOCntl_DS1                           0x00000002

    #define     BA_Gbl_SPI1_SDOCntl_DS2                        0x8830
    #define     B16Gbl_SPI1_SDOCntl_DS2                        0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_DS2                           2
    #define   LSb16Gbl_SPI1_SDOCntl_DS2                           2
    #define       bGbl_SPI1_SDOCntl_DS2                        1
    #define   MSK32Gbl_SPI1_SDOCntl_DS2                           0x00000004

    #define     BA_Gbl_SPI1_SDOCntl_IE                         0x8830
    #define     B16Gbl_SPI1_SDOCntl_IE                         0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_IE                            3
    #define   LSb16Gbl_SPI1_SDOCntl_IE                            3
    #define       bGbl_SPI1_SDOCntl_IE                         1
    #define   MSK32Gbl_SPI1_SDOCntl_IE                            0x00000008

    #define     BA_Gbl_SPI1_SDOCntl_PD                         0x8830
    #define     B16Gbl_SPI1_SDOCntl_PD                         0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_PD                            4
    #define   LSb16Gbl_SPI1_SDOCntl_PD                            4
    #define       bGbl_SPI1_SDOCntl_PD                         1
    #define   MSK32Gbl_SPI1_SDOCntl_PD                            0x00000010

    #define     BA_Gbl_SPI1_SDOCntl_PU                         0x8830
    #define     B16Gbl_SPI1_SDOCntl_PU                         0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_PU                            5
    #define   LSb16Gbl_SPI1_SDOCntl_PU                            5
    #define       bGbl_SPI1_SDOCntl_PU                         1
    #define   MSK32Gbl_SPI1_SDOCntl_PU                            0x00000020

    #define     BA_Gbl_SPI1_SDOCntl_SL                         0x8830
    #define     B16Gbl_SPI1_SDOCntl_SL                         0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_SL                            6
    #define   LSb16Gbl_SPI1_SDOCntl_SL                            6
    #define       bGbl_SPI1_SDOCntl_SL                         1
    #define   MSK32Gbl_SPI1_SDOCntl_SL                            0x00000040

    #define     BA_Gbl_SPI1_SDOCntl_ST                         0x8830
    #define     B16Gbl_SPI1_SDOCntl_ST                         0x8830
    #define   LSb32Gbl_SPI1_SDOCntl_ST                            7
    #define   LSb16Gbl_SPI1_SDOCntl_ST                            7
    #define       bGbl_SPI1_SDOCntl_ST                         1
    #define   MSK32Gbl_SPI1_SDOCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SDICntl                            0x8834

    #define     BA_Gbl_SPI1_SDICntl_DS0                        0x8834
    #define     B16Gbl_SPI1_SDICntl_DS0                        0x8834
    #define   LSb32Gbl_SPI1_SDICntl_DS0                           0
    #define   LSb16Gbl_SPI1_SDICntl_DS0                           0
    #define       bGbl_SPI1_SDICntl_DS0                        1
    #define   MSK32Gbl_SPI1_SDICntl_DS0                           0x00000001

    #define     BA_Gbl_SPI1_SDICntl_DS1                        0x8834
    #define     B16Gbl_SPI1_SDICntl_DS1                        0x8834
    #define   LSb32Gbl_SPI1_SDICntl_DS1                           1
    #define   LSb16Gbl_SPI1_SDICntl_DS1                           1
    #define       bGbl_SPI1_SDICntl_DS1                        1
    #define   MSK32Gbl_SPI1_SDICntl_DS1                           0x00000002

    #define     BA_Gbl_SPI1_SDICntl_DS2                        0x8834
    #define     B16Gbl_SPI1_SDICntl_DS2                        0x8834
    #define   LSb32Gbl_SPI1_SDICntl_DS2                           2
    #define   LSb16Gbl_SPI1_SDICntl_DS2                           2
    #define       bGbl_SPI1_SDICntl_DS2                        1
    #define   MSK32Gbl_SPI1_SDICntl_DS2                           0x00000004

    #define     BA_Gbl_SPI1_SDICntl_IE                         0x8834
    #define     B16Gbl_SPI1_SDICntl_IE                         0x8834
    #define   LSb32Gbl_SPI1_SDICntl_IE                            3
    #define   LSb16Gbl_SPI1_SDICntl_IE                            3
    #define       bGbl_SPI1_SDICntl_IE                         1
    #define   MSK32Gbl_SPI1_SDICntl_IE                            0x00000008

    #define     BA_Gbl_SPI1_SDICntl_PD                         0x8834
    #define     B16Gbl_SPI1_SDICntl_PD                         0x8834
    #define   LSb32Gbl_SPI1_SDICntl_PD                            4
    #define   LSb16Gbl_SPI1_SDICntl_PD                            4
    #define       bGbl_SPI1_SDICntl_PD                         1
    #define   MSK32Gbl_SPI1_SDICntl_PD                            0x00000010

    #define     BA_Gbl_SPI1_SDICntl_PU                         0x8834
    #define     B16Gbl_SPI1_SDICntl_PU                         0x8834
    #define   LSb32Gbl_SPI1_SDICntl_PU                            5
    #define   LSb16Gbl_SPI1_SDICntl_PU                            5
    #define       bGbl_SPI1_SDICntl_PU                         1
    #define   MSK32Gbl_SPI1_SDICntl_PU                            0x00000020

    #define     BA_Gbl_SPI1_SDICntl_SL                         0x8834
    #define     B16Gbl_SPI1_SDICntl_SL                         0x8834
    #define   LSb32Gbl_SPI1_SDICntl_SL                            6
    #define   LSb16Gbl_SPI1_SDICntl_SL                            6
    #define       bGbl_SPI1_SDICntl_SL                         1
    #define   MSK32Gbl_SPI1_SDICntl_SL                            0x00000040

    #define     BA_Gbl_SPI1_SDICntl_ST                         0x8834
    #define     B16Gbl_SPI1_SDICntl_ST                         0x8834
    #define   LSb32Gbl_SPI1_SDICntl_ST                            7
    #define   LSb16Gbl_SPI1_SDICntl_ST                            7
    #define       bGbl_SPI1_SDICntl_ST                         1
    #define   MSK32Gbl_SPI1_SDICntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SCLKCntl                           0x8838

    #define     BA_Gbl_SPI1_SCLKCntl_DS0                       0x8838
    #define     B16Gbl_SPI1_SCLKCntl_DS0                       0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SCLKCntl_DS0                          0
    #define       bGbl_SPI1_SCLKCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SCLKCntl_DS1                       0x8838
    #define     B16Gbl_SPI1_SCLKCntl_DS1                       0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SCLKCntl_DS1                          1
    #define       bGbl_SPI1_SCLKCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SCLKCntl_DS2                       0x8838
    #define     B16Gbl_SPI1_SCLKCntl_DS2                       0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SCLKCntl_DS2                          2
    #define       bGbl_SPI1_SCLKCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SCLKCntl_IE                        0x8838
    #define     B16Gbl_SPI1_SCLKCntl_IE                        0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_IE                           3
    #define   LSb16Gbl_SPI1_SCLKCntl_IE                           3
    #define       bGbl_SPI1_SCLKCntl_IE                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SCLKCntl_PD                        0x8838
    #define     B16Gbl_SPI1_SCLKCntl_PD                        0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_PD                           4
    #define   LSb16Gbl_SPI1_SCLKCntl_PD                           4
    #define       bGbl_SPI1_SCLKCntl_PD                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SCLKCntl_PU                        0x8838
    #define     B16Gbl_SPI1_SCLKCntl_PU                        0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_PU                           5
    #define   LSb16Gbl_SPI1_SCLKCntl_PU                           5
    #define       bGbl_SPI1_SCLKCntl_PU                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SCLKCntl_SL                        0x8838
    #define     B16Gbl_SPI1_SCLKCntl_SL                        0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_SL                           6
    #define   LSb16Gbl_SPI1_SCLKCntl_SL                           6
    #define       bGbl_SPI1_SCLKCntl_SL                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SCLKCntl_ST                        0x8838
    #define     B16Gbl_SPI1_SCLKCntl_ST                        0x8838
    #define   LSb32Gbl_SPI1_SCLKCntl_ST                           7
    #define   LSb16Gbl_SPI1_SCLKCntl_ST                           7
    #define       bGbl_SPI1_SCLKCntl_ST                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW2_SCLCntl                             0x883C

    #define     BA_Gbl_TW2_SCLCntl_DS0                         0x883C
    #define     B16Gbl_TW2_SCLCntl_DS0                         0x883C
    #define   LSb32Gbl_TW2_SCLCntl_DS0                            0
    #define   LSb16Gbl_TW2_SCLCntl_DS0                            0
    #define       bGbl_TW2_SCLCntl_DS0                         1
    #define   MSK32Gbl_TW2_SCLCntl_DS0                            0x00000001

    #define     BA_Gbl_TW2_SCLCntl_DS1                         0x883C
    #define     B16Gbl_TW2_SCLCntl_DS1                         0x883C
    #define   LSb32Gbl_TW2_SCLCntl_DS1                            1
    #define   LSb16Gbl_TW2_SCLCntl_DS1                            1
    #define       bGbl_TW2_SCLCntl_DS1                         1
    #define   MSK32Gbl_TW2_SCLCntl_DS1                            0x00000002

    #define     BA_Gbl_TW2_SCLCntl_DS2                         0x883C
    #define     B16Gbl_TW2_SCLCntl_DS2                         0x883C
    #define   LSb32Gbl_TW2_SCLCntl_DS2                            2
    #define   LSb16Gbl_TW2_SCLCntl_DS2                            2
    #define       bGbl_TW2_SCLCntl_DS2                         1
    #define   MSK32Gbl_TW2_SCLCntl_DS2                            0x00000004

    #define     BA_Gbl_TW2_SCLCntl_DS3                         0x883C
    #define     B16Gbl_TW2_SCLCntl_DS3                         0x883C
    #define   LSb32Gbl_TW2_SCLCntl_DS3                            3
    #define   LSb16Gbl_TW2_SCLCntl_DS3                            3
    #define       bGbl_TW2_SCLCntl_DS3                         1
    #define   MSK32Gbl_TW2_SCLCntl_DS3                            0x00000008

    #define     BA_Gbl_TW2_SCLCntl_IE                          0x883C
    #define     B16Gbl_TW2_SCLCntl_IE                          0x883C
    #define   LSb32Gbl_TW2_SCLCntl_IE                             4
    #define   LSb16Gbl_TW2_SCLCntl_IE                             4
    #define       bGbl_TW2_SCLCntl_IE                          1
    #define   MSK32Gbl_TW2_SCLCntl_IE                             0x00000010

    #define     BA_Gbl_TW2_SCLCntl_PE                          0x883C
    #define     B16Gbl_TW2_SCLCntl_PE                          0x883C
    #define   LSb32Gbl_TW2_SCLCntl_PE                             5
    #define   LSb16Gbl_TW2_SCLCntl_PE                             5
    #define       bGbl_TW2_SCLCntl_PE                          1
    #define   MSK32Gbl_TW2_SCLCntl_PE                             0x00000020

    #define     BA_Gbl_TW2_SCLCntl_PS                          0x883C
    #define     B16Gbl_TW2_SCLCntl_PS                          0x883C
    #define   LSb32Gbl_TW2_SCLCntl_PS                             6
    #define   LSb16Gbl_TW2_SCLCntl_PS                             6
    #define       bGbl_TW2_SCLCntl_PS                          1
    #define   MSK32Gbl_TW2_SCLCntl_PS                             0x00000040

    #define     BA_Gbl_TW2_SCLCntl_SL                          0x883C
    #define     B16Gbl_TW2_SCLCntl_SL                          0x883C
    #define   LSb32Gbl_TW2_SCLCntl_SL                             7
    #define   LSb16Gbl_TW2_SCLCntl_SL                             7
    #define       bGbl_TW2_SCLCntl_SL                          1
    #define   MSK32Gbl_TW2_SCLCntl_SL                             0x00000080

    #define     BA_Gbl_TW2_SCLCntl_SPU                         0x883D
    #define     B16Gbl_TW2_SCLCntl_SPU                         0x883C
    #define   LSb32Gbl_TW2_SCLCntl_SPU                            8
    #define   LSb16Gbl_TW2_SCLCntl_SPU                            8
    #define       bGbl_TW2_SCLCntl_SPU                         1
    #define   MSK32Gbl_TW2_SCLCntl_SPU                            0x00000100

    #define     BA_Gbl_TW2_SCLCntl_ST                          0x883D
    #define     B16Gbl_TW2_SCLCntl_ST                          0x883C
    #define   LSb32Gbl_TW2_SCLCntl_ST                             9
    #define   LSb16Gbl_TW2_SCLCntl_ST                             9
    #define       bGbl_TW2_SCLCntl_ST                          1
    #define   MSK32Gbl_TW2_SCLCntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW2_SDACntl                             0x8840

    #define     BA_Gbl_TW2_SDACntl_DS0                         0x8840
    #define     B16Gbl_TW2_SDACntl_DS0                         0x8840
    #define   LSb32Gbl_TW2_SDACntl_DS0                            0
    #define   LSb16Gbl_TW2_SDACntl_DS0                            0
    #define       bGbl_TW2_SDACntl_DS0                         1
    #define   MSK32Gbl_TW2_SDACntl_DS0                            0x00000001

    #define     BA_Gbl_TW2_SDACntl_DS1                         0x8840
    #define     B16Gbl_TW2_SDACntl_DS1                         0x8840
    #define   LSb32Gbl_TW2_SDACntl_DS1                            1
    #define   LSb16Gbl_TW2_SDACntl_DS1                            1
    #define       bGbl_TW2_SDACntl_DS1                         1
    #define   MSK32Gbl_TW2_SDACntl_DS1                            0x00000002

    #define     BA_Gbl_TW2_SDACntl_DS2                         0x8840
    #define     B16Gbl_TW2_SDACntl_DS2                         0x8840
    #define   LSb32Gbl_TW2_SDACntl_DS2                            2
    #define   LSb16Gbl_TW2_SDACntl_DS2                            2
    #define       bGbl_TW2_SDACntl_DS2                         1
    #define   MSK32Gbl_TW2_SDACntl_DS2                            0x00000004

    #define     BA_Gbl_TW2_SDACntl_DS3                         0x8840
    #define     B16Gbl_TW2_SDACntl_DS3                         0x8840
    #define   LSb32Gbl_TW2_SDACntl_DS3                            3
    #define   LSb16Gbl_TW2_SDACntl_DS3                            3
    #define       bGbl_TW2_SDACntl_DS3                         1
    #define   MSK32Gbl_TW2_SDACntl_DS3                            0x00000008

    #define     BA_Gbl_TW2_SDACntl_IE                          0x8840
    #define     B16Gbl_TW2_SDACntl_IE                          0x8840
    #define   LSb32Gbl_TW2_SDACntl_IE                             4
    #define   LSb16Gbl_TW2_SDACntl_IE                             4
    #define       bGbl_TW2_SDACntl_IE                          1
    #define   MSK32Gbl_TW2_SDACntl_IE                             0x00000010

    #define     BA_Gbl_TW2_SDACntl_PE                          0x8840
    #define     B16Gbl_TW2_SDACntl_PE                          0x8840
    #define   LSb32Gbl_TW2_SDACntl_PE                             5
    #define   LSb16Gbl_TW2_SDACntl_PE                             5
    #define       bGbl_TW2_SDACntl_PE                          1
    #define   MSK32Gbl_TW2_SDACntl_PE                             0x00000020

    #define     BA_Gbl_TW2_SDACntl_PS                          0x8840
    #define     B16Gbl_TW2_SDACntl_PS                          0x8840
    #define   LSb32Gbl_TW2_SDACntl_PS                             6
    #define   LSb16Gbl_TW2_SDACntl_PS                             6
    #define       bGbl_TW2_SDACntl_PS                          1
    #define   MSK32Gbl_TW2_SDACntl_PS                             0x00000040

    #define     BA_Gbl_TW2_SDACntl_SL                          0x8840
    #define     B16Gbl_TW2_SDACntl_SL                          0x8840
    #define   LSb32Gbl_TW2_SDACntl_SL                             7
    #define   LSb16Gbl_TW2_SDACntl_SL                             7
    #define       bGbl_TW2_SDACntl_SL                          1
    #define   MSK32Gbl_TW2_SDACntl_SL                             0x00000080

    #define     BA_Gbl_TW2_SDACntl_SPU                         0x8841
    #define     B16Gbl_TW2_SDACntl_SPU                         0x8840
    #define   LSb32Gbl_TW2_SDACntl_SPU                            8
    #define   LSb16Gbl_TW2_SDACntl_SPU                            8
    #define       bGbl_TW2_SDACntl_SPU                         1
    #define   MSK32Gbl_TW2_SDACntl_SPU                            0x00000100

    #define     BA_Gbl_TW2_SDACntl_ST                          0x8841
    #define     B16Gbl_TW2_SDACntl_ST                          0x8840
    #define   LSb32Gbl_TW2_SDACntl_ST                             9
    #define   LSb16Gbl_TW2_SDACntl_ST                             9
    #define       bGbl_TW2_SDACntl_ST                          1
    #define   MSK32Gbl_TW2_SDACntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SS0nCntl                           0x8844

    #define     BA_Gbl_SPI2_SS0nCntl_DS0                       0x8844
    #define     B16Gbl_SPI2_SS0nCntl_DS0                       0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_DS0                          0
    #define   LSb16Gbl_SPI2_SS0nCntl_DS0                          0
    #define       bGbl_SPI2_SS0nCntl_DS0                       1
    #define   MSK32Gbl_SPI2_SS0nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI2_SS0nCntl_DS1                       0x8844
    #define     B16Gbl_SPI2_SS0nCntl_DS1                       0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_DS1                          1
    #define   LSb16Gbl_SPI2_SS0nCntl_DS1                          1
    #define       bGbl_SPI2_SS0nCntl_DS1                       1
    #define   MSK32Gbl_SPI2_SS0nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI2_SS0nCntl_DS2                       0x8844
    #define     B16Gbl_SPI2_SS0nCntl_DS2                       0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_DS2                          2
    #define   LSb16Gbl_SPI2_SS0nCntl_DS2                          2
    #define       bGbl_SPI2_SS0nCntl_DS2                       1
    #define   MSK32Gbl_SPI2_SS0nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI2_SS0nCntl_IE                        0x8844
    #define     B16Gbl_SPI2_SS0nCntl_IE                        0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_IE                           3
    #define   LSb16Gbl_SPI2_SS0nCntl_IE                           3
    #define       bGbl_SPI2_SS0nCntl_IE                        1
    #define   MSK32Gbl_SPI2_SS0nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI2_SS0nCntl_PD                        0x8844
    #define     B16Gbl_SPI2_SS0nCntl_PD                        0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_PD                           4
    #define   LSb16Gbl_SPI2_SS0nCntl_PD                           4
    #define       bGbl_SPI2_SS0nCntl_PD                        1
    #define   MSK32Gbl_SPI2_SS0nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI2_SS0nCntl_PU                        0x8844
    #define     B16Gbl_SPI2_SS0nCntl_PU                        0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_PU                           5
    #define   LSb16Gbl_SPI2_SS0nCntl_PU                           5
    #define       bGbl_SPI2_SS0nCntl_PU                        1
    #define   MSK32Gbl_SPI2_SS0nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI2_SS0nCntl_SL                        0x8844
    #define     B16Gbl_SPI2_SS0nCntl_SL                        0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_SL                           6
    #define   LSb16Gbl_SPI2_SS0nCntl_SL                           6
    #define       bGbl_SPI2_SS0nCntl_SL                        1
    #define   MSK32Gbl_SPI2_SS0nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI2_SS0nCntl_ST                        0x8844
    #define     B16Gbl_SPI2_SS0nCntl_ST                        0x8844
    #define   LSb32Gbl_SPI2_SS0nCntl_ST                           7
    #define   LSb16Gbl_SPI2_SS0nCntl_ST                           7
    #define       bGbl_SPI2_SS0nCntl_ST                        1
    #define   MSK32Gbl_SPI2_SS0nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SS1nCntl                           0x8848

    #define     BA_Gbl_SPI2_SS1nCntl_DS0                       0x8848
    #define     B16Gbl_SPI2_SS1nCntl_DS0                       0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_DS0                          0
    #define   LSb16Gbl_SPI2_SS1nCntl_DS0                          0
    #define       bGbl_SPI2_SS1nCntl_DS0                       1
    #define   MSK32Gbl_SPI2_SS1nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI2_SS1nCntl_DS1                       0x8848
    #define     B16Gbl_SPI2_SS1nCntl_DS1                       0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_DS1                          1
    #define   LSb16Gbl_SPI2_SS1nCntl_DS1                          1
    #define       bGbl_SPI2_SS1nCntl_DS1                       1
    #define   MSK32Gbl_SPI2_SS1nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI2_SS1nCntl_DS2                       0x8848
    #define     B16Gbl_SPI2_SS1nCntl_DS2                       0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_DS2                          2
    #define   LSb16Gbl_SPI2_SS1nCntl_DS2                          2
    #define       bGbl_SPI2_SS1nCntl_DS2                       1
    #define   MSK32Gbl_SPI2_SS1nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI2_SS1nCntl_IE                        0x8848
    #define     B16Gbl_SPI2_SS1nCntl_IE                        0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_IE                           3
    #define   LSb16Gbl_SPI2_SS1nCntl_IE                           3
    #define       bGbl_SPI2_SS1nCntl_IE                        1
    #define   MSK32Gbl_SPI2_SS1nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI2_SS1nCntl_PD                        0x8848
    #define     B16Gbl_SPI2_SS1nCntl_PD                        0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_PD                           4
    #define   LSb16Gbl_SPI2_SS1nCntl_PD                           4
    #define       bGbl_SPI2_SS1nCntl_PD                        1
    #define   MSK32Gbl_SPI2_SS1nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI2_SS1nCntl_PU                        0x8848
    #define     B16Gbl_SPI2_SS1nCntl_PU                        0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_PU                           5
    #define   LSb16Gbl_SPI2_SS1nCntl_PU                           5
    #define       bGbl_SPI2_SS1nCntl_PU                        1
    #define   MSK32Gbl_SPI2_SS1nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI2_SS1nCntl_SL                        0x8848
    #define     B16Gbl_SPI2_SS1nCntl_SL                        0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_SL                           6
    #define   LSb16Gbl_SPI2_SS1nCntl_SL                           6
    #define       bGbl_SPI2_SS1nCntl_SL                        1
    #define   MSK32Gbl_SPI2_SS1nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI2_SS1nCntl_ST                        0x8848
    #define     B16Gbl_SPI2_SS1nCntl_ST                        0x8848
    #define   LSb32Gbl_SPI2_SS1nCntl_ST                           7
    #define   LSb16Gbl_SPI2_SS1nCntl_ST                           7
    #define       bGbl_SPI2_SS1nCntl_ST                        1
    #define   MSK32Gbl_SPI2_SS1nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SS2nCntl                           0x884C

    #define     BA_Gbl_SPI2_SS2nCntl_DS0                       0x884C
    #define     B16Gbl_SPI2_SS2nCntl_DS0                       0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_DS0                          0
    #define   LSb16Gbl_SPI2_SS2nCntl_DS0                          0
    #define       bGbl_SPI2_SS2nCntl_DS0                       1
    #define   MSK32Gbl_SPI2_SS2nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI2_SS2nCntl_DS1                       0x884C
    #define     B16Gbl_SPI2_SS2nCntl_DS1                       0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_DS1                          1
    #define   LSb16Gbl_SPI2_SS2nCntl_DS1                          1
    #define       bGbl_SPI2_SS2nCntl_DS1                       1
    #define   MSK32Gbl_SPI2_SS2nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI2_SS2nCntl_DS2                       0x884C
    #define     B16Gbl_SPI2_SS2nCntl_DS2                       0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_DS2                          2
    #define   LSb16Gbl_SPI2_SS2nCntl_DS2                          2
    #define       bGbl_SPI2_SS2nCntl_DS2                       1
    #define   MSK32Gbl_SPI2_SS2nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI2_SS2nCntl_IE                        0x884C
    #define     B16Gbl_SPI2_SS2nCntl_IE                        0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_IE                           3
    #define   LSb16Gbl_SPI2_SS2nCntl_IE                           3
    #define       bGbl_SPI2_SS2nCntl_IE                        1
    #define   MSK32Gbl_SPI2_SS2nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI2_SS2nCntl_PD                        0x884C
    #define     B16Gbl_SPI2_SS2nCntl_PD                        0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_PD                           4
    #define   LSb16Gbl_SPI2_SS2nCntl_PD                           4
    #define       bGbl_SPI2_SS2nCntl_PD                        1
    #define   MSK32Gbl_SPI2_SS2nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI2_SS2nCntl_PU                        0x884C
    #define     B16Gbl_SPI2_SS2nCntl_PU                        0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_PU                           5
    #define   LSb16Gbl_SPI2_SS2nCntl_PU                           5
    #define       bGbl_SPI2_SS2nCntl_PU                        1
    #define   MSK32Gbl_SPI2_SS2nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI2_SS2nCntl_SL                        0x884C
    #define     B16Gbl_SPI2_SS2nCntl_SL                        0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_SL                           6
    #define   LSb16Gbl_SPI2_SS2nCntl_SL                           6
    #define       bGbl_SPI2_SS2nCntl_SL                        1
    #define   MSK32Gbl_SPI2_SS2nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI2_SS2nCntl_ST                        0x884C
    #define     B16Gbl_SPI2_SS2nCntl_ST                        0x884C
    #define   LSb32Gbl_SPI2_SS2nCntl_ST                           7
    #define   LSb16Gbl_SPI2_SS2nCntl_ST                           7
    #define       bGbl_SPI2_SS2nCntl_ST                        1
    #define   MSK32Gbl_SPI2_SS2nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SS3nCntl                           0x8850

    #define     BA_Gbl_SPI2_SS3nCntl_DS0                       0x8850
    #define     B16Gbl_SPI2_SS3nCntl_DS0                       0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_DS0                          0
    #define   LSb16Gbl_SPI2_SS3nCntl_DS0                          0
    #define       bGbl_SPI2_SS3nCntl_DS0                       1
    #define   MSK32Gbl_SPI2_SS3nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI2_SS3nCntl_DS1                       0x8850
    #define     B16Gbl_SPI2_SS3nCntl_DS1                       0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_DS1                          1
    #define   LSb16Gbl_SPI2_SS3nCntl_DS1                          1
    #define       bGbl_SPI2_SS3nCntl_DS1                       1
    #define   MSK32Gbl_SPI2_SS3nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI2_SS3nCntl_DS2                       0x8850
    #define     B16Gbl_SPI2_SS3nCntl_DS2                       0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_DS2                          2
    #define   LSb16Gbl_SPI2_SS3nCntl_DS2                          2
    #define       bGbl_SPI2_SS3nCntl_DS2                       1
    #define   MSK32Gbl_SPI2_SS3nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI2_SS3nCntl_IE                        0x8850
    #define     B16Gbl_SPI2_SS3nCntl_IE                        0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_IE                           3
    #define   LSb16Gbl_SPI2_SS3nCntl_IE                           3
    #define       bGbl_SPI2_SS3nCntl_IE                        1
    #define   MSK32Gbl_SPI2_SS3nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI2_SS3nCntl_PD                        0x8850
    #define     B16Gbl_SPI2_SS3nCntl_PD                        0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_PD                           4
    #define   LSb16Gbl_SPI2_SS3nCntl_PD                           4
    #define       bGbl_SPI2_SS3nCntl_PD                        1
    #define   MSK32Gbl_SPI2_SS3nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI2_SS3nCntl_PU                        0x8850
    #define     B16Gbl_SPI2_SS3nCntl_PU                        0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_PU                           5
    #define   LSb16Gbl_SPI2_SS3nCntl_PU                           5
    #define       bGbl_SPI2_SS3nCntl_PU                        1
    #define   MSK32Gbl_SPI2_SS3nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI2_SS3nCntl_SL                        0x8850
    #define     B16Gbl_SPI2_SS3nCntl_SL                        0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_SL                           6
    #define   LSb16Gbl_SPI2_SS3nCntl_SL                           6
    #define       bGbl_SPI2_SS3nCntl_SL                        1
    #define   MSK32Gbl_SPI2_SS3nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI2_SS3nCntl_ST                        0x8850
    #define     B16Gbl_SPI2_SS3nCntl_ST                        0x8850
    #define   LSb32Gbl_SPI2_SS3nCntl_ST                           7
    #define   LSb16Gbl_SPI2_SS3nCntl_ST                           7
    #define       bGbl_SPI2_SS3nCntl_ST                        1
    #define   MSK32Gbl_SPI2_SS3nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SDOCntl                            0x8854

    #define     BA_Gbl_SPI2_SDOCntl_DS0                        0x8854
    #define     B16Gbl_SPI2_SDOCntl_DS0                        0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_DS0                           0
    #define   LSb16Gbl_SPI2_SDOCntl_DS0                           0
    #define       bGbl_SPI2_SDOCntl_DS0                        1
    #define   MSK32Gbl_SPI2_SDOCntl_DS0                           0x00000001

    #define     BA_Gbl_SPI2_SDOCntl_DS1                        0x8854
    #define     B16Gbl_SPI2_SDOCntl_DS1                        0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_DS1                           1
    #define   LSb16Gbl_SPI2_SDOCntl_DS1                           1
    #define       bGbl_SPI2_SDOCntl_DS1                        1
    #define   MSK32Gbl_SPI2_SDOCntl_DS1                           0x00000002

    #define     BA_Gbl_SPI2_SDOCntl_DS2                        0x8854
    #define     B16Gbl_SPI2_SDOCntl_DS2                        0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_DS2                           2
    #define   LSb16Gbl_SPI2_SDOCntl_DS2                           2
    #define       bGbl_SPI2_SDOCntl_DS2                        1
    #define   MSK32Gbl_SPI2_SDOCntl_DS2                           0x00000004

    #define     BA_Gbl_SPI2_SDOCntl_IE                         0x8854
    #define     B16Gbl_SPI2_SDOCntl_IE                         0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_IE                            3
    #define   LSb16Gbl_SPI2_SDOCntl_IE                            3
    #define       bGbl_SPI2_SDOCntl_IE                         1
    #define   MSK32Gbl_SPI2_SDOCntl_IE                            0x00000008

    #define     BA_Gbl_SPI2_SDOCntl_PD                         0x8854
    #define     B16Gbl_SPI2_SDOCntl_PD                         0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_PD                            4
    #define   LSb16Gbl_SPI2_SDOCntl_PD                            4
    #define       bGbl_SPI2_SDOCntl_PD                         1
    #define   MSK32Gbl_SPI2_SDOCntl_PD                            0x00000010

    #define     BA_Gbl_SPI2_SDOCntl_PU                         0x8854
    #define     B16Gbl_SPI2_SDOCntl_PU                         0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_PU                            5
    #define   LSb16Gbl_SPI2_SDOCntl_PU                            5
    #define       bGbl_SPI2_SDOCntl_PU                         1
    #define   MSK32Gbl_SPI2_SDOCntl_PU                            0x00000020

    #define     BA_Gbl_SPI2_SDOCntl_SL                         0x8854
    #define     B16Gbl_SPI2_SDOCntl_SL                         0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_SL                            6
    #define   LSb16Gbl_SPI2_SDOCntl_SL                            6
    #define       bGbl_SPI2_SDOCntl_SL                         1
    #define   MSK32Gbl_SPI2_SDOCntl_SL                            0x00000040

    #define     BA_Gbl_SPI2_SDOCntl_ST                         0x8854
    #define     B16Gbl_SPI2_SDOCntl_ST                         0x8854
    #define   LSb32Gbl_SPI2_SDOCntl_ST                            7
    #define   LSb16Gbl_SPI2_SDOCntl_ST                            7
    #define       bGbl_SPI2_SDOCntl_ST                         1
    #define   MSK32Gbl_SPI2_SDOCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SCLKCntl                           0x8858

    #define     BA_Gbl_SPI2_SCLKCntl_DS0                       0x8858
    #define     B16Gbl_SPI2_SCLKCntl_DS0                       0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_DS0                          0
    #define   LSb16Gbl_SPI2_SCLKCntl_DS0                          0
    #define       bGbl_SPI2_SCLKCntl_DS0                       1
    #define   MSK32Gbl_SPI2_SCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI2_SCLKCntl_DS1                       0x8858
    #define     B16Gbl_SPI2_SCLKCntl_DS1                       0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_DS1                          1
    #define   LSb16Gbl_SPI2_SCLKCntl_DS1                          1
    #define       bGbl_SPI2_SCLKCntl_DS1                       1
    #define   MSK32Gbl_SPI2_SCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI2_SCLKCntl_DS2                       0x8858
    #define     B16Gbl_SPI2_SCLKCntl_DS2                       0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_DS2                          2
    #define   LSb16Gbl_SPI2_SCLKCntl_DS2                          2
    #define       bGbl_SPI2_SCLKCntl_DS2                       1
    #define   MSK32Gbl_SPI2_SCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI2_SCLKCntl_IE                        0x8858
    #define     B16Gbl_SPI2_SCLKCntl_IE                        0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_IE                           3
    #define   LSb16Gbl_SPI2_SCLKCntl_IE                           3
    #define       bGbl_SPI2_SCLKCntl_IE                        1
    #define   MSK32Gbl_SPI2_SCLKCntl_IE                           0x00000008

    #define     BA_Gbl_SPI2_SCLKCntl_PD                        0x8858
    #define     B16Gbl_SPI2_SCLKCntl_PD                        0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_PD                           4
    #define   LSb16Gbl_SPI2_SCLKCntl_PD                           4
    #define       bGbl_SPI2_SCLKCntl_PD                        1
    #define   MSK32Gbl_SPI2_SCLKCntl_PD                           0x00000010

    #define     BA_Gbl_SPI2_SCLKCntl_PU                        0x8858
    #define     B16Gbl_SPI2_SCLKCntl_PU                        0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_PU                           5
    #define   LSb16Gbl_SPI2_SCLKCntl_PU                           5
    #define       bGbl_SPI2_SCLKCntl_PU                        1
    #define   MSK32Gbl_SPI2_SCLKCntl_PU                           0x00000020

    #define     BA_Gbl_SPI2_SCLKCntl_SL                        0x8858
    #define     B16Gbl_SPI2_SCLKCntl_SL                        0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_SL                           6
    #define   LSb16Gbl_SPI2_SCLKCntl_SL                           6
    #define       bGbl_SPI2_SCLKCntl_SL                        1
    #define   MSK32Gbl_SPI2_SCLKCntl_SL                           0x00000040

    #define     BA_Gbl_SPI2_SCLKCntl_ST                        0x8858
    #define     B16Gbl_SPI2_SCLKCntl_ST                        0x8858
    #define   LSb32Gbl_SPI2_SCLKCntl_ST                           7
    #define   LSb16Gbl_SPI2_SCLKCntl_ST                           7
    #define       bGbl_SPI2_SCLKCntl_ST                        1
    #define   MSK32Gbl_SPI2_SCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI2_SDICntl                            0x885C

    #define     BA_Gbl_SPI2_SDICntl_DS0                        0x885C
    #define     B16Gbl_SPI2_SDICntl_DS0                        0x885C
    #define   LSb32Gbl_SPI2_SDICntl_DS0                           0
    #define   LSb16Gbl_SPI2_SDICntl_DS0                           0
    #define       bGbl_SPI2_SDICntl_DS0                        1
    #define   MSK32Gbl_SPI2_SDICntl_DS0                           0x00000001

    #define     BA_Gbl_SPI2_SDICntl_DS1                        0x885C
    #define     B16Gbl_SPI2_SDICntl_DS1                        0x885C
    #define   LSb32Gbl_SPI2_SDICntl_DS1                           1
    #define   LSb16Gbl_SPI2_SDICntl_DS1                           1
    #define       bGbl_SPI2_SDICntl_DS1                        1
    #define   MSK32Gbl_SPI2_SDICntl_DS1                           0x00000002

    #define     BA_Gbl_SPI2_SDICntl_DS2                        0x885C
    #define     B16Gbl_SPI2_SDICntl_DS2                        0x885C
    #define   LSb32Gbl_SPI2_SDICntl_DS2                           2
    #define   LSb16Gbl_SPI2_SDICntl_DS2                           2
    #define       bGbl_SPI2_SDICntl_DS2                        1
    #define   MSK32Gbl_SPI2_SDICntl_DS2                           0x00000004

    #define     BA_Gbl_SPI2_SDICntl_IE                         0x885C
    #define     B16Gbl_SPI2_SDICntl_IE                         0x885C
    #define   LSb32Gbl_SPI2_SDICntl_IE                            3
    #define   LSb16Gbl_SPI2_SDICntl_IE                            3
    #define       bGbl_SPI2_SDICntl_IE                         1
    #define   MSK32Gbl_SPI2_SDICntl_IE                            0x00000008

    #define     BA_Gbl_SPI2_SDICntl_PD                         0x885C
    #define     B16Gbl_SPI2_SDICntl_PD                         0x885C
    #define   LSb32Gbl_SPI2_SDICntl_PD                            4
    #define   LSb16Gbl_SPI2_SDICntl_PD                            4
    #define       bGbl_SPI2_SDICntl_PD                         1
    #define   MSK32Gbl_SPI2_SDICntl_PD                            0x00000010

    #define     BA_Gbl_SPI2_SDICntl_PU                         0x885C
    #define     B16Gbl_SPI2_SDICntl_PU                         0x885C
    #define   LSb32Gbl_SPI2_SDICntl_PU                            5
    #define   LSb16Gbl_SPI2_SDICntl_PU                            5
    #define       bGbl_SPI2_SDICntl_PU                         1
    #define   MSK32Gbl_SPI2_SDICntl_PU                            0x00000020

    #define     BA_Gbl_SPI2_SDICntl_SL                         0x885C
    #define     B16Gbl_SPI2_SDICntl_SL                         0x885C
    #define   LSb32Gbl_SPI2_SDICntl_SL                            6
    #define   LSb16Gbl_SPI2_SDICntl_SL                            6
    #define       bGbl_SPI2_SDICntl_SL                         1
    #define   MSK32Gbl_SPI2_SDICntl_SL                            0x00000040

    #define     BA_Gbl_SPI2_SDICntl_ST                         0x885C
    #define     B16Gbl_SPI2_SDICntl_ST                         0x885C
    #define   LSb32Gbl_SPI2_SDICntl_ST                            7
    #define   LSb16Gbl_SPI2_SDICntl_ST                            7
    #define       bGbl_SPI2_SDICntl_ST                         1
    #define   MSK32Gbl_SPI2_SDICntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW3_SCLCntl                             0x8860

    #define     BA_Gbl_TW3_SCLCntl_DS0                         0x8860
    #define     B16Gbl_TW3_SCLCntl_DS0                         0x8860
    #define   LSb32Gbl_TW3_SCLCntl_DS0                            0
    #define   LSb16Gbl_TW3_SCLCntl_DS0                            0
    #define       bGbl_TW3_SCLCntl_DS0                         1
    #define   MSK32Gbl_TW3_SCLCntl_DS0                            0x00000001

    #define     BA_Gbl_TW3_SCLCntl_DS1                         0x8860
    #define     B16Gbl_TW3_SCLCntl_DS1                         0x8860
    #define   LSb32Gbl_TW3_SCLCntl_DS1                            1
    #define   LSb16Gbl_TW3_SCLCntl_DS1                            1
    #define       bGbl_TW3_SCLCntl_DS1                         1
    #define   MSK32Gbl_TW3_SCLCntl_DS1                            0x00000002

    #define     BA_Gbl_TW3_SCLCntl_DS2                         0x8860
    #define     B16Gbl_TW3_SCLCntl_DS2                         0x8860
    #define   LSb32Gbl_TW3_SCLCntl_DS2                            2
    #define   LSb16Gbl_TW3_SCLCntl_DS2                            2
    #define       bGbl_TW3_SCLCntl_DS2                         1
    #define   MSK32Gbl_TW3_SCLCntl_DS2                            0x00000004

    #define     BA_Gbl_TW3_SCLCntl_DS3                         0x8860
    #define     B16Gbl_TW3_SCLCntl_DS3                         0x8860
    #define   LSb32Gbl_TW3_SCLCntl_DS3                            3
    #define   LSb16Gbl_TW3_SCLCntl_DS3                            3
    #define       bGbl_TW3_SCLCntl_DS3                         1
    #define   MSK32Gbl_TW3_SCLCntl_DS3                            0x00000008

    #define     BA_Gbl_TW3_SCLCntl_IE                          0x8860
    #define     B16Gbl_TW3_SCLCntl_IE                          0x8860
    #define   LSb32Gbl_TW3_SCLCntl_IE                             4
    #define   LSb16Gbl_TW3_SCLCntl_IE                             4
    #define       bGbl_TW3_SCLCntl_IE                          1
    #define   MSK32Gbl_TW3_SCLCntl_IE                             0x00000010

    #define     BA_Gbl_TW3_SCLCntl_PE                          0x8860
    #define     B16Gbl_TW3_SCLCntl_PE                          0x8860
    #define   LSb32Gbl_TW3_SCLCntl_PE                             5
    #define   LSb16Gbl_TW3_SCLCntl_PE                             5
    #define       bGbl_TW3_SCLCntl_PE                          1
    #define   MSK32Gbl_TW3_SCLCntl_PE                             0x00000020

    #define     BA_Gbl_TW3_SCLCntl_PS                          0x8860
    #define     B16Gbl_TW3_SCLCntl_PS                          0x8860
    #define   LSb32Gbl_TW3_SCLCntl_PS                             6
    #define   LSb16Gbl_TW3_SCLCntl_PS                             6
    #define       bGbl_TW3_SCLCntl_PS                          1
    #define   MSK32Gbl_TW3_SCLCntl_PS                             0x00000040

    #define     BA_Gbl_TW3_SCLCntl_SL                          0x8860
    #define     B16Gbl_TW3_SCLCntl_SL                          0x8860
    #define   LSb32Gbl_TW3_SCLCntl_SL                             7
    #define   LSb16Gbl_TW3_SCLCntl_SL                             7
    #define       bGbl_TW3_SCLCntl_SL                          1
    #define   MSK32Gbl_TW3_SCLCntl_SL                             0x00000080

    #define     BA_Gbl_TW3_SCLCntl_SPU                         0x8861
    #define     B16Gbl_TW3_SCLCntl_SPU                         0x8860
    #define   LSb32Gbl_TW3_SCLCntl_SPU                            8
    #define   LSb16Gbl_TW3_SCLCntl_SPU                            8
    #define       bGbl_TW3_SCLCntl_SPU                         1
    #define   MSK32Gbl_TW3_SCLCntl_SPU                            0x00000100

    #define     BA_Gbl_TW3_SCLCntl_ST                          0x8861
    #define     B16Gbl_TW3_SCLCntl_ST                          0x8860
    #define   LSb32Gbl_TW3_SCLCntl_ST                             9
    #define   LSb16Gbl_TW3_SCLCntl_ST                             9
    #define       bGbl_TW3_SCLCntl_ST                          1
    #define   MSK32Gbl_TW3_SCLCntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW3_SDACntl                             0x8864

    #define     BA_Gbl_TW3_SDACntl_DS0                         0x8864
    #define     B16Gbl_TW3_SDACntl_DS0                         0x8864
    #define   LSb32Gbl_TW3_SDACntl_DS0                            0
    #define   LSb16Gbl_TW3_SDACntl_DS0                            0
    #define       bGbl_TW3_SDACntl_DS0                         1
    #define   MSK32Gbl_TW3_SDACntl_DS0                            0x00000001

    #define     BA_Gbl_TW3_SDACntl_DS1                         0x8864
    #define     B16Gbl_TW3_SDACntl_DS1                         0x8864
    #define   LSb32Gbl_TW3_SDACntl_DS1                            1
    #define   LSb16Gbl_TW3_SDACntl_DS1                            1
    #define       bGbl_TW3_SDACntl_DS1                         1
    #define   MSK32Gbl_TW3_SDACntl_DS1                            0x00000002

    #define     BA_Gbl_TW3_SDACntl_DS2                         0x8864
    #define     B16Gbl_TW3_SDACntl_DS2                         0x8864
    #define   LSb32Gbl_TW3_SDACntl_DS2                            2
    #define   LSb16Gbl_TW3_SDACntl_DS2                            2
    #define       bGbl_TW3_SDACntl_DS2                         1
    #define   MSK32Gbl_TW3_SDACntl_DS2                            0x00000004

    #define     BA_Gbl_TW3_SDACntl_DS3                         0x8864
    #define     B16Gbl_TW3_SDACntl_DS3                         0x8864
    #define   LSb32Gbl_TW3_SDACntl_DS3                            3
    #define   LSb16Gbl_TW3_SDACntl_DS3                            3
    #define       bGbl_TW3_SDACntl_DS3                         1
    #define   MSK32Gbl_TW3_SDACntl_DS3                            0x00000008

    #define     BA_Gbl_TW3_SDACntl_IE                          0x8864
    #define     B16Gbl_TW3_SDACntl_IE                          0x8864
    #define   LSb32Gbl_TW3_SDACntl_IE                             4
    #define   LSb16Gbl_TW3_SDACntl_IE                             4
    #define       bGbl_TW3_SDACntl_IE                          1
    #define   MSK32Gbl_TW3_SDACntl_IE                             0x00000010

    #define     BA_Gbl_TW3_SDACntl_PE                          0x8864
    #define     B16Gbl_TW3_SDACntl_PE                          0x8864
    #define   LSb32Gbl_TW3_SDACntl_PE                             5
    #define   LSb16Gbl_TW3_SDACntl_PE                             5
    #define       bGbl_TW3_SDACntl_PE                          1
    #define   MSK32Gbl_TW3_SDACntl_PE                             0x00000020

    #define     BA_Gbl_TW3_SDACntl_PS                          0x8864
    #define     B16Gbl_TW3_SDACntl_PS                          0x8864
    #define   LSb32Gbl_TW3_SDACntl_PS                             6
    #define   LSb16Gbl_TW3_SDACntl_PS                             6
    #define       bGbl_TW3_SDACntl_PS                          1
    #define   MSK32Gbl_TW3_SDACntl_PS                             0x00000040

    #define     BA_Gbl_TW3_SDACntl_SL                          0x8864
    #define     B16Gbl_TW3_SDACntl_SL                          0x8864
    #define   LSb32Gbl_TW3_SDACntl_SL                             7
    #define   LSb16Gbl_TW3_SDACntl_SL                             7
    #define       bGbl_TW3_SDACntl_SL                          1
    #define   MSK32Gbl_TW3_SDACntl_SL                             0x00000080

    #define     BA_Gbl_TW3_SDACntl_SPU                         0x8865
    #define     B16Gbl_TW3_SDACntl_SPU                         0x8864
    #define   LSb32Gbl_TW3_SDACntl_SPU                            8
    #define   LSb16Gbl_TW3_SDACntl_SPU                            8
    #define       bGbl_TW3_SDACntl_SPU                         1
    #define   MSK32Gbl_TW3_SDACntl_SPU                            0x00000100

    #define     BA_Gbl_TW3_SDACntl_ST                          0x8865
    #define     B16Gbl_TW3_SDACntl_ST                          0x8864
    #define   LSb32Gbl_TW3_SDACntl_ST                             9
    #define   LSb16Gbl_TW3_SDACntl_ST                             9
    #define       bGbl_TW3_SDACntl_ST                          1
    #define   MSK32Gbl_TW3_SDACntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_URT1_RXDCntl                            0x8868

    #define     BA_Gbl_URT1_RXDCntl_DS0                        0x8868
    #define     B16Gbl_URT1_RXDCntl_DS0                        0x8868
    #define   LSb32Gbl_URT1_RXDCntl_DS0                           0
    #define   LSb16Gbl_URT1_RXDCntl_DS0                           0
    #define       bGbl_URT1_RXDCntl_DS0                        1
    #define   MSK32Gbl_URT1_RXDCntl_DS0                           0x00000001

    #define     BA_Gbl_URT1_RXDCntl_DS1                        0x8868
    #define     B16Gbl_URT1_RXDCntl_DS1                        0x8868
    #define   LSb32Gbl_URT1_RXDCntl_DS1                           1
    #define   LSb16Gbl_URT1_RXDCntl_DS1                           1
    #define       bGbl_URT1_RXDCntl_DS1                        1
    #define   MSK32Gbl_URT1_RXDCntl_DS1                           0x00000002

    #define     BA_Gbl_URT1_RXDCntl_DS2                        0x8868
    #define     B16Gbl_URT1_RXDCntl_DS2                        0x8868
    #define   LSb32Gbl_URT1_RXDCntl_DS2                           2
    #define   LSb16Gbl_URT1_RXDCntl_DS2                           2
    #define       bGbl_URT1_RXDCntl_DS2                        1
    #define   MSK32Gbl_URT1_RXDCntl_DS2                           0x00000004

    #define     BA_Gbl_URT1_RXDCntl_DS3                        0x8868
    #define     B16Gbl_URT1_RXDCntl_DS3                        0x8868
    #define   LSb32Gbl_URT1_RXDCntl_DS3                           3
    #define   LSb16Gbl_URT1_RXDCntl_DS3                           3
    #define       bGbl_URT1_RXDCntl_DS3                        1
    #define   MSK32Gbl_URT1_RXDCntl_DS3                           0x00000008

    #define     BA_Gbl_URT1_RXDCntl_IE                         0x8868
    #define     B16Gbl_URT1_RXDCntl_IE                         0x8868
    #define   LSb32Gbl_URT1_RXDCntl_IE                            4
    #define   LSb16Gbl_URT1_RXDCntl_IE                            4
    #define       bGbl_URT1_RXDCntl_IE                         1
    #define   MSK32Gbl_URT1_RXDCntl_IE                            0x00000010

    #define     BA_Gbl_URT1_RXDCntl_PE                         0x8868
    #define     B16Gbl_URT1_RXDCntl_PE                         0x8868
    #define   LSb32Gbl_URT1_RXDCntl_PE                            5
    #define   LSb16Gbl_URT1_RXDCntl_PE                            5
    #define       bGbl_URT1_RXDCntl_PE                         1
    #define   MSK32Gbl_URT1_RXDCntl_PE                            0x00000020

    #define     BA_Gbl_URT1_RXDCntl_PS                         0x8868
    #define     B16Gbl_URT1_RXDCntl_PS                         0x8868
    #define   LSb32Gbl_URT1_RXDCntl_PS                            6
    #define   LSb16Gbl_URT1_RXDCntl_PS                            6
    #define       bGbl_URT1_RXDCntl_PS                         1
    #define   MSK32Gbl_URT1_RXDCntl_PS                            0x00000040

    #define     BA_Gbl_URT1_RXDCntl_SL                         0x8868
    #define     B16Gbl_URT1_RXDCntl_SL                         0x8868
    #define   LSb32Gbl_URT1_RXDCntl_SL                            7
    #define   LSb16Gbl_URT1_RXDCntl_SL                            7
    #define       bGbl_URT1_RXDCntl_SL                         1
    #define   MSK32Gbl_URT1_RXDCntl_SL                            0x00000080

    #define     BA_Gbl_URT1_RXDCntl_SPU                        0x8869
    #define     B16Gbl_URT1_RXDCntl_SPU                        0x8868
    #define   LSb32Gbl_URT1_RXDCntl_SPU                           8
    #define   LSb16Gbl_URT1_RXDCntl_SPU                           8
    #define       bGbl_URT1_RXDCntl_SPU                        1
    #define   MSK32Gbl_URT1_RXDCntl_SPU                           0x00000100

    #define     BA_Gbl_URT1_RXDCntl_ST                         0x8869
    #define     B16Gbl_URT1_RXDCntl_ST                         0x8868
    #define   LSb32Gbl_URT1_RXDCntl_ST                            9
    #define   LSb16Gbl_URT1_RXDCntl_ST                            9
    #define       bGbl_URT1_RXDCntl_ST                         1
    #define   MSK32Gbl_URT1_RXDCntl_ST                            0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_URT1_TXDCntl                            0x886C

    #define     BA_Gbl_URT1_TXDCntl_DS0                        0x886C
    #define     B16Gbl_URT1_TXDCntl_DS0                        0x886C
    #define   LSb32Gbl_URT1_TXDCntl_DS0                           0
    #define   LSb16Gbl_URT1_TXDCntl_DS0                           0
    #define       bGbl_URT1_TXDCntl_DS0                        1
    #define   MSK32Gbl_URT1_TXDCntl_DS0                           0x00000001

    #define     BA_Gbl_URT1_TXDCntl_DS1                        0x886C
    #define     B16Gbl_URT1_TXDCntl_DS1                        0x886C
    #define   LSb32Gbl_URT1_TXDCntl_DS1                           1
    #define   LSb16Gbl_URT1_TXDCntl_DS1                           1
    #define       bGbl_URT1_TXDCntl_DS1                        1
    #define   MSK32Gbl_URT1_TXDCntl_DS1                           0x00000002

    #define     BA_Gbl_URT1_TXDCntl_DS2                        0x886C
    #define     B16Gbl_URT1_TXDCntl_DS2                        0x886C
    #define   LSb32Gbl_URT1_TXDCntl_DS2                           2
    #define   LSb16Gbl_URT1_TXDCntl_DS2                           2
    #define       bGbl_URT1_TXDCntl_DS2                        1
    #define   MSK32Gbl_URT1_TXDCntl_DS2                           0x00000004

    #define     BA_Gbl_URT1_TXDCntl_IE                         0x886C
    #define     B16Gbl_URT1_TXDCntl_IE                         0x886C
    #define   LSb32Gbl_URT1_TXDCntl_IE                            3
    #define   LSb16Gbl_URT1_TXDCntl_IE                            3
    #define       bGbl_URT1_TXDCntl_IE                         1
    #define   MSK32Gbl_URT1_TXDCntl_IE                            0x00000008

    #define     BA_Gbl_URT1_TXDCntl_PD                         0x886C
    #define     B16Gbl_URT1_TXDCntl_PD                         0x886C
    #define   LSb32Gbl_URT1_TXDCntl_PD                            4
    #define   LSb16Gbl_URT1_TXDCntl_PD                            4
    #define       bGbl_URT1_TXDCntl_PD                         1
    #define   MSK32Gbl_URT1_TXDCntl_PD                            0x00000010

    #define     BA_Gbl_URT1_TXDCntl_PU                         0x886C
    #define     B16Gbl_URT1_TXDCntl_PU                         0x886C
    #define   LSb32Gbl_URT1_TXDCntl_PU                            5
    #define   LSb16Gbl_URT1_TXDCntl_PU                            5
    #define       bGbl_URT1_TXDCntl_PU                         1
    #define   MSK32Gbl_URT1_TXDCntl_PU                            0x00000020

    #define     BA_Gbl_URT1_TXDCntl_SL                         0x886C
    #define     B16Gbl_URT1_TXDCntl_SL                         0x886C
    #define   LSb32Gbl_URT1_TXDCntl_SL                            6
    #define   LSb16Gbl_URT1_TXDCntl_SL                            6
    #define       bGbl_URT1_TXDCntl_SL                         1
    #define   MSK32Gbl_URT1_TXDCntl_SL                            0x00000040

    #define     BA_Gbl_URT1_TXDCntl_ST                         0x886C
    #define     B16Gbl_URT1_TXDCntl_ST                         0x886C
    #define   LSb32Gbl_URT1_TXDCntl_ST                            7
    #define   LSb16Gbl_URT1_TXDCntl_ST                            7
    #define       bGbl_URT1_TXDCntl_ST                         1
    #define   MSK32Gbl_URT1_TXDCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PWM0Cntl                                0x8870

    #define     BA_Gbl_PWM0Cntl_DS0                            0x8870
    #define     B16Gbl_PWM0Cntl_DS0                            0x8870
    #define   LSb32Gbl_PWM0Cntl_DS0                               0
    #define   LSb16Gbl_PWM0Cntl_DS0                               0
    #define       bGbl_PWM0Cntl_DS0                            1
    #define   MSK32Gbl_PWM0Cntl_DS0                               0x00000001

    #define     BA_Gbl_PWM0Cntl_DS1                            0x8870
    #define     B16Gbl_PWM0Cntl_DS1                            0x8870
    #define   LSb32Gbl_PWM0Cntl_DS1                               1
    #define   LSb16Gbl_PWM0Cntl_DS1                               1
    #define       bGbl_PWM0Cntl_DS1                            1
    #define   MSK32Gbl_PWM0Cntl_DS1                               0x00000002

    #define     BA_Gbl_PWM0Cntl_DS2                            0x8870
    #define     B16Gbl_PWM0Cntl_DS2                            0x8870
    #define   LSb32Gbl_PWM0Cntl_DS2                               2
    #define   LSb16Gbl_PWM0Cntl_DS2                               2
    #define       bGbl_PWM0Cntl_DS2                            1
    #define   MSK32Gbl_PWM0Cntl_DS2                               0x00000004

    #define     BA_Gbl_PWM0Cntl_IE                             0x8870
    #define     B16Gbl_PWM0Cntl_IE                             0x8870
    #define   LSb32Gbl_PWM0Cntl_IE                                3
    #define   LSb16Gbl_PWM0Cntl_IE                                3
    #define       bGbl_PWM0Cntl_IE                             1
    #define   MSK32Gbl_PWM0Cntl_IE                                0x00000008

    #define     BA_Gbl_PWM0Cntl_PD                             0x8870
    #define     B16Gbl_PWM0Cntl_PD                             0x8870
    #define   LSb32Gbl_PWM0Cntl_PD                                4
    #define   LSb16Gbl_PWM0Cntl_PD                                4
    #define       bGbl_PWM0Cntl_PD                             1
    #define   MSK32Gbl_PWM0Cntl_PD                                0x00000010

    #define     BA_Gbl_PWM0Cntl_PU                             0x8870
    #define     B16Gbl_PWM0Cntl_PU                             0x8870
    #define   LSb32Gbl_PWM0Cntl_PU                                5
    #define   LSb16Gbl_PWM0Cntl_PU                                5
    #define       bGbl_PWM0Cntl_PU                             1
    #define   MSK32Gbl_PWM0Cntl_PU                                0x00000020

    #define     BA_Gbl_PWM0Cntl_SL                             0x8870
    #define     B16Gbl_PWM0Cntl_SL                             0x8870
    #define   LSb32Gbl_PWM0Cntl_SL                                6
    #define   LSb16Gbl_PWM0Cntl_SL                                6
    #define       bGbl_PWM0Cntl_SL                             1
    #define   MSK32Gbl_PWM0Cntl_SL                                0x00000040

    #define     BA_Gbl_PWM0Cntl_ST                             0x8870
    #define     B16Gbl_PWM0Cntl_ST                             0x8870
    #define   LSb32Gbl_PWM0Cntl_ST                                7
    #define   LSb16Gbl_PWM0Cntl_ST                                7
    #define       bGbl_PWM0Cntl_ST                             1
    #define   MSK32Gbl_PWM0Cntl_ST                                0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PWM1Cntl                                0x8874

    #define     BA_Gbl_PWM1Cntl_DS0                            0x8874
    #define     B16Gbl_PWM1Cntl_DS0                            0x8874
    #define   LSb32Gbl_PWM1Cntl_DS0                               0
    #define   LSb16Gbl_PWM1Cntl_DS0                               0
    #define       bGbl_PWM1Cntl_DS0                            1
    #define   MSK32Gbl_PWM1Cntl_DS0                               0x00000001

    #define     BA_Gbl_PWM1Cntl_DS1                            0x8874
    #define     B16Gbl_PWM1Cntl_DS1                            0x8874
    #define   LSb32Gbl_PWM1Cntl_DS1                               1
    #define   LSb16Gbl_PWM1Cntl_DS1                               1
    #define       bGbl_PWM1Cntl_DS1                            1
    #define   MSK32Gbl_PWM1Cntl_DS1                               0x00000002

    #define     BA_Gbl_PWM1Cntl_DS2                            0x8874
    #define     B16Gbl_PWM1Cntl_DS2                            0x8874
    #define   LSb32Gbl_PWM1Cntl_DS2                               2
    #define   LSb16Gbl_PWM1Cntl_DS2                               2
    #define       bGbl_PWM1Cntl_DS2                            1
    #define   MSK32Gbl_PWM1Cntl_DS2                               0x00000004

    #define     BA_Gbl_PWM1Cntl_IE                             0x8874
    #define     B16Gbl_PWM1Cntl_IE                             0x8874
    #define   LSb32Gbl_PWM1Cntl_IE                                3
    #define   LSb16Gbl_PWM1Cntl_IE                                3
    #define       bGbl_PWM1Cntl_IE                             1
    #define   MSK32Gbl_PWM1Cntl_IE                                0x00000008

    #define     BA_Gbl_PWM1Cntl_PD                             0x8874
    #define     B16Gbl_PWM1Cntl_PD                             0x8874
    #define   LSb32Gbl_PWM1Cntl_PD                                4
    #define   LSb16Gbl_PWM1Cntl_PD                                4
    #define       bGbl_PWM1Cntl_PD                             1
    #define   MSK32Gbl_PWM1Cntl_PD                                0x00000010

    #define     BA_Gbl_PWM1Cntl_PU                             0x8874
    #define     B16Gbl_PWM1Cntl_PU                             0x8874
    #define   LSb32Gbl_PWM1Cntl_PU                                5
    #define   LSb16Gbl_PWM1Cntl_PU                                5
    #define       bGbl_PWM1Cntl_PU                             1
    #define   MSK32Gbl_PWM1Cntl_PU                                0x00000020

    #define     BA_Gbl_PWM1Cntl_SL                             0x8874
    #define     B16Gbl_PWM1Cntl_SL                             0x8874
    #define   LSb32Gbl_PWM1Cntl_SL                                6
    #define   LSb16Gbl_PWM1Cntl_SL                                6
    #define       bGbl_PWM1Cntl_SL                             1
    #define   MSK32Gbl_PWM1Cntl_SL                                0x00000040

    #define     BA_Gbl_PWM1Cntl_ST                             0x8874
    #define     B16Gbl_PWM1Cntl_ST                             0x8874
    #define   LSb32Gbl_PWM1Cntl_ST                                7
    #define   LSb16Gbl_PWM1Cntl_ST                                7
    #define       bGbl_PWM1Cntl_ST                             1
    #define   MSK32Gbl_PWM1Cntl_ST                                0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PWM2Cntl                                0x8878

    #define     BA_Gbl_PWM2Cntl_DS0                            0x8878
    #define     B16Gbl_PWM2Cntl_DS0                            0x8878
    #define   LSb32Gbl_PWM2Cntl_DS0                               0
    #define   LSb16Gbl_PWM2Cntl_DS0                               0
    #define       bGbl_PWM2Cntl_DS0                            1
    #define   MSK32Gbl_PWM2Cntl_DS0                               0x00000001

    #define     BA_Gbl_PWM2Cntl_DS1                            0x8878
    #define     B16Gbl_PWM2Cntl_DS1                            0x8878
    #define   LSb32Gbl_PWM2Cntl_DS1                               1
    #define   LSb16Gbl_PWM2Cntl_DS1                               1
    #define       bGbl_PWM2Cntl_DS1                            1
    #define   MSK32Gbl_PWM2Cntl_DS1                               0x00000002

    #define     BA_Gbl_PWM2Cntl_DS2                            0x8878
    #define     B16Gbl_PWM2Cntl_DS2                            0x8878
    #define   LSb32Gbl_PWM2Cntl_DS2                               2
    #define   LSb16Gbl_PWM2Cntl_DS2                               2
    #define       bGbl_PWM2Cntl_DS2                            1
    #define   MSK32Gbl_PWM2Cntl_DS2                               0x00000004

    #define     BA_Gbl_PWM2Cntl_IE                             0x8878
    #define     B16Gbl_PWM2Cntl_IE                             0x8878
    #define   LSb32Gbl_PWM2Cntl_IE                                3
    #define   LSb16Gbl_PWM2Cntl_IE                                3
    #define       bGbl_PWM2Cntl_IE                             1
    #define   MSK32Gbl_PWM2Cntl_IE                                0x00000008

    #define     BA_Gbl_PWM2Cntl_PD                             0x8878
    #define     B16Gbl_PWM2Cntl_PD                             0x8878
    #define   LSb32Gbl_PWM2Cntl_PD                                4
    #define   LSb16Gbl_PWM2Cntl_PD                                4
    #define       bGbl_PWM2Cntl_PD                             1
    #define   MSK32Gbl_PWM2Cntl_PD                                0x00000010

    #define     BA_Gbl_PWM2Cntl_PU                             0x8878
    #define     B16Gbl_PWM2Cntl_PU                             0x8878
    #define   LSb32Gbl_PWM2Cntl_PU                                5
    #define   LSb16Gbl_PWM2Cntl_PU                                5
    #define       bGbl_PWM2Cntl_PU                             1
    #define   MSK32Gbl_PWM2Cntl_PU                                0x00000020

    #define     BA_Gbl_PWM2Cntl_SL                             0x8878
    #define     B16Gbl_PWM2Cntl_SL                             0x8878
    #define   LSb32Gbl_PWM2Cntl_SL                                6
    #define   LSb16Gbl_PWM2Cntl_SL                                6
    #define       bGbl_PWM2Cntl_SL                             1
    #define   MSK32Gbl_PWM2Cntl_SL                                0x00000040

    #define     BA_Gbl_PWM2Cntl_ST                             0x8878
    #define     B16Gbl_PWM2Cntl_ST                             0x8878
    #define   LSb32Gbl_PWM2Cntl_ST                                7
    #define   LSb16Gbl_PWM2Cntl_ST                                7
    #define       bGbl_PWM2Cntl_ST                             1
    #define   MSK32Gbl_PWM2Cntl_ST                                0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PWM3Cntl                                0x887C

    #define     BA_Gbl_PWM3Cntl_DS0                            0x887C
    #define     B16Gbl_PWM3Cntl_DS0                            0x887C
    #define   LSb32Gbl_PWM3Cntl_DS0                               0
    #define   LSb16Gbl_PWM3Cntl_DS0                               0
    #define       bGbl_PWM3Cntl_DS0                            1
    #define   MSK32Gbl_PWM3Cntl_DS0                               0x00000001

    #define     BA_Gbl_PWM3Cntl_DS1                            0x887C
    #define     B16Gbl_PWM3Cntl_DS1                            0x887C
    #define   LSb32Gbl_PWM3Cntl_DS1                               1
    #define   LSb16Gbl_PWM3Cntl_DS1                               1
    #define       bGbl_PWM3Cntl_DS1                            1
    #define   MSK32Gbl_PWM3Cntl_DS1                               0x00000002

    #define     BA_Gbl_PWM3Cntl_DS2                            0x887C
    #define     B16Gbl_PWM3Cntl_DS2                            0x887C
    #define   LSb32Gbl_PWM3Cntl_DS2                               2
    #define   LSb16Gbl_PWM3Cntl_DS2                               2
    #define       bGbl_PWM3Cntl_DS2                            1
    #define   MSK32Gbl_PWM3Cntl_DS2                               0x00000004

    #define     BA_Gbl_PWM3Cntl_IE                             0x887C
    #define     B16Gbl_PWM3Cntl_IE                             0x887C
    #define   LSb32Gbl_PWM3Cntl_IE                                3
    #define   LSb16Gbl_PWM3Cntl_IE                                3
    #define       bGbl_PWM3Cntl_IE                             1
    #define   MSK32Gbl_PWM3Cntl_IE                                0x00000008

    #define     BA_Gbl_PWM3Cntl_PD                             0x887C
    #define     B16Gbl_PWM3Cntl_PD                             0x887C
    #define   LSb32Gbl_PWM3Cntl_PD                                4
    #define   LSb16Gbl_PWM3Cntl_PD                                4
    #define       bGbl_PWM3Cntl_PD                             1
    #define   MSK32Gbl_PWM3Cntl_PD                                0x00000010

    #define     BA_Gbl_PWM3Cntl_PU                             0x887C
    #define     B16Gbl_PWM3Cntl_PU                             0x887C
    #define   LSb32Gbl_PWM3Cntl_PU                                5
    #define   LSb16Gbl_PWM3Cntl_PU                                5
    #define       bGbl_PWM3Cntl_PU                             1
    #define   MSK32Gbl_PWM3Cntl_PU                                0x00000020

    #define     BA_Gbl_PWM3Cntl_SL                             0x887C
    #define     B16Gbl_PWM3Cntl_SL                             0x887C
    #define   LSb32Gbl_PWM3Cntl_SL                                6
    #define   LSb16Gbl_PWM3Cntl_SL                                6
    #define       bGbl_PWM3Cntl_SL                             1
    #define   MSK32Gbl_PWM3Cntl_SL                                0x00000040

    #define     BA_Gbl_PWM3Cntl_ST                             0x887C
    #define     B16Gbl_PWM3Cntl_ST                             0x887C
    #define   LSb32Gbl_PWM3Cntl_ST                                7
    #define   LSb16Gbl_PWM3Cntl_ST                                7
    #define       bGbl_PWM3Cntl_ST                             1
    #define   MSK32Gbl_PWM3Cntl_ST                                0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A0Cntl                             0x8880

    #define     BA_Gbl_GPIO_A0Cntl_DS0                         0x8880
    #define     B16Gbl_GPIO_A0Cntl_DS0                         0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A0Cntl_DS0                            0
    #define       bGbl_GPIO_A0Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A0Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A0Cntl_DS1                         0x8880
    #define     B16Gbl_GPIO_A0Cntl_DS1                         0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A0Cntl_DS1                            1
    #define       bGbl_GPIO_A0Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A0Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A0Cntl_DS2                         0x8880
    #define     B16Gbl_GPIO_A0Cntl_DS2                         0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A0Cntl_DS2                            2
    #define       bGbl_GPIO_A0Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A0Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A0Cntl_IE                          0x8880
    #define     B16Gbl_GPIO_A0Cntl_IE                          0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_IE                             3
    #define   LSb16Gbl_GPIO_A0Cntl_IE                             3
    #define       bGbl_GPIO_A0Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A0Cntl_IE                             0x00000008

    #define     BA_Gbl_GPIO_A0Cntl_PD                          0x8880
    #define     B16Gbl_GPIO_A0Cntl_PD                          0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_PD                             4
    #define   LSb16Gbl_GPIO_A0Cntl_PD                             4
    #define       bGbl_GPIO_A0Cntl_PD                          1
    #define   MSK32Gbl_GPIO_A0Cntl_PD                             0x00000010

    #define     BA_Gbl_GPIO_A0Cntl_PU                          0x8880
    #define     B16Gbl_GPIO_A0Cntl_PU                          0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_PU                             5
    #define   LSb16Gbl_GPIO_A0Cntl_PU                             5
    #define       bGbl_GPIO_A0Cntl_PU                          1
    #define   MSK32Gbl_GPIO_A0Cntl_PU                             0x00000020

    #define     BA_Gbl_GPIO_A0Cntl_SL                          0x8880
    #define     B16Gbl_GPIO_A0Cntl_SL                          0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_SL                             6
    #define   LSb16Gbl_GPIO_A0Cntl_SL                             6
    #define       bGbl_GPIO_A0Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A0Cntl_SL                             0x00000040

    #define     BA_Gbl_GPIO_A0Cntl_ST                          0x8880
    #define     B16Gbl_GPIO_A0Cntl_ST                          0x8880
    #define   LSb32Gbl_GPIO_A0Cntl_ST                             7
    #define   LSb16Gbl_GPIO_A0Cntl_ST                             7
    #define       bGbl_GPIO_A0Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A0Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A1Cntl                             0x8884

    #define     BA_Gbl_GPIO_A1Cntl_DS0                         0x8884
    #define     B16Gbl_GPIO_A1Cntl_DS0                         0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A1Cntl_DS0                            0
    #define       bGbl_GPIO_A1Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A1Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A1Cntl_DS1                         0x8884
    #define     B16Gbl_GPIO_A1Cntl_DS1                         0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A1Cntl_DS1                            1
    #define       bGbl_GPIO_A1Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A1Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A1Cntl_DS2                         0x8884
    #define     B16Gbl_GPIO_A1Cntl_DS2                         0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A1Cntl_DS2                            2
    #define       bGbl_GPIO_A1Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A1Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A1Cntl_IE                          0x8884
    #define     B16Gbl_GPIO_A1Cntl_IE                          0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_IE                             3
    #define   LSb16Gbl_GPIO_A1Cntl_IE                             3
    #define       bGbl_GPIO_A1Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A1Cntl_IE                             0x00000008

    #define     BA_Gbl_GPIO_A1Cntl_PD                          0x8884
    #define     B16Gbl_GPIO_A1Cntl_PD                          0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_PD                             4
    #define   LSb16Gbl_GPIO_A1Cntl_PD                             4
    #define       bGbl_GPIO_A1Cntl_PD                          1
    #define   MSK32Gbl_GPIO_A1Cntl_PD                             0x00000010

    #define     BA_Gbl_GPIO_A1Cntl_PU                          0x8884
    #define     B16Gbl_GPIO_A1Cntl_PU                          0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_PU                             5
    #define   LSb16Gbl_GPIO_A1Cntl_PU                             5
    #define       bGbl_GPIO_A1Cntl_PU                          1
    #define   MSK32Gbl_GPIO_A1Cntl_PU                             0x00000020

    #define     BA_Gbl_GPIO_A1Cntl_SL                          0x8884
    #define     B16Gbl_GPIO_A1Cntl_SL                          0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_SL                             6
    #define   LSb16Gbl_GPIO_A1Cntl_SL                             6
    #define       bGbl_GPIO_A1Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A1Cntl_SL                             0x00000040

    #define     BA_Gbl_GPIO_A1Cntl_ST                          0x8884
    #define     B16Gbl_GPIO_A1Cntl_ST                          0x8884
    #define   LSb32Gbl_GPIO_A1Cntl_ST                             7
    #define   LSb16Gbl_GPIO_A1Cntl_ST                             7
    #define       bGbl_GPIO_A1Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A1Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A2Cntl                             0x8888

    #define     BA_Gbl_GPIO_A2Cntl_DS0                         0x8888
    #define     B16Gbl_GPIO_A2Cntl_DS0                         0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A2Cntl_DS0                            0
    #define       bGbl_GPIO_A2Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A2Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A2Cntl_DS1                         0x8888
    #define     B16Gbl_GPIO_A2Cntl_DS1                         0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A2Cntl_DS1                            1
    #define       bGbl_GPIO_A2Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A2Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A2Cntl_DS2                         0x8888
    #define     B16Gbl_GPIO_A2Cntl_DS2                         0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A2Cntl_DS2                            2
    #define       bGbl_GPIO_A2Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A2Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A2Cntl_IE                          0x8888
    #define     B16Gbl_GPIO_A2Cntl_IE                          0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_IE                             3
    #define   LSb16Gbl_GPIO_A2Cntl_IE                             3
    #define       bGbl_GPIO_A2Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A2Cntl_IE                             0x00000008

    #define     BA_Gbl_GPIO_A2Cntl_PD                          0x8888
    #define     B16Gbl_GPIO_A2Cntl_PD                          0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_PD                             4
    #define   LSb16Gbl_GPIO_A2Cntl_PD                             4
    #define       bGbl_GPIO_A2Cntl_PD                          1
    #define   MSK32Gbl_GPIO_A2Cntl_PD                             0x00000010

    #define     BA_Gbl_GPIO_A2Cntl_PU                          0x8888
    #define     B16Gbl_GPIO_A2Cntl_PU                          0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_PU                             5
    #define   LSb16Gbl_GPIO_A2Cntl_PU                             5
    #define       bGbl_GPIO_A2Cntl_PU                          1
    #define   MSK32Gbl_GPIO_A2Cntl_PU                             0x00000020

    #define     BA_Gbl_GPIO_A2Cntl_SL                          0x8888
    #define     B16Gbl_GPIO_A2Cntl_SL                          0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_SL                             6
    #define   LSb16Gbl_GPIO_A2Cntl_SL                             6
    #define       bGbl_GPIO_A2Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A2Cntl_SL                             0x00000040

    #define     BA_Gbl_GPIO_A2Cntl_ST                          0x8888
    #define     B16Gbl_GPIO_A2Cntl_ST                          0x8888
    #define   LSb32Gbl_GPIO_A2Cntl_ST                             7
    #define   LSb16Gbl_GPIO_A2Cntl_ST                             7
    #define       bGbl_GPIO_A2Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A2Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A3Cntl                             0x888C

    #define     BA_Gbl_GPIO_A3Cntl_DS0                         0x888C
    #define     B16Gbl_GPIO_A3Cntl_DS0                         0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A3Cntl_DS0                            0
    #define       bGbl_GPIO_A3Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A3Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A3Cntl_DS1                         0x888C
    #define     B16Gbl_GPIO_A3Cntl_DS1                         0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A3Cntl_DS1                            1
    #define       bGbl_GPIO_A3Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A3Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A3Cntl_DS2                         0x888C
    #define     B16Gbl_GPIO_A3Cntl_DS2                         0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A3Cntl_DS2                            2
    #define       bGbl_GPIO_A3Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A3Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A3Cntl_DS3                         0x888C
    #define     B16Gbl_GPIO_A3Cntl_DS3                         0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_DS3                            3
    #define   LSb16Gbl_GPIO_A3Cntl_DS3                            3
    #define       bGbl_GPIO_A3Cntl_DS3                         1
    #define   MSK32Gbl_GPIO_A3Cntl_DS3                            0x00000008

    #define     BA_Gbl_GPIO_A3Cntl_IE                          0x888C
    #define     B16Gbl_GPIO_A3Cntl_IE                          0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_IE                             4
    #define   LSb16Gbl_GPIO_A3Cntl_IE                             4
    #define       bGbl_GPIO_A3Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A3Cntl_IE                             0x00000010

    #define     BA_Gbl_GPIO_A3Cntl_PE                          0x888C
    #define     B16Gbl_GPIO_A3Cntl_PE                          0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_PE                             5
    #define   LSb16Gbl_GPIO_A3Cntl_PE                             5
    #define       bGbl_GPIO_A3Cntl_PE                          1
    #define   MSK32Gbl_GPIO_A3Cntl_PE                             0x00000020

    #define     BA_Gbl_GPIO_A3Cntl_PS                          0x888C
    #define     B16Gbl_GPIO_A3Cntl_PS                          0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_PS                             6
    #define   LSb16Gbl_GPIO_A3Cntl_PS                             6
    #define       bGbl_GPIO_A3Cntl_PS                          1
    #define   MSK32Gbl_GPIO_A3Cntl_PS                             0x00000040

    #define     BA_Gbl_GPIO_A3Cntl_SL                          0x888C
    #define     B16Gbl_GPIO_A3Cntl_SL                          0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_SL                             7
    #define   LSb16Gbl_GPIO_A3Cntl_SL                             7
    #define       bGbl_GPIO_A3Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A3Cntl_SL                             0x00000080

    #define     BA_Gbl_GPIO_A3Cntl_SPU                         0x888D
    #define     B16Gbl_GPIO_A3Cntl_SPU                         0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_SPU                            8
    #define   LSb16Gbl_GPIO_A3Cntl_SPU                            8
    #define       bGbl_GPIO_A3Cntl_SPU                         1
    #define   MSK32Gbl_GPIO_A3Cntl_SPU                            0x00000100

    #define     BA_Gbl_GPIO_A3Cntl_ST                          0x888D
    #define     B16Gbl_GPIO_A3Cntl_ST                          0x888C
    #define   LSb32Gbl_GPIO_A3Cntl_ST                             9
    #define   LSb16Gbl_GPIO_A3Cntl_ST                             9
    #define       bGbl_GPIO_A3Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A3Cntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USB2_DRV_VBUSCntl                       0x8890

    #define     BA_Gbl_USB2_DRV_VBUSCntl_DS0                   0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_DS0                   0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_DS0                      0
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_DS0                      0
    #define       bGbl_USB2_DRV_VBUSCntl_DS0                   1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_DS0                      0x00000001

    #define     BA_Gbl_USB2_DRV_VBUSCntl_DS1                   0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_DS1                   0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_DS1                      1
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_DS1                      1
    #define       bGbl_USB2_DRV_VBUSCntl_DS1                   1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_DS1                      0x00000002

    #define     BA_Gbl_USB2_DRV_VBUSCntl_DS2                   0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_DS2                   0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_DS2                      2
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_DS2                      2
    #define       bGbl_USB2_DRV_VBUSCntl_DS2                   1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_DS2                      0x00000004

    #define     BA_Gbl_USB2_DRV_VBUSCntl_IE                    0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_IE                    0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_IE                       3
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_IE                       3
    #define       bGbl_USB2_DRV_VBUSCntl_IE                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_IE                       0x00000008

    #define     BA_Gbl_USB2_DRV_VBUSCntl_PD                    0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_PD                    0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_PD                       4
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_PD                       4
    #define       bGbl_USB2_DRV_VBUSCntl_PD                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_PD                       0x00000010

    #define     BA_Gbl_USB2_DRV_VBUSCntl_PU                    0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_PU                    0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_PU                       5
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_PU                       5
    #define       bGbl_USB2_DRV_VBUSCntl_PU                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_PU                       0x00000020

    #define     BA_Gbl_USB2_DRV_VBUSCntl_SL                    0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_SL                    0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_SL                       6
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_SL                       6
    #define       bGbl_USB2_DRV_VBUSCntl_SL                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_SL                       0x00000040

    #define     BA_Gbl_USB2_DRV_VBUSCntl_ST                    0x8890
    #define     B16Gbl_USB2_DRV_VBUSCntl_ST                    0x8890
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_ST                       7
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_ST                       7
    #define       bGbl_USB2_DRV_VBUSCntl_ST                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_ST                       0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SDIO_CDnCntl                            0x8894

    #define     BA_Gbl_SDIO_CDnCntl_DS0                        0x8894
    #define     B16Gbl_SDIO_CDnCntl_DS0                        0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_DS0                           0
    #define   LSb16Gbl_SDIO_CDnCntl_DS0                           0
    #define       bGbl_SDIO_CDnCntl_DS0                        1
    #define   MSK32Gbl_SDIO_CDnCntl_DS0                           0x00000001

    #define     BA_Gbl_SDIO_CDnCntl_DS1                        0x8894
    #define     B16Gbl_SDIO_CDnCntl_DS1                        0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_DS1                           1
    #define   LSb16Gbl_SDIO_CDnCntl_DS1                           1
    #define       bGbl_SDIO_CDnCntl_DS1                        1
    #define   MSK32Gbl_SDIO_CDnCntl_DS1                           0x00000002

    #define     BA_Gbl_SDIO_CDnCntl_DS2                        0x8894
    #define     B16Gbl_SDIO_CDnCntl_DS2                        0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_DS2                           2
    #define   LSb16Gbl_SDIO_CDnCntl_DS2                           2
    #define       bGbl_SDIO_CDnCntl_DS2                        1
    #define   MSK32Gbl_SDIO_CDnCntl_DS2                           0x00000004

    #define     BA_Gbl_SDIO_CDnCntl_IE                         0x8894
    #define     B16Gbl_SDIO_CDnCntl_IE                         0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_IE                            3
    #define   LSb16Gbl_SDIO_CDnCntl_IE                            3
    #define       bGbl_SDIO_CDnCntl_IE                         1
    #define   MSK32Gbl_SDIO_CDnCntl_IE                            0x00000008

    #define     BA_Gbl_SDIO_CDnCntl_PD                         0x8894
    #define     B16Gbl_SDIO_CDnCntl_PD                         0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_PD                            4
    #define   LSb16Gbl_SDIO_CDnCntl_PD                            4
    #define       bGbl_SDIO_CDnCntl_PD                         1
    #define   MSK32Gbl_SDIO_CDnCntl_PD                            0x00000010

    #define     BA_Gbl_SDIO_CDnCntl_PU                         0x8894
    #define     B16Gbl_SDIO_CDnCntl_PU                         0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_PU                            5
    #define   LSb16Gbl_SDIO_CDnCntl_PU                            5
    #define       bGbl_SDIO_CDnCntl_PU                         1
    #define   MSK32Gbl_SDIO_CDnCntl_PU                            0x00000020

    #define     BA_Gbl_SDIO_CDnCntl_SL                         0x8894
    #define     B16Gbl_SDIO_CDnCntl_SL                         0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_SL                            6
    #define   LSb16Gbl_SDIO_CDnCntl_SL                            6
    #define       bGbl_SDIO_CDnCntl_SL                         1
    #define   MSK32Gbl_SDIO_CDnCntl_SL                            0x00000040

    #define     BA_Gbl_SDIO_CDnCntl_ST                         0x8894
    #define     B16Gbl_SDIO_CDnCntl_ST                         0x8894
    #define   LSb32Gbl_SDIO_CDnCntl_ST                            7
    #define   LSb16Gbl_SDIO_CDnCntl_ST                            7
    #define       bGbl_SDIO_CDnCntl_ST                         1
    #define   MSK32Gbl_SDIO_CDnCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SDIO_WPCntl                             0x8898

    #define     BA_Gbl_SDIO_WPCntl_DS0                         0x8898
    #define     B16Gbl_SDIO_WPCntl_DS0                         0x8898
    #define   LSb32Gbl_SDIO_WPCntl_DS0                            0
    #define   LSb16Gbl_SDIO_WPCntl_DS0                            0
    #define       bGbl_SDIO_WPCntl_DS0                         1
    #define   MSK32Gbl_SDIO_WPCntl_DS0                            0x00000001

    #define     BA_Gbl_SDIO_WPCntl_DS1                         0x8898
    #define     B16Gbl_SDIO_WPCntl_DS1                         0x8898
    #define   LSb32Gbl_SDIO_WPCntl_DS1                            1
    #define   LSb16Gbl_SDIO_WPCntl_DS1                            1
    #define       bGbl_SDIO_WPCntl_DS1                         1
    #define   MSK32Gbl_SDIO_WPCntl_DS1                            0x00000002

    #define     BA_Gbl_SDIO_WPCntl_DS2                         0x8898
    #define     B16Gbl_SDIO_WPCntl_DS2                         0x8898
    #define   LSb32Gbl_SDIO_WPCntl_DS2                            2
    #define   LSb16Gbl_SDIO_WPCntl_DS2                            2
    #define       bGbl_SDIO_WPCntl_DS2                         1
    #define   MSK32Gbl_SDIO_WPCntl_DS2                            0x00000004

    #define     BA_Gbl_SDIO_WPCntl_DS3                         0x8898
    #define     B16Gbl_SDIO_WPCntl_DS3                         0x8898
    #define   LSb32Gbl_SDIO_WPCntl_DS3                            3
    #define   LSb16Gbl_SDIO_WPCntl_DS3                            3
    #define       bGbl_SDIO_WPCntl_DS3                         1
    #define   MSK32Gbl_SDIO_WPCntl_DS3                            0x00000008

    #define     BA_Gbl_SDIO_WPCntl_IE                          0x8898
    #define     B16Gbl_SDIO_WPCntl_IE                          0x8898
    #define   LSb32Gbl_SDIO_WPCntl_IE                             4
    #define   LSb16Gbl_SDIO_WPCntl_IE                             4
    #define       bGbl_SDIO_WPCntl_IE                          1
    #define   MSK32Gbl_SDIO_WPCntl_IE                             0x00000010

    #define     BA_Gbl_SDIO_WPCntl_PE                          0x8898
    #define     B16Gbl_SDIO_WPCntl_PE                          0x8898
    #define   LSb32Gbl_SDIO_WPCntl_PE                             5
    #define   LSb16Gbl_SDIO_WPCntl_PE                             5
    #define       bGbl_SDIO_WPCntl_PE                          1
    #define   MSK32Gbl_SDIO_WPCntl_PE                             0x00000020

    #define     BA_Gbl_SDIO_WPCntl_PS                          0x8898
    #define     B16Gbl_SDIO_WPCntl_PS                          0x8898
    #define   LSb32Gbl_SDIO_WPCntl_PS                             6
    #define   LSb16Gbl_SDIO_WPCntl_PS                             6
    #define       bGbl_SDIO_WPCntl_PS                          1
    #define   MSK32Gbl_SDIO_WPCntl_PS                             0x00000040

    #define     BA_Gbl_SDIO_WPCntl_SL                          0x8898
    #define     B16Gbl_SDIO_WPCntl_SL                          0x8898
    #define   LSb32Gbl_SDIO_WPCntl_SL                             7
    #define   LSb16Gbl_SDIO_WPCntl_SL                             7
    #define       bGbl_SDIO_WPCntl_SL                          1
    #define   MSK32Gbl_SDIO_WPCntl_SL                             0x00000080

    #define     BA_Gbl_SDIO_WPCntl_SPU                         0x8899
    #define     B16Gbl_SDIO_WPCntl_SPU                         0x8898
    #define   LSb32Gbl_SDIO_WPCntl_SPU                            8
    #define   LSb16Gbl_SDIO_WPCntl_SPU                            8
    #define       bGbl_SDIO_WPCntl_SPU                         1
    #define   MSK32Gbl_SDIO_WPCntl_SPU                            0x00000100

    #define     BA_Gbl_SDIO_WPCntl_ST                          0x8899
    #define     B16Gbl_SDIO_WPCntl_ST                          0x8898
    #define   LSb32Gbl_SDIO_WPCntl_ST                             9
    #define   LSb16Gbl_SDIO_WPCntl_ST                             9
    #define       bGbl_SDIO_WPCntl_ST                          1
    #define   MSK32Gbl_SDIO_WPCntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_NFALECntl                               0x889C

    #define     BA_Gbl_NFALECntl_DS0                           0x889C
    #define     B16Gbl_NFALECntl_DS0                           0x889C
    #define   LSb32Gbl_NFALECntl_DS0                              0
    #define   LSb16Gbl_NFALECntl_DS0                              0
    #define       bGbl_NFALECntl_DS0                           1
    #define   MSK32Gbl_NFALECntl_DS0                              0x00000001

    #define     BA_Gbl_NFALECntl_DS1                           0x889C
    #define     B16Gbl_NFALECntl_DS1                           0x889C
    #define   LSb32Gbl_NFALECntl_DS1                              1
    #define   LSb16Gbl_NFALECntl_DS1                              1
    #define       bGbl_NFALECntl_DS1                           1
    #define   MSK32Gbl_NFALECntl_DS1                              0x00000002

    #define     BA_Gbl_NFALECntl_DS2                           0x889C
    #define     B16Gbl_NFALECntl_DS2                           0x889C
    #define   LSb32Gbl_NFALECntl_DS2                              2
    #define   LSb16Gbl_NFALECntl_DS2                              2
    #define       bGbl_NFALECntl_DS2                           1
    #define   MSK32Gbl_NFALECntl_DS2                              0x00000004

    #define     BA_Gbl_NFALECntl_IE                            0x889C
    #define     B16Gbl_NFALECntl_IE                            0x889C
    #define   LSb32Gbl_NFALECntl_IE                               3
    #define   LSb16Gbl_NFALECntl_IE                               3
    #define       bGbl_NFALECntl_IE                            1
    #define   MSK32Gbl_NFALECntl_IE                               0x00000008

    #define     BA_Gbl_NFALECntl_PD                            0x889C
    #define     B16Gbl_NFALECntl_PD                            0x889C
    #define   LSb32Gbl_NFALECntl_PD                               4
    #define   LSb16Gbl_NFALECntl_PD                               4
    #define       bGbl_NFALECntl_PD                            1
    #define   MSK32Gbl_NFALECntl_PD                               0x00000010

    #define     BA_Gbl_NFALECntl_PU                            0x889C
    #define     B16Gbl_NFALECntl_PU                            0x889C
    #define   LSb32Gbl_NFALECntl_PU                               5
    #define   LSb16Gbl_NFALECntl_PU                               5
    #define       bGbl_NFALECntl_PU                            1
    #define   MSK32Gbl_NFALECntl_PU                               0x00000020

    #define     BA_Gbl_NFALECntl_SL                            0x889C
    #define     B16Gbl_NFALECntl_SL                            0x889C
    #define   LSb32Gbl_NFALECntl_SL                               6
    #define   LSb16Gbl_NFALECntl_SL                               6
    #define       bGbl_NFALECntl_SL                            1
    #define   MSK32Gbl_NFALECntl_SL                               0x00000040

    #define     BA_Gbl_NFALECntl_ST                            0x889C
    #define     B16Gbl_NFALECntl_ST                            0x889C
    #define   LSb32Gbl_NFALECntl_ST                               7
    #define   LSb16Gbl_NFALECntl_ST                               7
    #define       bGbl_NFALECntl_ST                            1
    #define   MSK32Gbl_NFALECntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_NFLCSCntl                               0x88A0

    #define     BA_Gbl_NFLCSCntl_DS0                           0x88A0
    #define     B16Gbl_NFLCSCntl_DS0                           0x88A0
    #define   LSb32Gbl_NFLCSCntl_DS0                              0
    #define   LSb16Gbl_NFLCSCntl_DS0                              0
    #define       bGbl_NFLCSCntl_DS0                           1
    #define   MSK32Gbl_NFLCSCntl_DS0                              0x00000001

    #define     BA_Gbl_NFLCSCntl_DS1                           0x88A0
    #define     B16Gbl_NFLCSCntl_DS1                           0x88A0
    #define   LSb32Gbl_NFLCSCntl_DS1                              1
    #define   LSb16Gbl_NFLCSCntl_DS1                              1
    #define       bGbl_NFLCSCntl_DS1                           1
    #define   MSK32Gbl_NFLCSCntl_DS1                              0x00000002

    #define     BA_Gbl_NFLCSCntl_DS2                           0x88A0
    #define     B16Gbl_NFLCSCntl_DS2                           0x88A0
    #define   LSb32Gbl_NFLCSCntl_DS2                              2
    #define   LSb16Gbl_NFLCSCntl_DS2                              2
    #define       bGbl_NFLCSCntl_DS2                           1
    #define   MSK32Gbl_NFLCSCntl_DS2                              0x00000004

    #define     BA_Gbl_NFLCSCntl_IE                            0x88A0
    #define     B16Gbl_NFLCSCntl_IE                            0x88A0
    #define   LSb32Gbl_NFLCSCntl_IE                               3
    #define   LSb16Gbl_NFLCSCntl_IE                               3
    #define       bGbl_NFLCSCntl_IE                            1
    #define   MSK32Gbl_NFLCSCntl_IE                               0x00000008

    #define     BA_Gbl_NFLCSCntl_PD                            0x88A0
    #define     B16Gbl_NFLCSCntl_PD                            0x88A0
    #define   LSb32Gbl_NFLCSCntl_PD                               4
    #define   LSb16Gbl_NFLCSCntl_PD                               4
    #define       bGbl_NFLCSCntl_PD                            1
    #define   MSK32Gbl_NFLCSCntl_PD                               0x00000010

    #define     BA_Gbl_NFLCSCntl_PU                            0x88A0
    #define     B16Gbl_NFLCSCntl_PU                            0x88A0
    #define   LSb32Gbl_NFLCSCntl_PU                               5
    #define   LSb16Gbl_NFLCSCntl_PU                               5
    #define       bGbl_NFLCSCntl_PU                            1
    #define   MSK32Gbl_NFLCSCntl_PU                               0x00000020

    #define     BA_Gbl_NFLCSCntl_SL                            0x88A0
    #define     B16Gbl_NFLCSCntl_SL                            0x88A0
    #define   LSb32Gbl_NFLCSCntl_SL                               6
    #define   LSb16Gbl_NFLCSCntl_SL                               6
    #define       bGbl_NFLCSCntl_SL                            1
    #define   MSK32Gbl_NFLCSCntl_SL                               0x00000040

    #define     BA_Gbl_NFLCSCntl_ST                            0x88A0
    #define     B16Gbl_NFLCSCntl_ST                            0x88A0
    #define   LSb32Gbl_NFLCSCntl_ST                               7
    #define   LSb16Gbl_NFLCSCntl_ST                               7
    #define       bGbl_NFLCSCntl_ST                            1
    #define   MSK32Gbl_NFLCSCntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMII_CLK_OUTCntl                       0x88A4

    #define     BA_Gbl_RGMII_CLK_OUTCntl_DS0                   0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_DS0                   0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_DS0                      0
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_DS0                      0
    #define       bGbl_RGMII_CLK_OUTCntl_DS0                   1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_DS0                      0x00000001

    #define     BA_Gbl_RGMII_CLK_OUTCntl_DS1                   0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_DS1                   0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_DS1                      1
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_DS1                      1
    #define       bGbl_RGMII_CLK_OUTCntl_DS1                   1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_DS1                      0x00000002

    #define     BA_Gbl_RGMII_CLK_OUTCntl_DS2                   0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_DS2                   0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_DS2                      2
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_DS2                      2
    #define       bGbl_RGMII_CLK_OUTCntl_DS2                   1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_DS2                      0x00000004

    #define     BA_Gbl_RGMII_CLK_OUTCntl_IE                    0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_IE                    0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_IE                       3
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_IE                       3
    #define       bGbl_RGMII_CLK_OUTCntl_IE                    1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_IE                       0x00000008

    #define     BA_Gbl_RGMII_CLK_OUTCntl_PD                    0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_PD                    0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_PD                       4
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_PD                       4
    #define       bGbl_RGMII_CLK_OUTCntl_PD                    1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_PD                       0x00000010

    #define     BA_Gbl_RGMII_CLK_OUTCntl_PU                    0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_PU                    0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_PU                       5
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_PU                       5
    #define       bGbl_RGMII_CLK_OUTCntl_PU                    1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_PU                       0x00000020

    #define     BA_Gbl_RGMII_CLK_OUTCntl_SL                    0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_SL                    0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_SL                       6
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_SL                       6
    #define       bGbl_RGMII_CLK_OUTCntl_SL                    1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_SL                       0x00000040

    #define     BA_Gbl_RGMII_CLK_OUTCntl_ST                    0x88A4
    #define     B16Gbl_RGMII_CLK_OUTCntl_ST                    0x88A4
    #define   LSb32Gbl_RGMII_CLK_OUTCntl_ST                       7
    #define   LSb16Gbl_RGMII_CLK_OUTCntl_ST                       7
    #define       bGbl_RGMII_CLK_OUTCntl_ST                    1
    #define   MSK32Gbl_RGMII_CLK_OUTCntl_ST                       0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIITXCCntl                            0x88A8

    #define     BA_Gbl_RGMIITXCCntl_DS0                        0x88A8
    #define     B16Gbl_RGMIITXCCntl_DS0                        0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_DS0                           0
    #define   LSb16Gbl_RGMIITXCCntl_DS0                           0
    #define       bGbl_RGMIITXCCntl_DS0                        1
    #define   MSK32Gbl_RGMIITXCCntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIITXCCntl_DS1                        0x88A8
    #define     B16Gbl_RGMIITXCCntl_DS1                        0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_DS1                           1
    #define   LSb16Gbl_RGMIITXCCntl_DS1                           1
    #define       bGbl_RGMIITXCCntl_DS1                        1
    #define   MSK32Gbl_RGMIITXCCntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIITXCCntl_DS2                        0x88A8
    #define     B16Gbl_RGMIITXCCntl_DS2                        0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_DS2                           2
    #define   LSb16Gbl_RGMIITXCCntl_DS2                           2
    #define       bGbl_RGMIITXCCntl_DS2                        1
    #define   MSK32Gbl_RGMIITXCCntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIITXCCntl_IE                         0x88A8
    #define     B16Gbl_RGMIITXCCntl_IE                         0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_IE                            3
    #define   LSb16Gbl_RGMIITXCCntl_IE                            3
    #define       bGbl_RGMIITXCCntl_IE                         1
    #define   MSK32Gbl_RGMIITXCCntl_IE                            0x00000008

    #define     BA_Gbl_RGMIITXCCntl_PD                         0x88A8
    #define     B16Gbl_RGMIITXCCntl_PD                         0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_PD                            4
    #define   LSb16Gbl_RGMIITXCCntl_PD                            4
    #define       bGbl_RGMIITXCCntl_PD                         1
    #define   MSK32Gbl_RGMIITXCCntl_PD                            0x00000010

    #define     BA_Gbl_RGMIITXCCntl_PU                         0x88A8
    #define     B16Gbl_RGMIITXCCntl_PU                         0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_PU                            5
    #define   LSb16Gbl_RGMIITXCCntl_PU                            5
    #define       bGbl_RGMIITXCCntl_PU                         1
    #define   MSK32Gbl_RGMIITXCCntl_PU                            0x00000020

    #define     BA_Gbl_RGMIITXCCntl_SL                         0x88A8
    #define     B16Gbl_RGMIITXCCntl_SL                         0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_SL                            6
    #define   LSb16Gbl_RGMIITXCCntl_SL                            6
    #define       bGbl_RGMIITXCCntl_SL                         1
    #define   MSK32Gbl_RGMIITXCCntl_SL                            0x00000040

    #define     BA_Gbl_RGMIITXCCntl_ST                         0x88A8
    #define     B16Gbl_RGMIITXCCntl_ST                         0x88A8
    #define   LSb32Gbl_RGMIITXCCntl_ST                            7
    #define   LSb16Gbl_RGMIITXCCntl_ST                            7
    #define       bGbl_RGMIITXCCntl_ST                         1
    #define   MSK32Gbl_RGMIITXCCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIITD0Cntl                            0x88AC

    #define     BA_Gbl_RGMIITD0Cntl_DS0                        0x88AC
    #define     B16Gbl_RGMIITD0Cntl_DS0                        0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_DS0                           0
    #define   LSb16Gbl_RGMIITD0Cntl_DS0                           0
    #define       bGbl_RGMIITD0Cntl_DS0                        1
    #define   MSK32Gbl_RGMIITD0Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIITD0Cntl_DS1                        0x88AC
    #define     B16Gbl_RGMIITD0Cntl_DS1                        0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_DS1                           1
    #define   LSb16Gbl_RGMIITD0Cntl_DS1                           1
    #define       bGbl_RGMIITD0Cntl_DS1                        1
    #define   MSK32Gbl_RGMIITD0Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIITD0Cntl_DS2                        0x88AC
    #define     B16Gbl_RGMIITD0Cntl_DS2                        0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_DS2                           2
    #define   LSb16Gbl_RGMIITD0Cntl_DS2                           2
    #define       bGbl_RGMIITD0Cntl_DS2                        1
    #define   MSK32Gbl_RGMIITD0Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIITD0Cntl_IE                         0x88AC
    #define     B16Gbl_RGMIITD0Cntl_IE                         0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_IE                            3
    #define   LSb16Gbl_RGMIITD0Cntl_IE                            3
    #define       bGbl_RGMIITD0Cntl_IE                         1
    #define   MSK32Gbl_RGMIITD0Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIITD0Cntl_PD                         0x88AC
    #define     B16Gbl_RGMIITD0Cntl_PD                         0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_PD                            4
    #define   LSb16Gbl_RGMIITD0Cntl_PD                            4
    #define       bGbl_RGMIITD0Cntl_PD                         1
    #define   MSK32Gbl_RGMIITD0Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIITD0Cntl_PU                         0x88AC
    #define     B16Gbl_RGMIITD0Cntl_PU                         0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_PU                            5
    #define   LSb16Gbl_RGMIITD0Cntl_PU                            5
    #define       bGbl_RGMIITD0Cntl_PU                         1
    #define   MSK32Gbl_RGMIITD0Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIITD0Cntl_SL                         0x88AC
    #define     B16Gbl_RGMIITD0Cntl_SL                         0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_SL                            6
    #define   LSb16Gbl_RGMIITD0Cntl_SL                            6
    #define       bGbl_RGMIITD0Cntl_SL                         1
    #define   MSK32Gbl_RGMIITD0Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIITD0Cntl_ST                         0x88AC
    #define     B16Gbl_RGMIITD0Cntl_ST                         0x88AC
    #define   LSb32Gbl_RGMIITD0Cntl_ST                            7
    #define   LSb16Gbl_RGMIITD0Cntl_ST                            7
    #define       bGbl_RGMIITD0Cntl_ST                         1
    #define   MSK32Gbl_RGMIITD0Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIITD1Cntl                            0x88B0

    #define     BA_Gbl_RGMIITD1Cntl_DS0                        0x88B0
    #define     B16Gbl_RGMIITD1Cntl_DS0                        0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_DS0                           0
    #define   LSb16Gbl_RGMIITD1Cntl_DS0                           0
    #define       bGbl_RGMIITD1Cntl_DS0                        1
    #define   MSK32Gbl_RGMIITD1Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIITD1Cntl_DS1                        0x88B0
    #define     B16Gbl_RGMIITD1Cntl_DS1                        0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_DS1                           1
    #define   LSb16Gbl_RGMIITD1Cntl_DS1                           1
    #define       bGbl_RGMIITD1Cntl_DS1                        1
    #define   MSK32Gbl_RGMIITD1Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIITD1Cntl_DS2                        0x88B0
    #define     B16Gbl_RGMIITD1Cntl_DS2                        0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_DS2                           2
    #define   LSb16Gbl_RGMIITD1Cntl_DS2                           2
    #define       bGbl_RGMIITD1Cntl_DS2                        1
    #define   MSK32Gbl_RGMIITD1Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIITD1Cntl_IE                         0x88B0
    #define     B16Gbl_RGMIITD1Cntl_IE                         0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_IE                            3
    #define   LSb16Gbl_RGMIITD1Cntl_IE                            3
    #define       bGbl_RGMIITD1Cntl_IE                         1
    #define   MSK32Gbl_RGMIITD1Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIITD1Cntl_PD                         0x88B0
    #define     B16Gbl_RGMIITD1Cntl_PD                         0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_PD                            4
    #define   LSb16Gbl_RGMIITD1Cntl_PD                            4
    #define       bGbl_RGMIITD1Cntl_PD                         1
    #define   MSK32Gbl_RGMIITD1Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIITD1Cntl_PU                         0x88B0
    #define     B16Gbl_RGMIITD1Cntl_PU                         0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_PU                            5
    #define   LSb16Gbl_RGMIITD1Cntl_PU                            5
    #define       bGbl_RGMIITD1Cntl_PU                         1
    #define   MSK32Gbl_RGMIITD1Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIITD1Cntl_SL                         0x88B0
    #define     B16Gbl_RGMIITD1Cntl_SL                         0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_SL                            6
    #define   LSb16Gbl_RGMIITD1Cntl_SL                            6
    #define       bGbl_RGMIITD1Cntl_SL                         1
    #define   MSK32Gbl_RGMIITD1Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIITD1Cntl_ST                         0x88B0
    #define     B16Gbl_RGMIITD1Cntl_ST                         0x88B0
    #define   LSb32Gbl_RGMIITD1Cntl_ST                            7
    #define   LSb16Gbl_RGMIITD1Cntl_ST                            7
    #define       bGbl_RGMIITD1Cntl_ST                         1
    #define   MSK32Gbl_RGMIITD1Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIITD2Cntl                            0x88B4

    #define     BA_Gbl_RGMIITD2Cntl_DS0                        0x88B4
    #define     B16Gbl_RGMIITD2Cntl_DS0                        0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_DS0                           0
    #define   LSb16Gbl_RGMIITD2Cntl_DS0                           0
    #define       bGbl_RGMIITD2Cntl_DS0                        1
    #define   MSK32Gbl_RGMIITD2Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIITD2Cntl_DS1                        0x88B4
    #define     B16Gbl_RGMIITD2Cntl_DS1                        0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_DS1                           1
    #define   LSb16Gbl_RGMIITD2Cntl_DS1                           1
    #define       bGbl_RGMIITD2Cntl_DS1                        1
    #define   MSK32Gbl_RGMIITD2Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIITD2Cntl_DS2                        0x88B4
    #define     B16Gbl_RGMIITD2Cntl_DS2                        0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_DS2                           2
    #define   LSb16Gbl_RGMIITD2Cntl_DS2                           2
    #define       bGbl_RGMIITD2Cntl_DS2                        1
    #define   MSK32Gbl_RGMIITD2Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIITD2Cntl_IE                         0x88B4
    #define     B16Gbl_RGMIITD2Cntl_IE                         0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_IE                            3
    #define   LSb16Gbl_RGMIITD2Cntl_IE                            3
    #define       bGbl_RGMIITD2Cntl_IE                         1
    #define   MSK32Gbl_RGMIITD2Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIITD2Cntl_PD                         0x88B4
    #define     B16Gbl_RGMIITD2Cntl_PD                         0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_PD                            4
    #define   LSb16Gbl_RGMIITD2Cntl_PD                            4
    #define       bGbl_RGMIITD2Cntl_PD                         1
    #define   MSK32Gbl_RGMIITD2Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIITD2Cntl_PU                         0x88B4
    #define     B16Gbl_RGMIITD2Cntl_PU                         0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_PU                            5
    #define   LSb16Gbl_RGMIITD2Cntl_PU                            5
    #define       bGbl_RGMIITD2Cntl_PU                         1
    #define   MSK32Gbl_RGMIITD2Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIITD2Cntl_SL                         0x88B4
    #define     B16Gbl_RGMIITD2Cntl_SL                         0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_SL                            6
    #define   LSb16Gbl_RGMIITD2Cntl_SL                            6
    #define       bGbl_RGMIITD2Cntl_SL                         1
    #define   MSK32Gbl_RGMIITD2Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIITD2Cntl_ST                         0x88B4
    #define     B16Gbl_RGMIITD2Cntl_ST                         0x88B4
    #define   LSb32Gbl_RGMIITD2Cntl_ST                            7
    #define   LSb16Gbl_RGMIITD2Cntl_ST                            7
    #define       bGbl_RGMIITD2Cntl_ST                         1
    #define   MSK32Gbl_RGMIITD2Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIITD3Cntl                            0x88B8

    #define     BA_Gbl_RGMIITD3Cntl_DS0                        0x88B8
    #define     B16Gbl_RGMIITD3Cntl_DS0                        0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_DS0                           0
    #define   LSb16Gbl_RGMIITD3Cntl_DS0                           0
    #define       bGbl_RGMIITD3Cntl_DS0                        1
    #define   MSK32Gbl_RGMIITD3Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIITD3Cntl_DS1                        0x88B8
    #define     B16Gbl_RGMIITD3Cntl_DS1                        0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_DS1                           1
    #define   LSb16Gbl_RGMIITD3Cntl_DS1                           1
    #define       bGbl_RGMIITD3Cntl_DS1                        1
    #define   MSK32Gbl_RGMIITD3Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIITD3Cntl_DS2                        0x88B8
    #define     B16Gbl_RGMIITD3Cntl_DS2                        0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_DS2                           2
    #define   LSb16Gbl_RGMIITD3Cntl_DS2                           2
    #define       bGbl_RGMIITD3Cntl_DS2                        1
    #define   MSK32Gbl_RGMIITD3Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIITD3Cntl_IE                         0x88B8
    #define     B16Gbl_RGMIITD3Cntl_IE                         0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_IE                            3
    #define   LSb16Gbl_RGMIITD3Cntl_IE                            3
    #define       bGbl_RGMIITD3Cntl_IE                         1
    #define   MSK32Gbl_RGMIITD3Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIITD3Cntl_PD                         0x88B8
    #define     B16Gbl_RGMIITD3Cntl_PD                         0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_PD                            4
    #define   LSb16Gbl_RGMIITD3Cntl_PD                            4
    #define       bGbl_RGMIITD3Cntl_PD                         1
    #define   MSK32Gbl_RGMIITD3Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIITD3Cntl_PU                         0x88B8
    #define     B16Gbl_RGMIITD3Cntl_PU                         0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_PU                            5
    #define   LSb16Gbl_RGMIITD3Cntl_PU                            5
    #define       bGbl_RGMIITD3Cntl_PU                         1
    #define   MSK32Gbl_RGMIITD3Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIITD3Cntl_SL                         0x88B8
    #define     B16Gbl_RGMIITD3Cntl_SL                         0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_SL                            6
    #define   LSb16Gbl_RGMIITD3Cntl_SL                            6
    #define       bGbl_RGMIITD3Cntl_SL                         1
    #define   MSK32Gbl_RGMIITD3Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIITD3Cntl_ST                         0x88B8
    #define     B16Gbl_RGMIITD3Cntl_ST                         0x88B8
    #define   LSb32Gbl_RGMIITD3Cntl_ST                            7
    #define   LSb16Gbl_RGMIITD3Cntl_ST                            7
    #define       bGbl_RGMIITD3Cntl_ST                         1
    #define   MSK32Gbl_RGMIITD3Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIITXCTLCntl                          0x88BC

    #define     BA_Gbl_RGMIITXCTLCntl_DS0                      0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_DS0                      0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_DS0                         0
    #define   LSb16Gbl_RGMIITXCTLCntl_DS0                         0
    #define       bGbl_RGMIITXCTLCntl_DS0                      1
    #define   MSK32Gbl_RGMIITXCTLCntl_DS0                         0x00000001

    #define     BA_Gbl_RGMIITXCTLCntl_DS1                      0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_DS1                      0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_DS1                         1
    #define   LSb16Gbl_RGMIITXCTLCntl_DS1                         1
    #define       bGbl_RGMIITXCTLCntl_DS1                      1
    #define   MSK32Gbl_RGMIITXCTLCntl_DS1                         0x00000002

    #define     BA_Gbl_RGMIITXCTLCntl_DS2                      0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_DS2                      0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_DS2                         2
    #define   LSb16Gbl_RGMIITXCTLCntl_DS2                         2
    #define       bGbl_RGMIITXCTLCntl_DS2                      1
    #define   MSK32Gbl_RGMIITXCTLCntl_DS2                         0x00000004

    #define     BA_Gbl_RGMIITXCTLCntl_IE                       0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_IE                       0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_IE                          3
    #define   LSb16Gbl_RGMIITXCTLCntl_IE                          3
    #define       bGbl_RGMIITXCTLCntl_IE                       1
    #define   MSK32Gbl_RGMIITXCTLCntl_IE                          0x00000008

    #define     BA_Gbl_RGMIITXCTLCntl_PD                       0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_PD                       0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_PD                          4
    #define   LSb16Gbl_RGMIITXCTLCntl_PD                          4
    #define       bGbl_RGMIITXCTLCntl_PD                       1
    #define   MSK32Gbl_RGMIITXCTLCntl_PD                          0x00000010

    #define     BA_Gbl_RGMIITXCTLCntl_PU                       0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_PU                       0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_PU                          5
    #define   LSb16Gbl_RGMIITXCTLCntl_PU                          5
    #define       bGbl_RGMIITXCTLCntl_PU                       1
    #define   MSK32Gbl_RGMIITXCTLCntl_PU                          0x00000020

    #define     BA_Gbl_RGMIITXCTLCntl_SL                       0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_SL                       0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_SL                          6
    #define   LSb16Gbl_RGMIITXCTLCntl_SL                          6
    #define       bGbl_RGMIITXCTLCntl_SL                       1
    #define   MSK32Gbl_RGMIITXCTLCntl_SL                          0x00000040

    #define     BA_Gbl_RGMIITXCTLCntl_ST                       0x88BC
    #define     B16Gbl_RGMIITXCTLCntl_ST                       0x88BC
    #define   LSb32Gbl_RGMIITXCTLCntl_ST                          7
    #define   LSb16Gbl_RGMIITXCTLCntl_ST                          7
    #define       bGbl_RGMIITXCTLCntl_ST                       1
    #define   MSK32Gbl_RGMIITXCTLCntl_ST                          0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIIRXCCntl                            0x88C0

    #define     BA_Gbl_RGMIIRXCCntl_DS0                        0x88C0
    #define     B16Gbl_RGMIIRXCCntl_DS0                        0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_DS0                           0
    #define   LSb16Gbl_RGMIIRXCCntl_DS0                           0
    #define       bGbl_RGMIIRXCCntl_DS0                        1
    #define   MSK32Gbl_RGMIIRXCCntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIIRXCCntl_DS1                        0x88C0
    #define     B16Gbl_RGMIIRXCCntl_DS1                        0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_DS1                           1
    #define   LSb16Gbl_RGMIIRXCCntl_DS1                           1
    #define       bGbl_RGMIIRXCCntl_DS1                        1
    #define   MSK32Gbl_RGMIIRXCCntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIIRXCCntl_DS2                        0x88C0
    #define     B16Gbl_RGMIIRXCCntl_DS2                        0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_DS2                           2
    #define   LSb16Gbl_RGMIIRXCCntl_DS2                           2
    #define       bGbl_RGMIIRXCCntl_DS2                        1
    #define   MSK32Gbl_RGMIIRXCCntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIIRXCCntl_IE                         0x88C0
    #define     B16Gbl_RGMIIRXCCntl_IE                         0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_IE                            3
    #define   LSb16Gbl_RGMIIRXCCntl_IE                            3
    #define       bGbl_RGMIIRXCCntl_IE                         1
    #define   MSK32Gbl_RGMIIRXCCntl_IE                            0x00000008

    #define     BA_Gbl_RGMIIRXCCntl_PD                         0x88C0
    #define     B16Gbl_RGMIIRXCCntl_PD                         0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_PD                            4
    #define   LSb16Gbl_RGMIIRXCCntl_PD                            4
    #define       bGbl_RGMIIRXCCntl_PD                         1
    #define   MSK32Gbl_RGMIIRXCCntl_PD                            0x00000010

    #define     BA_Gbl_RGMIIRXCCntl_PU                         0x88C0
    #define     B16Gbl_RGMIIRXCCntl_PU                         0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_PU                            5
    #define   LSb16Gbl_RGMIIRXCCntl_PU                            5
    #define       bGbl_RGMIIRXCCntl_PU                         1
    #define   MSK32Gbl_RGMIIRXCCntl_PU                            0x00000020

    #define     BA_Gbl_RGMIIRXCCntl_SL                         0x88C0
    #define     B16Gbl_RGMIIRXCCntl_SL                         0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_SL                            6
    #define   LSb16Gbl_RGMIIRXCCntl_SL                            6
    #define       bGbl_RGMIIRXCCntl_SL                         1
    #define   MSK32Gbl_RGMIIRXCCntl_SL                            0x00000040

    #define     BA_Gbl_RGMIIRXCCntl_ST                         0x88C0
    #define     B16Gbl_RGMIIRXCCntl_ST                         0x88C0
    #define   LSb32Gbl_RGMIIRXCCntl_ST                            7
    #define   LSb16Gbl_RGMIIRXCCntl_ST                            7
    #define       bGbl_RGMIIRXCCntl_ST                         1
    #define   MSK32Gbl_RGMIIRXCCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIIRD0Cntl                            0x88C4

    #define     BA_Gbl_RGMIIRD0Cntl_DS0                        0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_DS0                        0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_DS0                           0
    #define   LSb16Gbl_RGMIIRD0Cntl_DS0                           0
    #define       bGbl_RGMIIRD0Cntl_DS0                        1
    #define   MSK32Gbl_RGMIIRD0Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIIRD0Cntl_DS1                        0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_DS1                        0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_DS1                           1
    #define   LSb16Gbl_RGMIIRD0Cntl_DS1                           1
    #define       bGbl_RGMIIRD0Cntl_DS1                        1
    #define   MSK32Gbl_RGMIIRD0Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIIRD0Cntl_DS2                        0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_DS2                        0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_DS2                           2
    #define   LSb16Gbl_RGMIIRD0Cntl_DS2                           2
    #define       bGbl_RGMIIRD0Cntl_DS2                        1
    #define   MSK32Gbl_RGMIIRD0Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIIRD0Cntl_IE                         0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_IE                         0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_IE                            3
    #define   LSb16Gbl_RGMIIRD0Cntl_IE                            3
    #define       bGbl_RGMIIRD0Cntl_IE                         1
    #define   MSK32Gbl_RGMIIRD0Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIIRD0Cntl_PD                         0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_PD                         0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_PD                            4
    #define   LSb16Gbl_RGMIIRD0Cntl_PD                            4
    #define       bGbl_RGMIIRD0Cntl_PD                         1
    #define   MSK32Gbl_RGMIIRD0Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIIRD0Cntl_PU                         0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_PU                         0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_PU                            5
    #define   LSb16Gbl_RGMIIRD0Cntl_PU                            5
    #define       bGbl_RGMIIRD0Cntl_PU                         1
    #define   MSK32Gbl_RGMIIRD0Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIIRD0Cntl_SL                         0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_SL                         0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_SL                            6
    #define   LSb16Gbl_RGMIIRD0Cntl_SL                            6
    #define       bGbl_RGMIIRD0Cntl_SL                         1
    #define   MSK32Gbl_RGMIIRD0Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIIRD0Cntl_ST                         0x88C4
    #define     B16Gbl_RGMIIRD0Cntl_ST                         0x88C4
    #define   LSb32Gbl_RGMIIRD0Cntl_ST                            7
    #define   LSb16Gbl_RGMIIRD0Cntl_ST                            7
    #define       bGbl_RGMIIRD0Cntl_ST                         1
    #define   MSK32Gbl_RGMIIRD0Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIIRD1Cntl                            0x88C8

    #define     BA_Gbl_RGMIIRD1Cntl_DS0                        0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_DS0                        0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_DS0                           0
    #define   LSb16Gbl_RGMIIRD1Cntl_DS0                           0
    #define       bGbl_RGMIIRD1Cntl_DS0                        1
    #define   MSK32Gbl_RGMIIRD1Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIIRD1Cntl_DS1                        0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_DS1                        0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_DS1                           1
    #define   LSb16Gbl_RGMIIRD1Cntl_DS1                           1
    #define       bGbl_RGMIIRD1Cntl_DS1                        1
    #define   MSK32Gbl_RGMIIRD1Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIIRD1Cntl_DS2                        0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_DS2                        0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_DS2                           2
    #define   LSb16Gbl_RGMIIRD1Cntl_DS2                           2
    #define       bGbl_RGMIIRD1Cntl_DS2                        1
    #define   MSK32Gbl_RGMIIRD1Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIIRD1Cntl_IE                         0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_IE                         0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_IE                            3
    #define   LSb16Gbl_RGMIIRD1Cntl_IE                            3
    #define       bGbl_RGMIIRD1Cntl_IE                         1
    #define   MSK32Gbl_RGMIIRD1Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIIRD1Cntl_PD                         0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_PD                         0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_PD                            4
    #define   LSb16Gbl_RGMIIRD1Cntl_PD                            4
    #define       bGbl_RGMIIRD1Cntl_PD                         1
    #define   MSK32Gbl_RGMIIRD1Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIIRD1Cntl_PU                         0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_PU                         0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_PU                            5
    #define   LSb16Gbl_RGMIIRD1Cntl_PU                            5
    #define       bGbl_RGMIIRD1Cntl_PU                         1
    #define   MSK32Gbl_RGMIIRD1Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIIRD1Cntl_SL                         0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_SL                         0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_SL                            6
    #define   LSb16Gbl_RGMIIRD1Cntl_SL                            6
    #define       bGbl_RGMIIRD1Cntl_SL                         1
    #define   MSK32Gbl_RGMIIRD1Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIIRD1Cntl_ST                         0x88C8
    #define     B16Gbl_RGMIIRD1Cntl_ST                         0x88C8
    #define   LSb32Gbl_RGMIIRD1Cntl_ST                            7
    #define   LSb16Gbl_RGMIIRD1Cntl_ST                            7
    #define       bGbl_RGMIIRD1Cntl_ST                         1
    #define   MSK32Gbl_RGMIIRD1Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIIRD2Cntl                            0x88CC

    #define     BA_Gbl_RGMIIRD2Cntl_DS0                        0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_DS0                        0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_DS0                           0
    #define   LSb16Gbl_RGMIIRD2Cntl_DS0                           0
    #define       bGbl_RGMIIRD2Cntl_DS0                        1
    #define   MSK32Gbl_RGMIIRD2Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIIRD2Cntl_DS1                        0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_DS1                        0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_DS1                           1
    #define   LSb16Gbl_RGMIIRD2Cntl_DS1                           1
    #define       bGbl_RGMIIRD2Cntl_DS1                        1
    #define   MSK32Gbl_RGMIIRD2Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIIRD2Cntl_DS2                        0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_DS2                        0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_DS2                           2
    #define   LSb16Gbl_RGMIIRD2Cntl_DS2                           2
    #define       bGbl_RGMIIRD2Cntl_DS2                        1
    #define   MSK32Gbl_RGMIIRD2Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIIRD2Cntl_IE                         0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_IE                         0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_IE                            3
    #define   LSb16Gbl_RGMIIRD2Cntl_IE                            3
    #define       bGbl_RGMIIRD2Cntl_IE                         1
    #define   MSK32Gbl_RGMIIRD2Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIIRD2Cntl_PD                         0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_PD                         0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_PD                            4
    #define   LSb16Gbl_RGMIIRD2Cntl_PD                            4
    #define       bGbl_RGMIIRD2Cntl_PD                         1
    #define   MSK32Gbl_RGMIIRD2Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIIRD2Cntl_PU                         0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_PU                         0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_PU                            5
    #define   LSb16Gbl_RGMIIRD2Cntl_PU                            5
    #define       bGbl_RGMIIRD2Cntl_PU                         1
    #define   MSK32Gbl_RGMIIRD2Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIIRD2Cntl_SL                         0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_SL                         0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_SL                            6
    #define   LSb16Gbl_RGMIIRD2Cntl_SL                            6
    #define       bGbl_RGMIIRD2Cntl_SL                         1
    #define   MSK32Gbl_RGMIIRD2Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIIRD2Cntl_ST                         0x88CC
    #define     B16Gbl_RGMIIRD2Cntl_ST                         0x88CC
    #define   LSb32Gbl_RGMIIRD2Cntl_ST                            7
    #define   LSb16Gbl_RGMIIRD2Cntl_ST                            7
    #define       bGbl_RGMIIRD2Cntl_ST                         1
    #define   MSK32Gbl_RGMIIRD2Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIIRD3Cntl                            0x88D0

    #define     BA_Gbl_RGMIIRD3Cntl_DS0                        0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_DS0                        0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_DS0                           0
    #define   LSb16Gbl_RGMIIRD3Cntl_DS0                           0
    #define       bGbl_RGMIIRD3Cntl_DS0                        1
    #define   MSK32Gbl_RGMIIRD3Cntl_DS0                           0x00000001

    #define     BA_Gbl_RGMIIRD3Cntl_DS1                        0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_DS1                        0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_DS1                           1
    #define   LSb16Gbl_RGMIIRD3Cntl_DS1                           1
    #define       bGbl_RGMIIRD3Cntl_DS1                        1
    #define   MSK32Gbl_RGMIIRD3Cntl_DS1                           0x00000002

    #define     BA_Gbl_RGMIIRD3Cntl_DS2                        0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_DS2                        0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_DS2                           2
    #define   LSb16Gbl_RGMIIRD3Cntl_DS2                           2
    #define       bGbl_RGMIIRD3Cntl_DS2                        1
    #define   MSK32Gbl_RGMIIRD3Cntl_DS2                           0x00000004

    #define     BA_Gbl_RGMIIRD3Cntl_IE                         0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_IE                         0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_IE                            3
    #define   LSb16Gbl_RGMIIRD3Cntl_IE                            3
    #define       bGbl_RGMIIRD3Cntl_IE                         1
    #define   MSK32Gbl_RGMIIRD3Cntl_IE                            0x00000008

    #define     BA_Gbl_RGMIIRD3Cntl_PD                         0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_PD                         0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_PD                            4
    #define   LSb16Gbl_RGMIIRD3Cntl_PD                            4
    #define       bGbl_RGMIIRD3Cntl_PD                         1
    #define   MSK32Gbl_RGMIIRD3Cntl_PD                            0x00000010

    #define     BA_Gbl_RGMIIRD3Cntl_PU                         0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_PU                         0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_PU                            5
    #define   LSb16Gbl_RGMIIRD3Cntl_PU                            5
    #define       bGbl_RGMIIRD3Cntl_PU                         1
    #define   MSK32Gbl_RGMIIRD3Cntl_PU                            0x00000020

    #define     BA_Gbl_RGMIIRD3Cntl_SL                         0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_SL                         0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_SL                            6
    #define   LSb16Gbl_RGMIIRD3Cntl_SL                            6
    #define       bGbl_RGMIIRD3Cntl_SL                         1
    #define   MSK32Gbl_RGMIIRD3Cntl_SL                            0x00000040

    #define     BA_Gbl_RGMIIRD3Cntl_ST                         0x88D0
    #define     B16Gbl_RGMIIRD3Cntl_ST                         0x88D0
    #define   LSb32Gbl_RGMIIRD3Cntl_ST                            7
    #define   LSb16Gbl_RGMIIRD3Cntl_ST                            7
    #define       bGbl_RGMIIRD3Cntl_ST                         1
    #define   MSK32Gbl_RGMIIRD3Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RGMIIRXCTLCntl                          0x88D4

    #define     BA_Gbl_RGMIIRXCTLCntl_DS0                      0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_DS0                      0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_DS0                         0
    #define   LSb16Gbl_RGMIIRXCTLCntl_DS0                         0
    #define       bGbl_RGMIIRXCTLCntl_DS0                      1
    #define   MSK32Gbl_RGMIIRXCTLCntl_DS0                         0x00000001

    #define     BA_Gbl_RGMIIRXCTLCntl_DS1                      0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_DS1                      0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_DS1                         1
    #define   LSb16Gbl_RGMIIRXCTLCntl_DS1                         1
    #define       bGbl_RGMIIRXCTLCntl_DS1                      1
    #define   MSK32Gbl_RGMIIRXCTLCntl_DS1                         0x00000002

    #define     BA_Gbl_RGMIIRXCTLCntl_DS2                      0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_DS2                      0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_DS2                         2
    #define   LSb16Gbl_RGMIIRXCTLCntl_DS2                         2
    #define       bGbl_RGMIIRXCTLCntl_DS2                      1
    #define   MSK32Gbl_RGMIIRXCTLCntl_DS2                         0x00000004

    #define     BA_Gbl_RGMIIRXCTLCntl_IE                       0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_IE                       0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_IE                          3
    #define   LSb16Gbl_RGMIIRXCTLCntl_IE                          3
    #define       bGbl_RGMIIRXCTLCntl_IE                       1
    #define   MSK32Gbl_RGMIIRXCTLCntl_IE                          0x00000008

    #define     BA_Gbl_RGMIIRXCTLCntl_PD                       0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_PD                       0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_PD                          4
    #define   LSb16Gbl_RGMIIRXCTLCntl_PD                          4
    #define       bGbl_RGMIIRXCTLCntl_PD                       1
    #define   MSK32Gbl_RGMIIRXCTLCntl_PD                          0x00000010

    #define     BA_Gbl_RGMIIRXCTLCntl_PU                       0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_PU                       0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_PU                          5
    #define   LSb16Gbl_RGMIIRXCTLCntl_PU                          5
    #define       bGbl_RGMIIRXCTLCntl_PU                       1
    #define   MSK32Gbl_RGMIIRXCTLCntl_PU                          0x00000020

    #define     BA_Gbl_RGMIIRXCTLCntl_SL                       0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_SL                       0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_SL                          6
    #define   LSb16Gbl_RGMIIRXCTLCntl_SL                          6
    #define       bGbl_RGMIIRXCTLCntl_SL                       1
    #define   MSK32Gbl_RGMIIRXCTLCntl_SL                          0x00000040

    #define     BA_Gbl_RGMIIRXCTLCntl_ST                       0x88D4
    #define     B16Gbl_RGMIIRXCTLCntl_ST                       0x88D4
    #define   LSb32Gbl_RGMIIRXCTLCntl_ST                          7
    #define   LSb16Gbl_RGMIIRXCTLCntl_ST                          7
    #define       bGbl_RGMIIRXCTLCntl_ST                       1
    #define   MSK32Gbl_RGMIIRXCTLCntl_ST                          0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RCLKICntl                               0x88D8

    #define     BA_Gbl_RCLKICntl_DS0                           0x88D8
    #define     B16Gbl_RCLKICntl_DS0                           0x88D8
    #define   LSb32Gbl_RCLKICntl_DS0                              0
    #define   LSb16Gbl_RCLKICntl_DS0                              0
    #define       bGbl_RCLKICntl_DS0                           1
    #define   MSK32Gbl_RCLKICntl_DS0                              0x00000001

    #define     BA_Gbl_RCLKICntl_DS1                           0x88D8
    #define     B16Gbl_RCLKICntl_DS1                           0x88D8
    #define   LSb32Gbl_RCLKICntl_DS1                              1
    #define   LSb16Gbl_RCLKICntl_DS1                              1
    #define       bGbl_RCLKICntl_DS1                           1
    #define   MSK32Gbl_RCLKICntl_DS1                              0x00000002

    #define     BA_Gbl_RCLKICntl_DS2                           0x88D8
    #define     B16Gbl_RCLKICntl_DS2                           0x88D8
    #define   LSb32Gbl_RCLKICntl_DS2                              2
    #define   LSb16Gbl_RCLKICntl_DS2                              2
    #define       bGbl_RCLKICntl_DS2                           1
    #define   MSK32Gbl_RCLKICntl_DS2                              0x00000004

    #define     BA_Gbl_RCLKICntl_DS3                           0x88D8
    #define     B16Gbl_RCLKICntl_DS3                           0x88D8
    #define   LSb32Gbl_RCLKICntl_DS3                              3
    #define   LSb16Gbl_RCLKICntl_DS3                              3
    #define       bGbl_RCLKICntl_DS3                           1
    #define   MSK32Gbl_RCLKICntl_DS3                              0x00000008

    #define     BA_Gbl_RCLKICntl_RD0                           0x88D8
    #define     B16Gbl_RCLKICntl_RD0                           0x88D8
    #define   LSb32Gbl_RCLKICntl_RD0                              4
    #define   LSb16Gbl_RCLKICntl_RD0                              4
    #define       bGbl_RCLKICntl_RD0                           1
    #define   MSK32Gbl_RCLKICntl_RD0                              0x00000010

    #define     BA_Gbl_RCLKICntl_RD1                           0x88D8
    #define     B16Gbl_RCLKICntl_RD1                           0x88D8
    #define   LSb32Gbl_RCLKICntl_RD1                              5
    #define   LSb16Gbl_RCLKICntl_RD1                              5
    #define       bGbl_RCLKICntl_RD1                           1
    #define   MSK32Gbl_RCLKICntl_RD1                              0x00000020

    #define     BA_Gbl_RCLKICntl_REF0                          0x88D8
    #define     B16Gbl_RCLKICntl_REF0                          0x88D8
    #define   LSb32Gbl_RCLKICntl_REF0                             6
    #define   LSb16Gbl_RCLKICntl_REF0                             6
    #define       bGbl_RCLKICntl_REF0                          1
    #define   MSK32Gbl_RCLKICntl_REF0                             0x00000040

    #define     BA_Gbl_RCLKICntl_REF1                          0x88D8
    #define     B16Gbl_RCLKICntl_REF1                          0x88D8
    #define   LSb32Gbl_RCLKICntl_REF1                             7
    #define   LSb16Gbl_RCLKICntl_REF1                             7
    #define       bGbl_RCLKICntl_REF1                          1
    #define   MSK32Gbl_RCLKICntl_REF1                             0x00000080

    #define     BA_Gbl_RCLKICntl_XE                            0x88D9
    #define     B16Gbl_RCLKICntl_XE                            0x88D8
    #define   LSb32Gbl_RCLKICntl_XE                               8
    #define   LSb16Gbl_RCLKICntl_XE                               8
    #define       bGbl_RCLKICntl_XE                            1
    #define   MSK32Gbl_RCLKICntl_XE                               0x00000100
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DOCntl                             0x88DC

    #define     BA_Gbl_I2S1_DOCntl_DS0                         0x88DC
    #define     B16Gbl_I2S1_DOCntl_DS0                         0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_DS0                            0
    #define   LSb16Gbl_I2S1_DOCntl_DS0                            0
    #define       bGbl_I2S1_DOCntl_DS0                         1
    #define   MSK32Gbl_I2S1_DOCntl_DS0                            0x00000001

    #define     BA_Gbl_I2S1_DOCntl_DS1                         0x88DC
    #define     B16Gbl_I2S1_DOCntl_DS1                         0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_DS1                            1
    #define   LSb16Gbl_I2S1_DOCntl_DS1                            1
    #define       bGbl_I2S1_DOCntl_DS1                         1
    #define   MSK32Gbl_I2S1_DOCntl_DS1                            0x00000002

    #define     BA_Gbl_I2S1_DOCntl_DS2                         0x88DC
    #define     B16Gbl_I2S1_DOCntl_DS2                         0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_DS2                            2
    #define   LSb16Gbl_I2S1_DOCntl_DS2                            2
    #define       bGbl_I2S1_DOCntl_DS2                         1
    #define   MSK32Gbl_I2S1_DOCntl_DS2                            0x00000004

    #define     BA_Gbl_I2S1_DOCntl_IE                          0x88DC
    #define     B16Gbl_I2S1_DOCntl_IE                          0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_IE                             3
    #define   LSb16Gbl_I2S1_DOCntl_IE                             3
    #define       bGbl_I2S1_DOCntl_IE                          1
    #define   MSK32Gbl_I2S1_DOCntl_IE                             0x00000008

    #define     BA_Gbl_I2S1_DOCntl_PD                          0x88DC
    #define     B16Gbl_I2S1_DOCntl_PD                          0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_PD                             4
    #define   LSb16Gbl_I2S1_DOCntl_PD                             4
    #define       bGbl_I2S1_DOCntl_PD                          1
    #define   MSK32Gbl_I2S1_DOCntl_PD                             0x00000010

    #define     BA_Gbl_I2S1_DOCntl_PU                          0x88DC
    #define     B16Gbl_I2S1_DOCntl_PU                          0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_PU                             5
    #define   LSb16Gbl_I2S1_DOCntl_PU                             5
    #define       bGbl_I2S1_DOCntl_PU                          1
    #define   MSK32Gbl_I2S1_DOCntl_PU                             0x00000020

    #define     BA_Gbl_I2S1_DOCntl_SL                          0x88DC
    #define     B16Gbl_I2S1_DOCntl_SL                          0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_SL                             6
    #define   LSb16Gbl_I2S1_DOCntl_SL                             6
    #define       bGbl_I2S1_DOCntl_SL                          1
    #define   MSK32Gbl_I2S1_DOCntl_SL                             0x00000040

    #define     BA_Gbl_I2S1_DOCntl_ST                          0x88DC
    #define     B16Gbl_I2S1_DOCntl_ST                          0x88DC
    #define   LSb32Gbl_I2S1_DOCntl_ST                             7
    #define   LSb16Gbl_I2S1_DOCntl_ST                             7
    #define       bGbl_I2S1_DOCntl_ST                          1
    #define   MSK32Gbl_I2S1_DOCntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DICntl                             0x88E0

    #define     BA_Gbl_I2S1_DICntl_DS0                         0x88E0
    #define     B16Gbl_I2S1_DICntl_DS0                         0x88E0
    #define   LSb32Gbl_I2S1_DICntl_DS0                            0
    #define   LSb16Gbl_I2S1_DICntl_DS0                            0
    #define       bGbl_I2S1_DICntl_DS0                         1
    #define   MSK32Gbl_I2S1_DICntl_DS0                            0x00000001

    #define     BA_Gbl_I2S1_DICntl_DS1                         0x88E0
    #define     B16Gbl_I2S1_DICntl_DS1                         0x88E0
    #define   LSb32Gbl_I2S1_DICntl_DS1                            1
    #define   LSb16Gbl_I2S1_DICntl_DS1                            1
    #define       bGbl_I2S1_DICntl_DS1                         1
    #define   MSK32Gbl_I2S1_DICntl_DS1                            0x00000002

    #define     BA_Gbl_I2S1_DICntl_DS2                         0x88E0
    #define     B16Gbl_I2S1_DICntl_DS2                         0x88E0
    #define   LSb32Gbl_I2S1_DICntl_DS2                            2
    #define   LSb16Gbl_I2S1_DICntl_DS2                            2
    #define       bGbl_I2S1_DICntl_DS2                         1
    #define   MSK32Gbl_I2S1_DICntl_DS2                            0x00000004

    #define     BA_Gbl_I2S1_DICntl_IE                          0x88E0
    #define     B16Gbl_I2S1_DICntl_IE                          0x88E0
    #define   LSb32Gbl_I2S1_DICntl_IE                             3
    #define   LSb16Gbl_I2S1_DICntl_IE                             3
    #define       bGbl_I2S1_DICntl_IE                          1
    #define   MSK32Gbl_I2S1_DICntl_IE                             0x00000008

    #define     BA_Gbl_I2S1_DICntl_PD                          0x88E0
    #define     B16Gbl_I2S1_DICntl_PD                          0x88E0
    #define   LSb32Gbl_I2S1_DICntl_PD                             4
    #define   LSb16Gbl_I2S1_DICntl_PD                             4
    #define       bGbl_I2S1_DICntl_PD                          1
    #define   MSK32Gbl_I2S1_DICntl_PD                             0x00000010

    #define     BA_Gbl_I2S1_DICntl_PU                          0x88E0
    #define     B16Gbl_I2S1_DICntl_PU                          0x88E0
    #define   LSb32Gbl_I2S1_DICntl_PU                             5
    #define   LSb16Gbl_I2S1_DICntl_PU                             5
    #define       bGbl_I2S1_DICntl_PU                          1
    #define   MSK32Gbl_I2S1_DICntl_PU                             0x00000020

    #define     BA_Gbl_I2S1_DICntl_SL                          0x88E0
    #define     B16Gbl_I2S1_DICntl_SL                          0x88E0
    #define   LSb32Gbl_I2S1_DICntl_SL                             6
    #define   LSb16Gbl_I2S1_DICntl_SL                             6
    #define       bGbl_I2S1_DICntl_SL                          1
    #define   MSK32Gbl_I2S1_DICntl_SL                             0x00000040

    #define     BA_Gbl_I2S1_DICntl_ST                          0x88E0
    #define     B16Gbl_I2S1_DICntl_ST                          0x88E0
    #define   LSb32Gbl_I2S1_DICntl_ST                             7
    #define   LSb16Gbl_I2S1_DICntl_ST                             7
    #define       bGbl_I2S1_DICntl_ST                          1
    #define   MSK32Gbl_I2S1_DICntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_LRCKCntl                           0x88E4

    #define     BA_Gbl_I2S1_LRCKCntl_DS0                       0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_DS0                       0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_DS0                          0
    #define   LSb16Gbl_I2S1_LRCKCntl_DS0                          0
    #define       bGbl_I2S1_LRCKCntl_DS0                       1
    #define   MSK32Gbl_I2S1_LRCKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S1_LRCKCntl_DS1                       0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_DS1                       0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_DS1                          1
    #define   LSb16Gbl_I2S1_LRCKCntl_DS1                          1
    #define       bGbl_I2S1_LRCKCntl_DS1                       1
    #define   MSK32Gbl_I2S1_LRCKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S1_LRCKCntl_DS2                       0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_DS2                       0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_DS2                          2
    #define   LSb16Gbl_I2S1_LRCKCntl_DS2                          2
    #define       bGbl_I2S1_LRCKCntl_DS2                       1
    #define   MSK32Gbl_I2S1_LRCKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S1_LRCKCntl_IE                        0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_IE                        0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_IE                           3
    #define   LSb16Gbl_I2S1_LRCKCntl_IE                           3
    #define       bGbl_I2S1_LRCKCntl_IE                        1
    #define   MSK32Gbl_I2S1_LRCKCntl_IE                           0x00000008

    #define     BA_Gbl_I2S1_LRCKCntl_PD                        0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_PD                        0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_PD                           4
    #define   LSb16Gbl_I2S1_LRCKCntl_PD                           4
    #define       bGbl_I2S1_LRCKCntl_PD                        1
    #define   MSK32Gbl_I2S1_LRCKCntl_PD                           0x00000010

    #define     BA_Gbl_I2S1_LRCKCntl_PU                        0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_PU                        0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_PU                           5
    #define   LSb16Gbl_I2S1_LRCKCntl_PU                           5
    #define       bGbl_I2S1_LRCKCntl_PU                        1
    #define   MSK32Gbl_I2S1_LRCKCntl_PU                           0x00000020

    #define     BA_Gbl_I2S1_LRCKCntl_SL                        0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_SL                        0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_SL                           6
    #define   LSb16Gbl_I2S1_LRCKCntl_SL                           6
    #define       bGbl_I2S1_LRCKCntl_SL                        1
    #define   MSK32Gbl_I2S1_LRCKCntl_SL                           0x00000040

    #define     BA_Gbl_I2S1_LRCKCntl_ST                        0x88E4
    #define     B16Gbl_I2S1_LRCKCntl_ST                        0x88E4
    #define   LSb32Gbl_I2S1_LRCKCntl_ST                           7
    #define   LSb16Gbl_I2S1_LRCKCntl_ST                           7
    #define       bGbl_I2S1_LRCKCntl_ST                        1
    #define   MSK32Gbl_I2S1_LRCKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_BCLKCntl                           0x88E8

    #define     BA_Gbl_I2S1_BCLKCntl_DS0                       0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_DS0                       0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_DS0                          0
    #define   LSb16Gbl_I2S1_BCLKCntl_DS0                          0
    #define       bGbl_I2S1_BCLKCntl_DS0                       1
    #define   MSK32Gbl_I2S1_BCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S1_BCLKCntl_DS1                       0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_DS1                       0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_DS1                          1
    #define   LSb16Gbl_I2S1_BCLKCntl_DS1                          1
    #define       bGbl_I2S1_BCLKCntl_DS1                       1
    #define   MSK32Gbl_I2S1_BCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S1_BCLKCntl_DS2                       0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_DS2                       0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_DS2                          2
    #define   LSb16Gbl_I2S1_BCLKCntl_DS2                          2
    #define       bGbl_I2S1_BCLKCntl_DS2                       1
    #define   MSK32Gbl_I2S1_BCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S1_BCLKCntl_IE                        0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_IE                        0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_IE                           3
    #define   LSb16Gbl_I2S1_BCLKCntl_IE                           3
    #define       bGbl_I2S1_BCLKCntl_IE                        1
    #define   MSK32Gbl_I2S1_BCLKCntl_IE                           0x00000008

    #define     BA_Gbl_I2S1_BCLKCntl_PD                        0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_PD                        0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_PD                           4
    #define   LSb16Gbl_I2S1_BCLKCntl_PD                           4
    #define       bGbl_I2S1_BCLKCntl_PD                        1
    #define   MSK32Gbl_I2S1_BCLKCntl_PD                           0x00000010

    #define     BA_Gbl_I2S1_BCLKCntl_PU                        0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_PU                        0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_PU                           5
    #define   LSb16Gbl_I2S1_BCLKCntl_PU                           5
    #define       bGbl_I2S1_BCLKCntl_PU                        1
    #define   MSK32Gbl_I2S1_BCLKCntl_PU                           0x00000020

    #define     BA_Gbl_I2S1_BCLKCntl_SL                        0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_SL                        0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_SL                           6
    #define   LSb16Gbl_I2S1_BCLKCntl_SL                           6
    #define       bGbl_I2S1_BCLKCntl_SL                        1
    #define   MSK32Gbl_I2S1_BCLKCntl_SL                           0x00000040

    #define     BA_Gbl_I2S1_BCLKCntl_ST                        0x88E8
    #define     B16Gbl_I2S1_BCLKCntl_ST                        0x88E8
    #define   LSb32Gbl_I2S1_BCLKCntl_ST                           7
    #define   LSb16Gbl_I2S1_BCLKCntl_ST                           7
    #define       bGbl_I2S1_BCLKCntl_ST                        1
    #define   MSK32Gbl_I2S1_BCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_MCLKCntl                           0x88EC

    #define     BA_Gbl_I2S1_MCLKCntl_DS0                       0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_DS0                       0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_DS0                          0
    #define   LSb16Gbl_I2S1_MCLKCntl_DS0                          0
    #define       bGbl_I2S1_MCLKCntl_DS0                       1
    #define   MSK32Gbl_I2S1_MCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S1_MCLKCntl_DS1                       0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_DS1                       0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_DS1                          1
    #define   LSb16Gbl_I2S1_MCLKCntl_DS1                          1
    #define       bGbl_I2S1_MCLKCntl_DS1                       1
    #define   MSK32Gbl_I2S1_MCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S1_MCLKCntl_DS2                       0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_DS2                       0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_DS2                          2
    #define   LSb16Gbl_I2S1_MCLKCntl_DS2                          2
    #define       bGbl_I2S1_MCLKCntl_DS2                       1
    #define   MSK32Gbl_I2S1_MCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S1_MCLKCntl_IE                        0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_IE                        0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_IE                           3
    #define   LSb16Gbl_I2S1_MCLKCntl_IE                           3
    #define       bGbl_I2S1_MCLKCntl_IE                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_IE                           0x00000008

    #define     BA_Gbl_I2S1_MCLKCntl_PD                        0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_PD                        0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_PD                           4
    #define   LSb16Gbl_I2S1_MCLKCntl_PD                           4
    #define       bGbl_I2S1_MCLKCntl_PD                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_PD                           0x00000010

    #define     BA_Gbl_I2S1_MCLKCntl_PU                        0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_PU                        0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_PU                           5
    #define   LSb16Gbl_I2S1_MCLKCntl_PU                           5
    #define       bGbl_I2S1_MCLKCntl_PU                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_PU                           0x00000020

    #define     BA_Gbl_I2S1_MCLKCntl_SL                        0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_SL                        0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_SL                           6
    #define   LSb16Gbl_I2S1_MCLKCntl_SL                           6
    #define       bGbl_I2S1_MCLKCntl_SL                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_SL                           0x00000040

    #define     BA_Gbl_I2S1_MCLKCntl_ST                        0x88EC
    #define     B16Gbl_I2S1_MCLKCntl_ST                        0x88EC
    #define   LSb32Gbl_I2S1_MCLKCntl_ST                           7
    #define   LSb16Gbl_I2S1_MCLKCntl_ST                           7
    #define       bGbl_I2S1_MCLKCntl_ST                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_LRCKCntl                           0x88F0

    #define     BA_Gbl_I2S2_LRCKCntl_DS0                       0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_DS0                       0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_DS0                          0
    #define   LSb16Gbl_I2S2_LRCKCntl_DS0                          0
    #define       bGbl_I2S2_LRCKCntl_DS0                       1
    #define   MSK32Gbl_I2S2_LRCKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S2_LRCKCntl_DS1                       0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_DS1                       0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_DS1                          1
    #define   LSb16Gbl_I2S2_LRCKCntl_DS1                          1
    #define       bGbl_I2S2_LRCKCntl_DS1                       1
    #define   MSK32Gbl_I2S2_LRCKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S2_LRCKCntl_DS2                       0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_DS2                       0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_DS2                          2
    #define   LSb16Gbl_I2S2_LRCKCntl_DS2                          2
    #define       bGbl_I2S2_LRCKCntl_DS2                       1
    #define   MSK32Gbl_I2S2_LRCKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S2_LRCKCntl_DS3                       0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_DS3                       0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_DS3                          3
    #define   LSb16Gbl_I2S2_LRCKCntl_DS3                          3
    #define       bGbl_I2S2_LRCKCntl_DS3                       1
    #define   MSK32Gbl_I2S2_LRCKCntl_DS3                          0x00000008

    #define     BA_Gbl_I2S2_LRCKCntl_IE                        0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_IE                        0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_IE                           4
    #define   LSb16Gbl_I2S2_LRCKCntl_IE                           4
    #define       bGbl_I2S2_LRCKCntl_IE                        1
    #define   MSK32Gbl_I2S2_LRCKCntl_IE                           0x00000010

    #define     BA_Gbl_I2S2_LRCKCntl_PE                        0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_PE                        0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_PE                           5
    #define   LSb16Gbl_I2S2_LRCKCntl_PE                           5
    #define       bGbl_I2S2_LRCKCntl_PE                        1
    #define   MSK32Gbl_I2S2_LRCKCntl_PE                           0x00000020

    #define     BA_Gbl_I2S2_LRCKCntl_PS                        0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_PS                        0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_PS                           6
    #define   LSb16Gbl_I2S2_LRCKCntl_PS                           6
    #define       bGbl_I2S2_LRCKCntl_PS                        1
    #define   MSK32Gbl_I2S2_LRCKCntl_PS                           0x00000040

    #define     BA_Gbl_I2S2_LRCKCntl_SL                        0x88F0
    #define     B16Gbl_I2S2_LRCKCntl_SL                        0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_SL                           7
    #define   LSb16Gbl_I2S2_LRCKCntl_SL                           7
    #define       bGbl_I2S2_LRCKCntl_SL                        1
    #define   MSK32Gbl_I2S2_LRCKCntl_SL                           0x00000080

    #define     BA_Gbl_I2S2_LRCKCntl_SPU                       0x88F1
    #define     B16Gbl_I2S2_LRCKCntl_SPU                       0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_SPU                          8
    #define   LSb16Gbl_I2S2_LRCKCntl_SPU                          8
    #define       bGbl_I2S2_LRCKCntl_SPU                       1
    #define   MSK32Gbl_I2S2_LRCKCntl_SPU                          0x00000100

    #define     BA_Gbl_I2S2_LRCKCntl_ST                        0x88F1
    #define     B16Gbl_I2S2_LRCKCntl_ST                        0x88F0
    #define   LSb32Gbl_I2S2_LRCKCntl_ST                           9
    #define   LSb16Gbl_I2S2_LRCKCntl_ST                           9
    #define       bGbl_I2S2_LRCKCntl_ST                        1
    #define   MSK32Gbl_I2S2_LRCKCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_BCLKCntl                           0x88F4

    #define     BA_Gbl_I2S2_BCLKCntl_DS0                       0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_DS0                       0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_DS0                          0
    #define   LSb16Gbl_I2S2_BCLKCntl_DS0                          0
    #define       bGbl_I2S2_BCLKCntl_DS0                       1
    #define   MSK32Gbl_I2S2_BCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S2_BCLKCntl_DS1                       0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_DS1                       0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_DS1                          1
    #define   LSb16Gbl_I2S2_BCLKCntl_DS1                          1
    #define       bGbl_I2S2_BCLKCntl_DS1                       1
    #define   MSK32Gbl_I2S2_BCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S2_BCLKCntl_DS2                       0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_DS2                       0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_DS2                          2
    #define   LSb16Gbl_I2S2_BCLKCntl_DS2                          2
    #define       bGbl_I2S2_BCLKCntl_DS2                       1
    #define   MSK32Gbl_I2S2_BCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S2_BCLKCntl_IE                        0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_IE                        0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_IE                           3
    #define   LSb16Gbl_I2S2_BCLKCntl_IE                           3
    #define       bGbl_I2S2_BCLKCntl_IE                        1
    #define   MSK32Gbl_I2S2_BCLKCntl_IE                           0x00000008

    #define     BA_Gbl_I2S2_BCLKCntl_PD                        0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_PD                        0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_PD                           4
    #define   LSb16Gbl_I2S2_BCLKCntl_PD                           4
    #define       bGbl_I2S2_BCLKCntl_PD                        1
    #define   MSK32Gbl_I2S2_BCLKCntl_PD                           0x00000010

    #define     BA_Gbl_I2S2_BCLKCntl_PU                        0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_PU                        0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_PU                           5
    #define   LSb16Gbl_I2S2_BCLKCntl_PU                           5
    #define       bGbl_I2S2_BCLKCntl_PU                        1
    #define   MSK32Gbl_I2S2_BCLKCntl_PU                           0x00000020

    #define     BA_Gbl_I2S2_BCLKCntl_SL                        0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_SL                        0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_SL                           6
    #define   LSb16Gbl_I2S2_BCLKCntl_SL                           6
    #define       bGbl_I2S2_BCLKCntl_SL                        1
    #define   MSK32Gbl_I2S2_BCLKCntl_SL                           0x00000040

    #define     BA_Gbl_I2S2_BCLKCntl_ST                        0x88F4
    #define     B16Gbl_I2S2_BCLKCntl_ST                        0x88F4
    #define   LSb32Gbl_I2S2_BCLKCntl_ST                           7
    #define   LSb16Gbl_I2S2_BCLKCntl_ST                           7
    #define       bGbl_I2S2_BCLKCntl_ST                        1
    #define   MSK32Gbl_I2S2_BCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DOCntl                             0x88F8

    #define     BA_Gbl_I2S2_DOCntl_DS0                         0x88F8
    #define     B16Gbl_I2S2_DOCntl_DS0                         0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_DS0                            0
    #define   LSb16Gbl_I2S2_DOCntl_DS0                            0
    #define       bGbl_I2S2_DOCntl_DS0                         1
    #define   MSK32Gbl_I2S2_DOCntl_DS0                            0x00000001

    #define     BA_Gbl_I2S2_DOCntl_DS1                         0x88F8
    #define     B16Gbl_I2S2_DOCntl_DS1                         0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_DS1                            1
    #define   LSb16Gbl_I2S2_DOCntl_DS1                            1
    #define       bGbl_I2S2_DOCntl_DS1                         1
    #define   MSK32Gbl_I2S2_DOCntl_DS1                            0x00000002

    #define     BA_Gbl_I2S2_DOCntl_DS2                         0x88F8
    #define     B16Gbl_I2S2_DOCntl_DS2                         0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_DS2                            2
    #define   LSb16Gbl_I2S2_DOCntl_DS2                            2
    #define       bGbl_I2S2_DOCntl_DS2                         1
    #define   MSK32Gbl_I2S2_DOCntl_DS2                            0x00000004

    #define     BA_Gbl_I2S2_DOCntl_IE                          0x88F8
    #define     B16Gbl_I2S2_DOCntl_IE                          0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_IE                             3
    #define   LSb16Gbl_I2S2_DOCntl_IE                             3
    #define       bGbl_I2S2_DOCntl_IE                          1
    #define   MSK32Gbl_I2S2_DOCntl_IE                             0x00000008

    #define     BA_Gbl_I2S2_DOCntl_PD                          0x88F8
    #define     B16Gbl_I2S2_DOCntl_PD                          0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_PD                             4
    #define   LSb16Gbl_I2S2_DOCntl_PD                             4
    #define       bGbl_I2S2_DOCntl_PD                          1
    #define   MSK32Gbl_I2S2_DOCntl_PD                             0x00000010

    #define     BA_Gbl_I2S2_DOCntl_PU                          0x88F8
    #define     B16Gbl_I2S2_DOCntl_PU                          0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_PU                             5
    #define   LSb16Gbl_I2S2_DOCntl_PU                             5
    #define       bGbl_I2S2_DOCntl_PU                          1
    #define   MSK32Gbl_I2S2_DOCntl_PU                             0x00000020

    #define     BA_Gbl_I2S2_DOCntl_SL                          0x88F8
    #define     B16Gbl_I2S2_DOCntl_SL                          0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_SL                             6
    #define   LSb16Gbl_I2S2_DOCntl_SL                             6
    #define       bGbl_I2S2_DOCntl_SL                          1
    #define   MSK32Gbl_I2S2_DOCntl_SL                             0x00000040

    #define     BA_Gbl_I2S2_DOCntl_ST                          0x88F8
    #define     B16Gbl_I2S2_DOCntl_ST                          0x88F8
    #define   LSb32Gbl_I2S2_DOCntl_ST                             7
    #define   LSb16Gbl_I2S2_DOCntl_ST                             7
    #define       bGbl_I2S2_DOCntl_ST                          1
    #define   MSK32Gbl_I2S2_DOCntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DICntl                             0x88FC

    #define     BA_Gbl_I2S2_DICntl_DS0                         0x88FC
    #define     B16Gbl_I2S2_DICntl_DS0                         0x88FC
    #define   LSb32Gbl_I2S2_DICntl_DS0                            0
    #define   LSb16Gbl_I2S2_DICntl_DS0                            0
    #define       bGbl_I2S2_DICntl_DS0                         1
    #define   MSK32Gbl_I2S2_DICntl_DS0                            0x00000001

    #define     BA_Gbl_I2S2_DICntl_DS1                         0x88FC
    #define     B16Gbl_I2S2_DICntl_DS1                         0x88FC
    #define   LSb32Gbl_I2S2_DICntl_DS1                            1
    #define   LSb16Gbl_I2S2_DICntl_DS1                            1
    #define       bGbl_I2S2_DICntl_DS1                         1
    #define   MSK32Gbl_I2S2_DICntl_DS1                            0x00000002

    #define     BA_Gbl_I2S2_DICntl_DS2                         0x88FC
    #define     B16Gbl_I2S2_DICntl_DS2                         0x88FC
    #define   LSb32Gbl_I2S2_DICntl_DS2                            2
    #define   LSb16Gbl_I2S2_DICntl_DS2                            2
    #define       bGbl_I2S2_DICntl_DS2                         1
    #define   MSK32Gbl_I2S2_DICntl_DS2                            0x00000004

    #define     BA_Gbl_I2S2_DICntl_IE                          0x88FC
    #define     B16Gbl_I2S2_DICntl_IE                          0x88FC
    #define   LSb32Gbl_I2S2_DICntl_IE                             3
    #define   LSb16Gbl_I2S2_DICntl_IE                             3
    #define       bGbl_I2S2_DICntl_IE                          1
    #define   MSK32Gbl_I2S2_DICntl_IE                             0x00000008

    #define     BA_Gbl_I2S2_DICntl_PD                          0x88FC
    #define     B16Gbl_I2S2_DICntl_PD                          0x88FC
    #define   LSb32Gbl_I2S2_DICntl_PD                             4
    #define   LSb16Gbl_I2S2_DICntl_PD                             4
    #define       bGbl_I2S2_DICntl_PD                          1
    #define   MSK32Gbl_I2S2_DICntl_PD                             0x00000010

    #define     BA_Gbl_I2S2_DICntl_PU                          0x88FC
    #define     B16Gbl_I2S2_DICntl_PU                          0x88FC
    #define   LSb32Gbl_I2S2_DICntl_PU                             5
    #define   LSb16Gbl_I2S2_DICntl_PU                             5
    #define       bGbl_I2S2_DICntl_PU                          1
    #define   MSK32Gbl_I2S2_DICntl_PU                             0x00000020

    #define     BA_Gbl_I2S2_DICntl_SL                          0x88FC
    #define     B16Gbl_I2S2_DICntl_SL                          0x88FC
    #define   LSb32Gbl_I2S2_DICntl_SL                             6
    #define   LSb16Gbl_I2S2_DICntl_SL                             6
    #define       bGbl_I2S2_DICntl_SL                          1
    #define   MSK32Gbl_I2S2_DICntl_SL                             0x00000040

    #define     BA_Gbl_I2S2_DICntl_ST                          0x88FC
    #define     B16Gbl_I2S2_DICntl_ST                          0x88FC
    #define   LSb32Gbl_I2S2_DICntl_ST                             7
    #define   LSb16Gbl_I2S2_DICntl_ST                             7
    #define       bGbl_I2S2_DICntl_ST                          1
    #define   MSK32Gbl_I2S2_DICntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PDM_CLKIOCntl                           0x8900

    #define     BA_Gbl_PDM_CLKIOCntl_DS0                       0x8900
    #define     B16Gbl_PDM_CLKIOCntl_DS0                       0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_DS0                          0
    #define   LSb16Gbl_PDM_CLKIOCntl_DS0                          0
    #define       bGbl_PDM_CLKIOCntl_DS0                       1
    #define   MSK32Gbl_PDM_CLKIOCntl_DS0                          0x00000001

    #define     BA_Gbl_PDM_CLKIOCntl_DS1                       0x8900
    #define     B16Gbl_PDM_CLKIOCntl_DS1                       0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_DS1                          1
    #define   LSb16Gbl_PDM_CLKIOCntl_DS1                          1
    #define       bGbl_PDM_CLKIOCntl_DS1                       1
    #define   MSK32Gbl_PDM_CLKIOCntl_DS1                          0x00000002

    #define     BA_Gbl_PDM_CLKIOCntl_DS2                       0x8900
    #define     B16Gbl_PDM_CLKIOCntl_DS2                       0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_DS2                          2
    #define   LSb16Gbl_PDM_CLKIOCntl_DS2                          2
    #define       bGbl_PDM_CLKIOCntl_DS2                       1
    #define   MSK32Gbl_PDM_CLKIOCntl_DS2                          0x00000004

    #define     BA_Gbl_PDM_CLKIOCntl_IE                        0x8900
    #define     B16Gbl_PDM_CLKIOCntl_IE                        0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_IE                           3
    #define   LSb16Gbl_PDM_CLKIOCntl_IE                           3
    #define       bGbl_PDM_CLKIOCntl_IE                        1
    #define   MSK32Gbl_PDM_CLKIOCntl_IE                           0x00000008

    #define     BA_Gbl_PDM_CLKIOCntl_PD                        0x8900
    #define     B16Gbl_PDM_CLKIOCntl_PD                        0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_PD                           4
    #define   LSb16Gbl_PDM_CLKIOCntl_PD                           4
    #define       bGbl_PDM_CLKIOCntl_PD                        1
    #define   MSK32Gbl_PDM_CLKIOCntl_PD                           0x00000010

    #define     BA_Gbl_PDM_CLKIOCntl_PU                        0x8900
    #define     B16Gbl_PDM_CLKIOCntl_PU                        0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_PU                           5
    #define   LSb16Gbl_PDM_CLKIOCntl_PU                           5
    #define       bGbl_PDM_CLKIOCntl_PU                        1
    #define   MSK32Gbl_PDM_CLKIOCntl_PU                           0x00000020

    #define     BA_Gbl_PDM_CLKIOCntl_SL                        0x8900
    #define     B16Gbl_PDM_CLKIOCntl_SL                        0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_SL                           6
    #define   LSb16Gbl_PDM_CLKIOCntl_SL                           6
    #define       bGbl_PDM_CLKIOCntl_SL                        1
    #define   MSK32Gbl_PDM_CLKIOCntl_SL                           0x00000040

    #define     BA_Gbl_PDM_CLKIOCntl_ST                        0x8900
    #define     B16Gbl_PDM_CLKIOCntl_ST                        0x8900
    #define   LSb32Gbl_PDM_CLKIOCntl_ST                           7
    #define   LSb16Gbl_PDM_CLKIOCntl_ST                           7
    #define       bGbl_PDM_CLKIOCntl_ST                        1
    #define   MSK32Gbl_PDM_CLKIOCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PDM_DI0Cntl                             0x8904

    #define     BA_Gbl_PDM_DI0Cntl_DS0                         0x8904
    #define     B16Gbl_PDM_DI0Cntl_DS0                         0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_DS0                            0
    #define   LSb16Gbl_PDM_DI0Cntl_DS0                            0
    #define       bGbl_PDM_DI0Cntl_DS0                         1
    #define   MSK32Gbl_PDM_DI0Cntl_DS0                            0x00000001

    #define     BA_Gbl_PDM_DI0Cntl_DS1                         0x8904
    #define     B16Gbl_PDM_DI0Cntl_DS1                         0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_DS1                            1
    #define   LSb16Gbl_PDM_DI0Cntl_DS1                            1
    #define       bGbl_PDM_DI0Cntl_DS1                         1
    #define   MSK32Gbl_PDM_DI0Cntl_DS1                            0x00000002

    #define     BA_Gbl_PDM_DI0Cntl_DS2                         0x8904
    #define     B16Gbl_PDM_DI0Cntl_DS2                         0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_DS2                            2
    #define   LSb16Gbl_PDM_DI0Cntl_DS2                            2
    #define       bGbl_PDM_DI0Cntl_DS2                         1
    #define   MSK32Gbl_PDM_DI0Cntl_DS2                            0x00000004

    #define     BA_Gbl_PDM_DI0Cntl_IE                          0x8904
    #define     B16Gbl_PDM_DI0Cntl_IE                          0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_IE                             3
    #define   LSb16Gbl_PDM_DI0Cntl_IE                             3
    #define       bGbl_PDM_DI0Cntl_IE                          1
    #define   MSK32Gbl_PDM_DI0Cntl_IE                             0x00000008

    #define     BA_Gbl_PDM_DI0Cntl_PD                          0x8904
    #define     B16Gbl_PDM_DI0Cntl_PD                          0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_PD                             4
    #define   LSb16Gbl_PDM_DI0Cntl_PD                             4
    #define       bGbl_PDM_DI0Cntl_PD                          1
    #define   MSK32Gbl_PDM_DI0Cntl_PD                             0x00000010

    #define     BA_Gbl_PDM_DI0Cntl_PU                          0x8904
    #define     B16Gbl_PDM_DI0Cntl_PU                          0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_PU                             5
    #define   LSb16Gbl_PDM_DI0Cntl_PU                             5
    #define       bGbl_PDM_DI0Cntl_PU                          1
    #define   MSK32Gbl_PDM_DI0Cntl_PU                             0x00000020

    #define     BA_Gbl_PDM_DI0Cntl_SL                          0x8904
    #define     B16Gbl_PDM_DI0Cntl_SL                          0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_SL                             6
    #define   LSb16Gbl_PDM_DI0Cntl_SL                             6
    #define       bGbl_PDM_DI0Cntl_SL                          1
    #define   MSK32Gbl_PDM_DI0Cntl_SL                             0x00000040

    #define     BA_Gbl_PDM_DI0Cntl_ST                          0x8904
    #define     B16Gbl_PDM_DI0Cntl_ST                          0x8904
    #define   LSb32Gbl_PDM_DI0Cntl_ST                             7
    #define   LSb16Gbl_PDM_DI0Cntl_ST                             7
    #define       bGbl_PDM_DI0Cntl_ST                          1
    #define   MSK32Gbl_PDM_DI0Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PDM_DI1Cntl                             0x8908

    #define     BA_Gbl_PDM_DI1Cntl_DS0                         0x8908
    #define     B16Gbl_PDM_DI1Cntl_DS0                         0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_DS0                            0
    #define   LSb16Gbl_PDM_DI1Cntl_DS0                            0
    #define       bGbl_PDM_DI1Cntl_DS0                         1
    #define   MSK32Gbl_PDM_DI1Cntl_DS0                            0x00000001

    #define     BA_Gbl_PDM_DI1Cntl_DS1                         0x8908
    #define     B16Gbl_PDM_DI1Cntl_DS1                         0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_DS1                            1
    #define   LSb16Gbl_PDM_DI1Cntl_DS1                            1
    #define       bGbl_PDM_DI1Cntl_DS1                         1
    #define   MSK32Gbl_PDM_DI1Cntl_DS1                            0x00000002

    #define     BA_Gbl_PDM_DI1Cntl_DS2                         0x8908
    #define     B16Gbl_PDM_DI1Cntl_DS2                         0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_DS2                            2
    #define   LSb16Gbl_PDM_DI1Cntl_DS2                            2
    #define       bGbl_PDM_DI1Cntl_DS2                         1
    #define   MSK32Gbl_PDM_DI1Cntl_DS2                            0x00000004

    #define     BA_Gbl_PDM_DI1Cntl_IE                          0x8908
    #define     B16Gbl_PDM_DI1Cntl_IE                          0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_IE                             3
    #define   LSb16Gbl_PDM_DI1Cntl_IE                             3
    #define       bGbl_PDM_DI1Cntl_IE                          1
    #define   MSK32Gbl_PDM_DI1Cntl_IE                             0x00000008

    #define     BA_Gbl_PDM_DI1Cntl_PD                          0x8908
    #define     B16Gbl_PDM_DI1Cntl_PD                          0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_PD                             4
    #define   LSb16Gbl_PDM_DI1Cntl_PD                             4
    #define       bGbl_PDM_DI1Cntl_PD                          1
    #define   MSK32Gbl_PDM_DI1Cntl_PD                             0x00000010

    #define     BA_Gbl_PDM_DI1Cntl_PU                          0x8908
    #define     B16Gbl_PDM_DI1Cntl_PU                          0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_PU                             5
    #define   LSb16Gbl_PDM_DI1Cntl_PU                             5
    #define       bGbl_PDM_DI1Cntl_PU                          1
    #define   MSK32Gbl_PDM_DI1Cntl_PU                             0x00000020

    #define     BA_Gbl_PDM_DI1Cntl_SL                          0x8908
    #define     B16Gbl_PDM_DI1Cntl_SL                          0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_SL                             6
    #define   LSb16Gbl_PDM_DI1Cntl_SL                             6
    #define       bGbl_PDM_DI1Cntl_SL                          1
    #define   MSK32Gbl_PDM_DI1Cntl_SL                             0x00000040

    #define     BA_Gbl_PDM_DI1Cntl_ST                          0x8908
    #define     B16Gbl_PDM_DI1Cntl_ST                          0x8908
    #define   LSb32Gbl_PDM_DI1Cntl_ST                             7
    #define   LSb16Gbl_PDM_DI1Cntl_ST                             7
    #define       bGbl_PDM_DI1Cntl_ST                          1
    #define   MSK32Gbl_PDM_DI1Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_DOCntl                             0x890C

    #define     BA_Gbl_I2S3_DOCntl_DS0                         0x890C
    #define     B16Gbl_I2S3_DOCntl_DS0                         0x890C
    #define   LSb32Gbl_I2S3_DOCntl_DS0                            0
    #define   LSb16Gbl_I2S3_DOCntl_DS0                            0
    #define       bGbl_I2S3_DOCntl_DS0                         1
    #define   MSK32Gbl_I2S3_DOCntl_DS0                            0x00000001

    #define     BA_Gbl_I2S3_DOCntl_DS1                         0x890C
    #define     B16Gbl_I2S3_DOCntl_DS1                         0x890C
    #define   LSb32Gbl_I2S3_DOCntl_DS1                            1
    #define   LSb16Gbl_I2S3_DOCntl_DS1                            1
    #define       bGbl_I2S3_DOCntl_DS1                         1
    #define   MSK32Gbl_I2S3_DOCntl_DS1                            0x00000002

    #define     BA_Gbl_I2S3_DOCntl_DS2                         0x890C
    #define     B16Gbl_I2S3_DOCntl_DS2                         0x890C
    #define   LSb32Gbl_I2S3_DOCntl_DS2                            2
    #define   LSb16Gbl_I2S3_DOCntl_DS2                            2
    #define       bGbl_I2S3_DOCntl_DS2                         1
    #define   MSK32Gbl_I2S3_DOCntl_DS2                            0x00000004

    #define     BA_Gbl_I2S3_DOCntl_IE                          0x890C
    #define     B16Gbl_I2S3_DOCntl_IE                          0x890C
    #define   LSb32Gbl_I2S3_DOCntl_IE                             3
    #define   LSb16Gbl_I2S3_DOCntl_IE                             3
    #define       bGbl_I2S3_DOCntl_IE                          1
    #define   MSK32Gbl_I2S3_DOCntl_IE                             0x00000008

    #define     BA_Gbl_I2S3_DOCntl_PD                          0x890C
    #define     B16Gbl_I2S3_DOCntl_PD                          0x890C
    #define   LSb32Gbl_I2S3_DOCntl_PD                             4
    #define   LSb16Gbl_I2S3_DOCntl_PD                             4
    #define       bGbl_I2S3_DOCntl_PD                          1
    #define   MSK32Gbl_I2S3_DOCntl_PD                             0x00000010

    #define     BA_Gbl_I2S3_DOCntl_PU                          0x890C
    #define     B16Gbl_I2S3_DOCntl_PU                          0x890C
    #define   LSb32Gbl_I2S3_DOCntl_PU                             5
    #define   LSb16Gbl_I2S3_DOCntl_PU                             5
    #define       bGbl_I2S3_DOCntl_PU                          1
    #define   MSK32Gbl_I2S3_DOCntl_PU                             0x00000020

    #define     BA_Gbl_I2S3_DOCntl_SL                          0x890C
    #define     B16Gbl_I2S3_DOCntl_SL                          0x890C
    #define   LSb32Gbl_I2S3_DOCntl_SL                             6
    #define   LSb16Gbl_I2S3_DOCntl_SL                             6
    #define       bGbl_I2S3_DOCntl_SL                          1
    #define   MSK32Gbl_I2S3_DOCntl_SL                             0x00000040

    #define     BA_Gbl_I2S3_DOCntl_ST                          0x890C
    #define     B16Gbl_I2S3_DOCntl_ST                          0x890C
    #define   LSb32Gbl_I2S3_DOCntl_ST                             7
    #define   LSb16Gbl_I2S3_DOCntl_ST                             7
    #define       bGbl_I2S3_DOCntl_ST                          1
    #define   MSK32Gbl_I2S3_DOCntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_LRCKCntl                           0x8910

    #define     BA_Gbl_I2S3_LRCKCntl_DS0                       0x8910
    #define     B16Gbl_I2S3_LRCKCntl_DS0                       0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_DS0                          0
    #define   LSb16Gbl_I2S3_LRCKCntl_DS0                          0
    #define       bGbl_I2S3_LRCKCntl_DS0                       1
    #define   MSK32Gbl_I2S3_LRCKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S3_LRCKCntl_DS1                       0x8910
    #define     B16Gbl_I2S3_LRCKCntl_DS1                       0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_DS1                          1
    #define   LSb16Gbl_I2S3_LRCKCntl_DS1                          1
    #define       bGbl_I2S3_LRCKCntl_DS1                       1
    #define   MSK32Gbl_I2S3_LRCKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S3_LRCKCntl_DS2                       0x8910
    #define     B16Gbl_I2S3_LRCKCntl_DS2                       0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_DS2                          2
    #define   LSb16Gbl_I2S3_LRCKCntl_DS2                          2
    #define       bGbl_I2S3_LRCKCntl_DS2                       1
    #define   MSK32Gbl_I2S3_LRCKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S3_LRCKCntl_DS3                       0x8910
    #define     B16Gbl_I2S3_LRCKCntl_DS3                       0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_DS3                          3
    #define   LSb16Gbl_I2S3_LRCKCntl_DS3                          3
    #define       bGbl_I2S3_LRCKCntl_DS3                       1
    #define   MSK32Gbl_I2S3_LRCKCntl_DS3                          0x00000008

    #define     BA_Gbl_I2S3_LRCKCntl_IE                        0x8910
    #define     B16Gbl_I2S3_LRCKCntl_IE                        0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_IE                           4
    #define   LSb16Gbl_I2S3_LRCKCntl_IE                           4
    #define       bGbl_I2S3_LRCKCntl_IE                        1
    #define   MSK32Gbl_I2S3_LRCKCntl_IE                           0x00000010

    #define     BA_Gbl_I2S3_LRCKCntl_PE                        0x8910
    #define     B16Gbl_I2S3_LRCKCntl_PE                        0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_PE                           5
    #define   LSb16Gbl_I2S3_LRCKCntl_PE                           5
    #define       bGbl_I2S3_LRCKCntl_PE                        1
    #define   MSK32Gbl_I2S3_LRCKCntl_PE                           0x00000020

    #define     BA_Gbl_I2S3_LRCKCntl_PS                        0x8910
    #define     B16Gbl_I2S3_LRCKCntl_PS                        0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_PS                           6
    #define   LSb16Gbl_I2S3_LRCKCntl_PS                           6
    #define       bGbl_I2S3_LRCKCntl_PS                        1
    #define   MSK32Gbl_I2S3_LRCKCntl_PS                           0x00000040

    #define     BA_Gbl_I2S3_LRCKCntl_SL                        0x8910
    #define     B16Gbl_I2S3_LRCKCntl_SL                        0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_SL                           7
    #define   LSb16Gbl_I2S3_LRCKCntl_SL                           7
    #define       bGbl_I2S3_LRCKCntl_SL                        1
    #define   MSK32Gbl_I2S3_LRCKCntl_SL                           0x00000080

    #define     BA_Gbl_I2S3_LRCKCntl_SPU                       0x8911
    #define     B16Gbl_I2S3_LRCKCntl_SPU                       0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_SPU                          8
    #define   LSb16Gbl_I2S3_LRCKCntl_SPU                          8
    #define       bGbl_I2S3_LRCKCntl_SPU                       1
    #define   MSK32Gbl_I2S3_LRCKCntl_SPU                          0x00000100

    #define     BA_Gbl_I2S3_LRCKCntl_ST                        0x8911
    #define     B16Gbl_I2S3_LRCKCntl_ST                        0x8910
    #define   LSb32Gbl_I2S3_LRCKCntl_ST                           9
    #define   LSb16Gbl_I2S3_LRCKCntl_ST                           9
    #define       bGbl_I2S3_LRCKCntl_ST                        1
    #define   MSK32Gbl_I2S3_LRCKCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_BCLKCntl                           0x8914

    #define     BA_Gbl_I2S3_BCLKCntl_DS0                       0x8914
    #define     B16Gbl_I2S3_BCLKCntl_DS0                       0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_DS0                          0
    #define   LSb16Gbl_I2S3_BCLKCntl_DS0                          0
    #define       bGbl_I2S3_BCLKCntl_DS0                       1
    #define   MSK32Gbl_I2S3_BCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S3_BCLKCntl_DS1                       0x8914
    #define     B16Gbl_I2S3_BCLKCntl_DS1                       0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_DS1                          1
    #define   LSb16Gbl_I2S3_BCLKCntl_DS1                          1
    #define       bGbl_I2S3_BCLKCntl_DS1                       1
    #define   MSK32Gbl_I2S3_BCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S3_BCLKCntl_DS2                       0x8914
    #define     B16Gbl_I2S3_BCLKCntl_DS2                       0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_DS2                          2
    #define   LSb16Gbl_I2S3_BCLKCntl_DS2                          2
    #define       bGbl_I2S3_BCLKCntl_DS2                       1
    #define   MSK32Gbl_I2S3_BCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S3_BCLKCntl_DS3                       0x8914
    #define     B16Gbl_I2S3_BCLKCntl_DS3                       0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_DS3                          3
    #define   LSb16Gbl_I2S3_BCLKCntl_DS3                          3
    #define       bGbl_I2S3_BCLKCntl_DS3                       1
    #define   MSK32Gbl_I2S3_BCLKCntl_DS3                          0x00000008

    #define     BA_Gbl_I2S3_BCLKCntl_IE                        0x8914
    #define     B16Gbl_I2S3_BCLKCntl_IE                        0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_IE                           4
    #define   LSb16Gbl_I2S3_BCLKCntl_IE                           4
    #define       bGbl_I2S3_BCLKCntl_IE                        1
    #define   MSK32Gbl_I2S3_BCLKCntl_IE                           0x00000010

    #define     BA_Gbl_I2S3_BCLKCntl_PE                        0x8914
    #define     B16Gbl_I2S3_BCLKCntl_PE                        0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_PE                           5
    #define   LSb16Gbl_I2S3_BCLKCntl_PE                           5
    #define       bGbl_I2S3_BCLKCntl_PE                        1
    #define   MSK32Gbl_I2S3_BCLKCntl_PE                           0x00000020

    #define     BA_Gbl_I2S3_BCLKCntl_PS                        0x8914
    #define     B16Gbl_I2S3_BCLKCntl_PS                        0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_PS                           6
    #define   LSb16Gbl_I2S3_BCLKCntl_PS                           6
    #define       bGbl_I2S3_BCLKCntl_PS                        1
    #define   MSK32Gbl_I2S3_BCLKCntl_PS                           0x00000040

    #define     BA_Gbl_I2S3_BCLKCntl_SL                        0x8914
    #define     B16Gbl_I2S3_BCLKCntl_SL                        0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_SL                           7
    #define   LSb16Gbl_I2S3_BCLKCntl_SL                           7
    #define       bGbl_I2S3_BCLKCntl_SL                        1
    #define   MSK32Gbl_I2S3_BCLKCntl_SL                           0x00000080

    #define     BA_Gbl_I2S3_BCLKCntl_SPU                       0x8915
    #define     B16Gbl_I2S3_BCLKCntl_SPU                       0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_SPU                          8
    #define   LSb16Gbl_I2S3_BCLKCntl_SPU                          8
    #define       bGbl_I2S3_BCLKCntl_SPU                       1
    #define   MSK32Gbl_I2S3_BCLKCntl_SPU                          0x00000100

    #define     BA_Gbl_I2S3_BCLKCntl_ST                        0x8915
    #define     B16Gbl_I2S3_BCLKCntl_ST                        0x8914
    #define   LSb32Gbl_I2S3_BCLKCntl_ST                           9
    #define   LSb16Gbl_I2S3_BCLKCntl_ST                           9
    #define       bGbl_I2S3_BCLKCntl_ST                        1
    #define   MSK32Gbl_I2S3_BCLKCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_DICntl                             0x8918

    #define     BA_Gbl_I2S3_DICntl_DS0                         0x8918
    #define     B16Gbl_I2S3_DICntl_DS0                         0x8918
    #define   LSb32Gbl_I2S3_DICntl_DS0                            0
    #define   LSb16Gbl_I2S3_DICntl_DS0                            0
    #define       bGbl_I2S3_DICntl_DS0                         1
    #define   MSK32Gbl_I2S3_DICntl_DS0                            0x00000001

    #define     BA_Gbl_I2S3_DICntl_DS1                         0x8918
    #define     B16Gbl_I2S3_DICntl_DS1                         0x8918
    #define   LSb32Gbl_I2S3_DICntl_DS1                            1
    #define   LSb16Gbl_I2S3_DICntl_DS1                            1
    #define       bGbl_I2S3_DICntl_DS1                         1
    #define   MSK32Gbl_I2S3_DICntl_DS1                            0x00000002

    #define     BA_Gbl_I2S3_DICntl_DS2                         0x8918
    #define     B16Gbl_I2S3_DICntl_DS2                         0x8918
    #define   LSb32Gbl_I2S3_DICntl_DS2                            2
    #define   LSb16Gbl_I2S3_DICntl_DS2                            2
    #define       bGbl_I2S3_DICntl_DS2                         1
    #define   MSK32Gbl_I2S3_DICntl_DS2                            0x00000004

    #define     BA_Gbl_I2S3_DICntl_DS3                         0x8918
    #define     B16Gbl_I2S3_DICntl_DS3                         0x8918
    #define   LSb32Gbl_I2S3_DICntl_DS3                            3
    #define   LSb16Gbl_I2S3_DICntl_DS3                            3
    #define       bGbl_I2S3_DICntl_DS3                         1
    #define   MSK32Gbl_I2S3_DICntl_DS3                            0x00000008

    #define     BA_Gbl_I2S3_DICntl_IE                          0x8918
    #define     B16Gbl_I2S3_DICntl_IE                          0x8918
    #define   LSb32Gbl_I2S3_DICntl_IE                             4
    #define   LSb16Gbl_I2S3_DICntl_IE                             4
    #define       bGbl_I2S3_DICntl_IE                          1
    #define   MSK32Gbl_I2S3_DICntl_IE                             0x00000010

    #define     BA_Gbl_I2S3_DICntl_PE                          0x8918
    #define     B16Gbl_I2S3_DICntl_PE                          0x8918
    #define   LSb32Gbl_I2S3_DICntl_PE                             5
    #define   LSb16Gbl_I2S3_DICntl_PE                             5
    #define       bGbl_I2S3_DICntl_PE                          1
    #define   MSK32Gbl_I2S3_DICntl_PE                             0x00000020

    #define     BA_Gbl_I2S3_DICntl_PS                          0x8918
    #define     B16Gbl_I2S3_DICntl_PS                          0x8918
    #define   LSb32Gbl_I2S3_DICntl_PS                             6
    #define   LSb16Gbl_I2S3_DICntl_PS                             6
    #define       bGbl_I2S3_DICntl_PS                          1
    #define   MSK32Gbl_I2S3_DICntl_PS                             0x00000040

    #define     BA_Gbl_I2S3_DICntl_SL                          0x8918
    #define     B16Gbl_I2S3_DICntl_SL                          0x8918
    #define   LSb32Gbl_I2S3_DICntl_SL                             7
    #define   LSb16Gbl_I2S3_DICntl_SL                             7
    #define       bGbl_I2S3_DICntl_SL                          1
    #define   MSK32Gbl_I2S3_DICntl_SL                             0x00000080

    #define     BA_Gbl_I2S3_DICntl_SPU                         0x8919
    #define     B16Gbl_I2S3_DICntl_SPU                         0x8918
    #define   LSb32Gbl_I2S3_DICntl_SPU                            8
    #define   LSb16Gbl_I2S3_DICntl_SPU                            8
    #define       bGbl_I2S3_DICntl_SPU                         1
    #define   MSK32Gbl_I2S3_DICntl_SPU                            0x00000100

    #define     BA_Gbl_I2S3_DICntl_ST                          0x8919
    #define     B16Gbl_I2S3_DICntl_ST                          0x8918
    #define   LSb32Gbl_I2S3_DICntl_ST                             9
    #define   LSb16Gbl_I2S3_DICntl_ST                             9
    #define       bGbl_I2S3_DICntl_ST                          1
    #define   MSK32Gbl_I2S3_DICntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD0Cntl                               0x891C

    #define     BA_Gbl_LCDD0Cntl_DS0                           0x891C
    #define     B16Gbl_LCDD0Cntl_DS0                           0x891C
    #define   LSb32Gbl_LCDD0Cntl_DS0                              0
    #define   LSb16Gbl_LCDD0Cntl_DS0                              0
    #define       bGbl_LCDD0Cntl_DS0                           1
    #define   MSK32Gbl_LCDD0Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD0Cntl_DS1                           0x891C
    #define     B16Gbl_LCDD0Cntl_DS1                           0x891C
    #define   LSb32Gbl_LCDD0Cntl_DS1                              1
    #define   LSb16Gbl_LCDD0Cntl_DS1                              1
    #define       bGbl_LCDD0Cntl_DS1                           1
    #define   MSK32Gbl_LCDD0Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD0Cntl_DS2                           0x891C
    #define     B16Gbl_LCDD0Cntl_DS2                           0x891C
    #define   LSb32Gbl_LCDD0Cntl_DS2                              2
    #define   LSb16Gbl_LCDD0Cntl_DS2                              2
    #define       bGbl_LCDD0Cntl_DS2                           1
    #define   MSK32Gbl_LCDD0Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD0Cntl_DS3                           0x891C
    #define     B16Gbl_LCDD0Cntl_DS3                           0x891C
    #define   LSb32Gbl_LCDD0Cntl_DS3                              3
    #define   LSb16Gbl_LCDD0Cntl_DS3                              3
    #define       bGbl_LCDD0Cntl_DS3                           1
    #define   MSK32Gbl_LCDD0Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD0Cntl_IE                            0x891C
    #define     B16Gbl_LCDD0Cntl_IE                            0x891C
    #define   LSb32Gbl_LCDD0Cntl_IE                               4
    #define   LSb16Gbl_LCDD0Cntl_IE                               4
    #define       bGbl_LCDD0Cntl_IE                            1
    #define   MSK32Gbl_LCDD0Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD0Cntl_PD                            0x891C
    #define     B16Gbl_LCDD0Cntl_PD                            0x891C
    #define   LSb32Gbl_LCDD0Cntl_PD                               5
    #define   LSb16Gbl_LCDD0Cntl_PD                               5
    #define       bGbl_LCDD0Cntl_PD                            1
    #define   MSK32Gbl_LCDD0Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD0Cntl_PU                            0x891C
    #define     B16Gbl_LCDD0Cntl_PU                            0x891C
    #define   LSb32Gbl_LCDD0Cntl_PU                               6
    #define   LSb16Gbl_LCDD0Cntl_PU                               6
    #define       bGbl_LCDD0Cntl_PU                            1
    #define   MSK32Gbl_LCDD0Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD0Cntl_ST                            0x891C
    #define     B16Gbl_LCDD0Cntl_ST                            0x891C
    #define   LSb32Gbl_LCDD0Cntl_ST                               7
    #define   LSb16Gbl_LCDD0Cntl_ST                               7
    #define       bGbl_LCDD0Cntl_ST                            1
    #define   MSK32Gbl_LCDD0Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD1Cntl                               0x8920

    #define     BA_Gbl_LCDD1Cntl_DS0                           0x8920
    #define     B16Gbl_LCDD1Cntl_DS0                           0x8920
    #define   LSb32Gbl_LCDD1Cntl_DS0                              0
    #define   LSb16Gbl_LCDD1Cntl_DS0                              0
    #define       bGbl_LCDD1Cntl_DS0                           1
    #define   MSK32Gbl_LCDD1Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD1Cntl_DS1                           0x8920
    #define     B16Gbl_LCDD1Cntl_DS1                           0x8920
    #define   LSb32Gbl_LCDD1Cntl_DS1                              1
    #define   LSb16Gbl_LCDD1Cntl_DS1                              1
    #define       bGbl_LCDD1Cntl_DS1                           1
    #define   MSK32Gbl_LCDD1Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD1Cntl_DS2                           0x8920
    #define     B16Gbl_LCDD1Cntl_DS2                           0x8920
    #define   LSb32Gbl_LCDD1Cntl_DS2                              2
    #define   LSb16Gbl_LCDD1Cntl_DS2                              2
    #define       bGbl_LCDD1Cntl_DS2                           1
    #define   MSK32Gbl_LCDD1Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD1Cntl_DS3                           0x8920
    #define     B16Gbl_LCDD1Cntl_DS3                           0x8920
    #define   LSb32Gbl_LCDD1Cntl_DS3                              3
    #define   LSb16Gbl_LCDD1Cntl_DS3                              3
    #define       bGbl_LCDD1Cntl_DS3                           1
    #define   MSK32Gbl_LCDD1Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD1Cntl_IE                            0x8920
    #define     B16Gbl_LCDD1Cntl_IE                            0x8920
    #define   LSb32Gbl_LCDD1Cntl_IE                               4
    #define   LSb16Gbl_LCDD1Cntl_IE                               4
    #define       bGbl_LCDD1Cntl_IE                            1
    #define   MSK32Gbl_LCDD1Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD1Cntl_PD                            0x8920
    #define     B16Gbl_LCDD1Cntl_PD                            0x8920
    #define   LSb32Gbl_LCDD1Cntl_PD                               5
    #define   LSb16Gbl_LCDD1Cntl_PD                               5
    #define       bGbl_LCDD1Cntl_PD                            1
    #define   MSK32Gbl_LCDD1Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD1Cntl_PU                            0x8920
    #define     B16Gbl_LCDD1Cntl_PU                            0x8920
    #define   LSb32Gbl_LCDD1Cntl_PU                               6
    #define   LSb16Gbl_LCDD1Cntl_PU                               6
    #define       bGbl_LCDD1Cntl_PU                            1
    #define   MSK32Gbl_LCDD1Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD1Cntl_ST                            0x8920
    #define     B16Gbl_LCDD1Cntl_ST                            0x8920
    #define   LSb32Gbl_LCDD1Cntl_ST                               7
    #define   LSb16Gbl_LCDD1Cntl_ST                               7
    #define       bGbl_LCDD1Cntl_ST                            1
    #define   MSK32Gbl_LCDD1Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD2Cntl                               0x8924

    #define     BA_Gbl_LCDD2Cntl_DS0                           0x8924
    #define     B16Gbl_LCDD2Cntl_DS0                           0x8924
    #define   LSb32Gbl_LCDD2Cntl_DS0                              0
    #define   LSb16Gbl_LCDD2Cntl_DS0                              0
    #define       bGbl_LCDD2Cntl_DS0                           1
    #define   MSK32Gbl_LCDD2Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD2Cntl_DS1                           0x8924
    #define     B16Gbl_LCDD2Cntl_DS1                           0x8924
    #define   LSb32Gbl_LCDD2Cntl_DS1                              1
    #define   LSb16Gbl_LCDD2Cntl_DS1                              1
    #define       bGbl_LCDD2Cntl_DS1                           1
    #define   MSK32Gbl_LCDD2Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD2Cntl_DS2                           0x8924
    #define     B16Gbl_LCDD2Cntl_DS2                           0x8924
    #define   LSb32Gbl_LCDD2Cntl_DS2                              2
    #define   LSb16Gbl_LCDD2Cntl_DS2                              2
    #define       bGbl_LCDD2Cntl_DS2                           1
    #define   MSK32Gbl_LCDD2Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD2Cntl_DS3                           0x8924
    #define     B16Gbl_LCDD2Cntl_DS3                           0x8924
    #define   LSb32Gbl_LCDD2Cntl_DS3                              3
    #define   LSb16Gbl_LCDD2Cntl_DS3                              3
    #define       bGbl_LCDD2Cntl_DS3                           1
    #define   MSK32Gbl_LCDD2Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD2Cntl_IE                            0x8924
    #define     B16Gbl_LCDD2Cntl_IE                            0x8924
    #define   LSb32Gbl_LCDD2Cntl_IE                               4
    #define   LSb16Gbl_LCDD2Cntl_IE                               4
    #define       bGbl_LCDD2Cntl_IE                            1
    #define   MSK32Gbl_LCDD2Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD2Cntl_PD                            0x8924
    #define     B16Gbl_LCDD2Cntl_PD                            0x8924
    #define   LSb32Gbl_LCDD2Cntl_PD                               5
    #define   LSb16Gbl_LCDD2Cntl_PD                               5
    #define       bGbl_LCDD2Cntl_PD                            1
    #define   MSK32Gbl_LCDD2Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD2Cntl_PU                            0x8924
    #define     B16Gbl_LCDD2Cntl_PU                            0x8924
    #define   LSb32Gbl_LCDD2Cntl_PU                               6
    #define   LSb16Gbl_LCDD2Cntl_PU                               6
    #define       bGbl_LCDD2Cntl_PU                            1
    #define   MSK32Gbl_LCDD2Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD2Cntl_ST                            0x8924
    #define     B16Gbl_LCDD2Cntl_ST                            0x8924
    #define   LSb32Gbl_LCDD2Cntl_ST                               7
    #define   LSb16Gbl_LCDD2Cntl_ST                               7
    #define       bGbl_LCDD2Cntl_ST                            1
    #define   MSK32Gbl_LCDD2Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD3Cntl                               0x8928

    #define     BA_Gbl_LCDD3Cntl_DS0                           0x8928
    #define     B16Gbl_LCDD3Cntl_DS0                           0x8928
    #define   LSb32Gbl_LCDD3Cntl_DS0                              0
    #define   LSb16Gbl_LCDD3Cntl_DS0                              0
    #define       bGbl_LCDD3Cntl_DS0                           1
    #define   MSK32Gbl_LCDD3Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD3Cntl_DS1                           0x8928
    #define     B16Gbl_LCDD3Cntl_DS1                           0x8928
    #define   LSb32Gbl_LCDD3Cntl_DS1                              1
    #define   LSb16Gbl_LCDD3Cntl_DS1                              1
    #define       bGbl_LCDD3Cntl_DS1                           1
    #define   MSK32Gbl_LCDD3Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD3Cntl_DS2                           0x8928
    #define     B16Gbl_LCDD3Cntl_DS2                           0x8928
    #define   LSb32Gbl_LCDD3Cntl_DS2                              2
    #define   LSb16Gbl_LCDD3Cntl_DS2                              2
    #define       bGbl_LCDD3Cntl_DS2                           1
    #define   MSK32Gbl_LCDD3Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD3Cntl_DS3                           0x8928
    #define     B16Gbl_LCDD3Cntl_DS3                           0x8928
    #define   LSb32Gbl_LCDD3Cntl_DS3                              3
    #define   LSb16Gbl_LCDD3Cntl_DS3                              3
    #define       bGbl_LCDD3Cntl_DS3                           1
    #define   MSK32Gbl_LCDD3Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD3Cntl_IE                            0x8928
    #define     B16Gbl_LCDD3Cntl_IE                            0x8928
    #define   LSb32Gbl_LCDD3Cntl_IE                               4
    #define   LSb16Gbl_LCDD3Cntl_IE                               4
    #define       bGbl_LCDD3Cntl_IE                            1
    #define   MSK32Gbl_LCDD3Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD3Cntl_PD                            0x8928
    #define     B16Gbl_LCDD3Cntl_PD                            0x8928
    #define   LSb32Gbl_LCDD3Cntl_PD                               5
    #define   LSb16Gbl_LCDD3Cntl_PD                               5
    #define       bGbl_LCDD3Cntl_PD                            1
    #define   MSK32Gbl_LCDD3Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD3Cntl_PU                            0x8928
    #define     B16Gbl_LCDD3Cntl_PU                            0x8928
    #define   LSb32Gbl_LCDD3Cntl_PU                               6
    #define   LSb16Gbl_LCDD3Cntl_PU                               6
    #define       bGbl_LCDD3Cntl_PU                            1
    #define   MSK32Gbl_LCDD3Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD3Cntl_ST                            0x8928
    #define     B16Gbl_LCDD3Cntl_ST                            0x8928
    #define   LSb32Gbl_LCDD3Cntl_ST                               7
    #define   LSb16Gbl_LCDD3Cntl_ST                               7
    #define       bGbl_LCDD3Cntl_ST                            1
    #define   MSK32Gbl_LCDD3Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD4Cntl                               0x892C

    #define     BA_Gbl_LCDD4Cntl_DS0                           0x892C
    #define     B16Gbl_LCDD4Cntl_DS0                           0x892C
    #define   LSb32Gbl_LCDD4Cntl_DS0                              0
    #define   LSb16Gbl_LCDD4Cntl_DS0                              0
    #define       bGbl_LCDD4Cntl_DS0                           1
    #define   MSK32Gbl_LCDD4Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD4Cntl_DS1                           0x892C
    #define     B16Gbl_LCDD4Cntl_DS1                           0x892C
    #define   LSb32Gbl_LCDD4Cntl_DS1                              1
    #define   LSb16Gbl_LCDD4Cntl_DS1                              1
    #define       bGbl_LCDD4Cntl_DS1                           1
    #define   MSK32Gbl_LCDD4Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD4Cntl_DS2                           0x892C
    #define     B16Gbl_LCDD4Cntl_DS2                           0x892C
    #define   LSb32Gbl_LCDD4Cntl_DS2                              2
    #define   LSb16Gbl_LCDD4Cntl_DS2                              2
    #define       bGbl_LCDD4Cntl_DS2                           1
    #define   MSK32Gbl_LCDD4Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD4Cntl_DS3                           0x892C
    #define     B16Gbl_LCDD4Cntl_DS3                           0x892C
    #define   LSb32Gbl_LCDD4Cntl_DS3                              3
    #define   LSb16Gbl_LCDD4Cntl_DS3                              3
    #define       bGbl_LCDD4Cntl_DS3                           1
    #define   MSK32Gbl_LCDD4Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD4Cntl_IE                            0x892C
    #define     B16Gbl_LCDD4Cntl_IE                            0x892C
    #define   LSb32Gbl_LCDD4Cntl_IE                               4
    #define   LSb16Gbl_LCDD4Cntl_IE                               4
    #define       bGbl_LCDD4Cntl_IE                            1
    #define   MSK32Gbl_LCDD4Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD4Cntl_PD                            0x892C
    #define     B16Gbl_LCDD4Cntl_PD                            0x892C
    #define   LSb32Gbl_LCDD4Cntl_PD                               5
    #define   LSb16Gbl_LCDD4Cntl_PD                               5
    #define       bGbl_LCDD4Cntl_PD                            1
    #define   MSK32Gbl_LCDD4Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD4Cntl_PU                            0x892C
    #define     B16Gbl_LCDD4Cntl_PU                            0x892C
    #define   LSb32Gbl_LCDD4Cntl_PU                               6
    #define   LSb16Gbl_LCDD4Cntl_PU                               6
    #define       bGbl_LCDD4Cntl_PU                            1
    #define   MSK32Gbl_LCDD4Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD4Cntl_ST                            0x892C
    #define     B16Gbl_LCDD4Cntl_ST                            0x892C
    #define   LSb32Gbl_LCDD4Cntl_ST                               7
    #define   LSb16Gbl_LCDD4Cntl_ST                               7
    #define       bGbl_LCDD4Cntl_ST                            1
    #define   MSK32Gbl_LCDD4Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD5Cntl                               0x8930

    #define     BA_Gbl_LCDD5Cntl_DS0                           0x8930
    #define     B16Gbl_LCDD5Cntl_DS0                           0x8930
    #define   LSb32Gbl_LCDD5Cntl_DS0                              0
    #define   LSb16Gbl_LCDD5Cntl_DS0                              0
    #define       bGbl_LCDD5Cntl_DS0                           1
    #define   MSK32Gbl_LCDD5Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD5Cntl_DS1                           0x8930
    #define     B16Gbl_LCDD5Cntl_DS1                           0x8930
    #define   LSb32Gbl_LCDD5Cntl_DS1                              1
    #define   LSb16Gbl_LCDD5Cntl_DS1                              1
    #define       bGbl_LCDD5Cntl_DS1                           1
    #define   MSK32Gbl_LCDD5Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD5Cntl_DS2                           0x8930
    #define     B16Gbl_LCDD5Cntl_DS2                           0x8930
    #define   LSb32Gbl_LCDD5Cntl_DS2                              2
    #define   LSb16Gbl_LCDD5Cntl_DS2                              2
    #define       bGbl_LCDD5Cntl_DS2                           1
    #define   MSK32Gbl_LCDD5Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD5Cntl_DS3                           0x8930
    #define     B16Gbl_LCDD5Cntl_DS3                           0x8930
    #define   LSb32Gbl_LCDD5Cntl_DS3                              3
    #define   LSb16Gbl_LCDD5Cntl_DS3                              3
    #define       bGbl_LCDD5Cntl_DS3                           1
    #define   MSK32Gbl_LCDD5Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD5Cntl_IE                            0x8930
    #define     B16Gbl_LCDD5Cntl_IE                            0x8930
    #define   LSb32Gbl_LCDD5Cntl_IE                               4
    #define   LSb16Gbl_LCDD5Cntl_IE                               4
    #define       bGbl_LCDD5Cntl_IE                            1
    #define   MSK32Gbl_LCDD5Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD5Cntl_PD                            0x8930
    #define     B16Gbl_LCDD5Cntl_PD                            0x8930
    #define   LSb32Gbl_LCDD5Cntl_PD                               5
    #define   LSb16Gbl_LCDD5Cntl_PD                               5
    #define       bGbl_LCDD5Cntl_PD                            1
    #define   MSK32Gbl_LCDD5Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD5Cntl_PU                            0x8930
    #define     B16Gbl_LCDD5Cntl_PU                            0x8930
    #define   LSb32Gbl_LCDD5Cntl_PU                               6
    #define   LSb16Gbl_LCDD5Cntl_PU                               6
    #define       bGbl_LCDD5Cntl_PU                            1
    #define   MSK32Gbl_LCDD5Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD5Cntl_ST                            0x8930
    #define     B16Gbl_LCDD5Cntl_ST                            0x8930
    #define   LSb32Gbl_LCDD5Cntl_ST                               7
    #define   LSb16Gbl_LCDD5Cntl_ST                               7
    #define       bGbl_LCDD5Cntl_ST                            1
    #define   MSK32Gbl_LCDD5Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD6Cntl                               0x8934

    #define     BA_Gbl_LCDD6Cntl_DS0                           0x8934
    #define     B16Gbl_LCDD6Cntl_DS0                           0x8934
    #define   LSb32Gbl_LCDD6Cntl_DS0                              0
    #define   LSb16Gbl_LCDD6Cntl_DS0                              0
    #define       bGbl_LCDD6Cntl_DS0                           1
    #define   MSK32Gbl_LCDD6Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD6Cntl_DS1                           0x8934
    #define     B16Gbl_LCDD6Cntl_DS1                           0x8934
    #define   LSb32Gbl_LCDD6Cntl_DS1                              1
    #define   LSb16Gbl_LCDD6Cntl_DS1                              1
    #define       bGbl_LCDD6Cntl_DS1                           1
    #define   MSK32Gbl_LCDD6Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD6Cntl_DS2                           0x8934
    #define     B16Gbl_LCDD6Cntl_DS2                           0x8934
    #define   LSb32Gbl_LCDD6Cntl_DS2                              2
    #define   LSb16Gbl_LCDD6Cntl_DS2                              2
    #define       bGbl_LCDD6Cntl_DS2                           1
    #define   MSK32Gbl_LCDD6Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD6Cntl_DS3                           0x8934
    #define     B16Gbl_LCDD6Cntl_DS3                           0x8934
    #define   LSb32Gbl_LCDD6Cntl_DS3                              3
    #define   LSb16Gbl_LCDD6Cntl_DS3                              3
    #define       bGbl_LCDD6Cntl_DS3                           1
    #define   MSK32Gbl_LCDD6Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD6Cntl_IE                            0x8934
    #define     B16Gbl_LCDD6Cntl_IE                            0x8934
    #define   LSb32Gbl_LCDD6Cntl_IE                               4
    #define   LSb16Gbl_LCDD6Cntl_IE                               4
    #define       bGbl_LCDD6Cntl_IE                            1
    #define   MSK32Gbl_LCDD6Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD6Cntl_PD                            0x8934
    #define     B16Gbl_LCDD6Cntl_PD                            0x8934
    #define   LSb32Gbl_LCDD6Cntl_PD                               5
    #define   LSb16Gbl_LCDD6Cntl_PD                               5
    #define       bGbl_LCDD6Cntl_PD                            1
    #define   MSK32Gbl_LCDD6Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD6Cntl_PU                            0x8934
    #define     B16Gbl_LCDD6Cntl_PU                            0x8934
    #define   LSb32Gbl_LCDD6Cntl_PU                               6
    #define   LSb16Gbl_LCDD6Cntl_PU                               6
    #define       bGbl_LCDD6Cntl_PU                            1
    #define   MSK32Gbl_LCDD6Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD6Cntl_ST                            0x8934
    #define     B16Gbl_LCDD6Cntl_ST                            0x8934
    #define   LSb32Gbl_LCDD6Cntl_ST                               7
    #define   LSb16Gbl_LCDD6Cntl_ST                               7
    #define       bGbl_LCDD6Cntl_ST                            1
    #define   MSK32Gbl_LCDD6Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD7Cntl                               0x8938

    #define     BA_Gbl_LCDD7Cntl_DS0                           0x8938
    #define     B16Gbl_LCDD7Cntl_DS0                           0x8938
    #define   LSb32Gbl_LCDD7Cntl_DS0                              0
    #define   LSb16Gbl_LCDD7Cntl_DS0                              0
    #define       bGbl_LCDD7Cntl_DS0                           1
    #define   MSK32Gbl_LCDD7Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD7Cntl_DS1                           0x8938
    #define     B16Gbl_LCDD7Cntl_DS1                           0x8938
    #define   LSb32Gbl_LCDD7Cntl_DS1                              1
    #define   LSb16Gbl_LCDD7Cntl_DS1                              1
    #define       bGbl_LCDD7Cntl_DS1                           1
    #define   MSK32Gbl_LCDD7Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD7Cntl_DS2                           0x8938
    #define     B16Gbl_LCDD7Cntl_DS2                           0x8938
    #define   LSb32Gbl_LCDD7Cntl_DS2                              2
    #define   LSb16Gbl_LCDD7Cntl_DS2                              2
    #define       bGbl_LCDD7Cntl_DS2                           1
    #define   MSK32Gbl_LCDD7Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD7Cntl_DS3                           0x8938
    #define     B16Gbl_LCDD7Cntl_DS3                           0x8938
    #define   LSb32Gbl_LCDD7Cntl_DS3                              3
    #define   LSb16Gbl_LCDD7Cntl_DS3                              3
    #define       bGbl_LCDD7Cntl_DS3                           1
    #define   MSK32Gbl_LCDD7Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD7Cntl_IE                            0x8938
    #define     B16Gbl_LCDD7Cntl_IE                            0x8938
    #define   LSb32Gbl_LCDD7Cntl_IE                               4
    #define   LSb16Gbl_LCDD7Cntl_IE                               4
    #define       bGbl_LCDD7Cntl_IE                            1
    #define   MSK32Gbl_LCDD7Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD7Cntl_PD                            0x8938
    #define     B16Gbl_LCDD7Cntl_PD                            0x8938
    #define   LSb32Gbl_LCDD7Cntl_PD                               5
    #define   LSb16Gbl_LCDD7Cntl_PD                               5
    #define       bGbl_LCDD7Cntl_PD                            1
    #define   MSK32Gbl_LCDD7Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD7Cntl_PU                            0x8938
    #define     B16Gbl_LCDD7Cntl_PU                            0x8938
    #define   LSb32Gbl_LCDD7Cntl_PU                               6
    #define   LSb16Gbl_LCDD7Cntl_PU                               6
    #define       bGbl_LCDD7Cntl_PU                            1
    #define   MSK32Gbl_LCDD7Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD7Cntl_ST                            0x8938
    #define     B16Gbl_LCDD7Cntl_ST                            0x8938
    #define   LSb32Gbl_LCDD7Cntl_ST                               7
    #define   LSb16Gbl_LCDD7Cntl_ST                               7
    #define       bGbl_LCDD7Cntl_ST                            1
    #define   MSK32Gbl_LCDD7Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD8Cntl                               0x893C

    #define     BA_Gbl_LCDD8Cntl_DS0                           0x893C
    #define     B16Gbl_LCDD8Cntl_DS0                           0x893C
    #define   LSb32Gbl_LCDD8Cntl_DS0                              0
    #define   LSb16Gbl_LCDD8Cntl_DS0                              0
    #define       bGbl_LCDD8Cntl_DS0                           1
    #define   MSK32Gbl_LCDD8Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD8Cntl_DS1                           0x893C
    #define     B16Gbl_LCDD8Cntl_DS1                           0x893C
    #define   LSb32Gbl_LCDD8Cntl_DS1                              1
    #define   LSb16Gbl_LCDD8Cntl_DS1                              1
    #define       bGbl_LCDD8Cntl_DS1                           1
    #define   MSK32Gbl_LCDD8Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD8Cntl_DS2                           0x893C
    #define     B16Gbl_LCDD8Cntl_DS2                           0x893C
    #define   LSb32Gbl_LCDD8Cntl_DS2                              2
    #define   LSb16Gbl_LCDD8Cntl_DS2                              2
    #define       bGbl_LCDD8Cntl_DS2                           1
    #define   MSK32Gbl_LCDD8Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD8Cntl_DS3                           0x893C
    #define     B16Gbl_LCDD8Cntl_DS3                           0x893C
    #define   LSb32Gbl_LCDD8Cntl_DS3                              3
    #define   LSb16Gbl_LCDD8Cntl_DS3                              3
    #define       bGbl_LCDD8Cntl_DS3                           1
    #define   MSK32Gbl_LCDD8Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD8Cntl_IE                            0x893C
    #define     B16Gbl_LCDD8Cntl_IE                            0x893C
    #define   LSb32Gbl_LCDD8Cntl_IE                               4
    #define   LSb16Gbl_LCDD8Cntl_IE                               4
    #define       bGbl_LCDD8Cntl_IE                            1
    #define   MSK32Gbl_LCDD8Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD8Cntl_PD                            0x893C
    #define     B16Gbl_LCDD8Cntl_PD                            0x893C
    #define   LSb32Gbl_LCDD8Cntl_PD                               5
    #define   LSb16Gbl_LCDD8Cntl_PD                               5
    #define       bGbl_LCDD8Cntl_PD                            1
    #define   MSK32Gbl_LCDD8Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD8Cntl_PU                            0x893C
    #define     B16Gbl_LCDD8Cntl_PU                            0x893C
    #define   LSb32Gbl_LCDD8Cntl_PU                               6
    #define   LSb16Gbl_LCDD8Cntl_PU                               6
    #define       bGbl_LCDD8Cntl_PU                            1
    #define   MSK32Gbl_LCDD8Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD8Cntl_ST                            0x893C
    #define     B16Gbl_LCDD8Cntl_ST                            0x893C
    #define   LSb32Gbl_LCDD8Cntl_ST                               7
    #define   LSb16Gbl_LCDD8Cntl_ST                               7
    #define       bGbl_LCDD8Cntl_ST                            1
    #define   MSK32Gbl_LCDD8Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD9Cntl                               0x8940

    #define     BA_Gbl_LCDD9Cntl_DS0                           0x8940
    #define     B16Gbl_LCDD9Cntl_DS0                           0x8940
    #define   LSb32Gbl_LCDD9Cntl_DS0                              0
    #define   LSb16Gbl_LCDD9Cntl_DS0                              0
    #define       bGbl_LCDD9Cntl_DS0                           1
    #define   MSK32Gbl_LCDD9Cntl_DS0                              0x00000001

    #define     BA_Gbl_LCDD9Cntl_DS1                           0x8940
    #define     B16Gbl_LCDD9Cntl_DS1                           0x8940
    #define   LSb32Gbl_LCDD9Cntl_DS1                              1
    #define   LSb16Gbl_LCDD9Cntl_DS1                              1
    #define       bGbl_LCDD9Cntl_DS1                           1
    #define   MSK32Gbl_LCDD9Cntl_DS1                              0x00000002

    #define     BA_Gbl_LCDD9Cntl_DS2                           0x8940
    #define     B16Gbl_LCDD9Cntl_DS2                           0x8940
    #define   LSb32Gbl_LCDD9Cntl_DS2                              2
    #define   LSb16Gbl_LCDD9Cntl_DS2                              2
    #define       bGbl_LCDD9Cntl_DS2                           1
    #define   MSK32Gbl_LCDD9Cntl_DS2                              0x00000004

    #define     BA_Gbl_LCDD9Cntl_DS3                           0x8940
    #define     B16Gbl_LCDD9Cntl_DS3                           0x8940
    #define   LSb32Gbl_LCDD9Cntl_DS3                              3
    #define   LSb16Gbl_LCDD9Cntl_DS3                              3
    #define       bGbl_LCDD9Cntl_DS3                           1
    #define   MSK32Gbl_LCDD9Cntl_DS3                              0x00000008

    #define     BA_Gbl_LCDD9Cntl_IE                            0x8940
    #define     B16Gbl_LCDD9Cntl_IE                            0x8940
    #define   LSb32Gbl_LCDD9Cntl_IE                               4
    #define   LSb16Gbl_LCDD9Cntl_IE                               4
    #define       bGbl_LCDD9Cntl_IE                            1
    #define   MSK32Gbl_LCDD9Cntl_IE                               0x00000010

    #define     BA_Gbl_LCDD9Cntl_PD                            0x8940
    #define     B16Gbl_LCDD9Cntl_PD                            0x8940
    #define   LSb32Gbl_LCDD9Cntl_PD                               5
    #define   LSb16Gbl_LCDD9Cntl_PD                               5
    #define       bGbl_LCDD9Cntl_PD                            1
    #define   MSK32Gbl_LCDD9Cntl_PD                               0x00000020

    #define     BA_Gbl_LCDD9Cntl_PU                            0x8940
    #define     B16Gbl_LCDD9Cntl_PU                            0x8940
    #define   LSb32Gbl_LCDD9Cntl_PU                               6
    #define   LSb16Gbl_LCDD9Cntl_PU                               6
    #define       bGbl_LCDD9Cntl_PU                            1
    #define   MSK32Gbl_LCDD9Cntl_PU                               0x00000040

    #define     BA_Gbl_LCDD9Cntl_ST                            0x8940
    #define     B16Gbl_LCDD9Cntl_ST                            0x8940
    #define   LSb32Gbl_LCDD9Cntl_ST                               7
    #define   LSb16Gbl_LCDD9Cntl_ST                               7
    #define       bGbl_LCDD9Cntl_ST                            1
    #define   MSK32Gbl_LCDD9Cntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD10Cntl                              0x8944

    #define     BA_Gbl_LCDD10Cntl_DS0                          0x8944
    #define     B16Gbl_LCDD10Cntl_DS0                          0x8944
    #define   LSb32Gbl_LCDD10Cntl_DS0                             0
    #define   LSb16Gbl_LCDD10Cntl_DS0                             0
    #define       bGbl_LCDD10Cntl_DS0                          1
    #define   MSK32Gbl_LCDD10Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD10Cntl_DS1                          0x8944
    #define     B16Gbl_LCDD10Cntl_DS1                          0x8944
    #define   LSb32Gbl_LCDD10Cntl_DS1                             1
    #define   LSb16Gbl_LCDD10Cntl_DS1                             1
    #define       bGbl_LCDD10Cntl_DS1                          1
    #define   MSK32Gbl_LCDD10Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD10Cntl_DS2                          0x8944
    #define     B16Gbl_LCDD10Cntl_DS2                          0x8944
    #define   LSb32Gbl_LCDD10Cntl_DS2                             2
    #define   LSb16Gbl_LCDD10Cntl_DS2                             2
    #define       bGbl_LCDD10Cntl_DS2                          1
    #define   MSK32Gbl_LCDD10Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD10Cntl_DS3                          0x8944
    #define     B16Gbl_LCDD10Cntl_DS3                          0x8944
    #define   LSb32Gbl_LCDD10Cntl_DS3                             3
    #define   LSb16Gbl_LCDD10Cntl_DS3                             3
    #define       bGbl_LCDD10Cntl_DS3                          1
    #define   MSK32Gbl_LCDD10Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD10Cntl_IE                           0x8944
    #define     B16Gbl_LCDD10Cntl_IE                           0x8944
    #define   LSb32Gbl_LCDD10Cntl_IE                              4
    #define   LSb16Gbl_LCDD10Cntl_IE                              4
    #define       bGbl_LCDD10Cntl_IE                           1
    #define   MSK32Gbl_LCDD10Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD10Cntl_PD                           0x8944
    #define     B16Gbl_LCDD10Cntl_PD                           0x8944
    #define   LSb32Gbl_LCDD10Cntl_PD                              5
    #define   LSb16Gbl_LCDD10Cntl_PD                              5
    #define       bGbl_LCDD10Cntl_PD                           1
    #define   MSK32Gbl_LCDD10Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD10Cntl_PU                           0x8944
    #define     B16Gbl_LCDD10Cntl_PU                           0x8944
    #define   LSb32Gbl_LCDD10Cntl_PU                              6
    #define   LSb16Gbl_LCDD10Cntl_PU                              6
    #define       bGbl_LCDD10Cntl_PU                           1
    #define   MSK32Gbl_LCDD10Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD10Cntl_ST                           0x8944
    #define     B16Gbl_LCDD10Cntl_ST                           0x8944
    #define   LSb32Gbl_LCDD10Cntl_ST                              7
    #define   LSb16Gbl_LCDD10Cntl_ST                              7
    #define       bGbl_LCDD10Cntl_ST                           1
    #define   MSK32Gbl_LCDD10Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD11Cntl                              0x8948

    #define     BA_Gbl_LCDD11Cntl_DS0                          0x8948
    #define     B16Gbl_LCDD11Cntl_DS0                          0x8948
    #define   LSb32Gbl_LCDD11Cntl_DS0                             0
    #define   LSb16Gbl_LCDD11Cntl_DS0                             0
    #define       bGbl_LCDD11Cntl_DS0                          1
    #define   MSK32Gbl_LCDD11Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD11Cntl_DS1                          0x8948
    #define     B16Gbl_LCDD11Cntl_DS1                          0x8948
    #define   LSb32Gbl_LCDD11Cntl_DS1                             1
    #define   LSb16Gbl_LCDD11Cntl_DS1                             1
    #define       bGbl_LCDD11Cntl_DS1                          1
    #define   MSK32Gbl_LCDD11Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD11Cntl_DS2                          0x8948
    #define     B16Gbl_LCDD11Cntl_DS2                          0x8948
    #define   LSb32Gbl_LCDD11Cntl_DS2                             2
    #define   LSb16Gbl_LCDD11Cntl_DS2                             2
    #define       bGbl_LCDD11Cntl_DS2                          1
    #define   MSK32Gbl_LCDD11Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD11Cntl_DS3                          0x8948
    #define     B16Gbl_LCDD11Cntl_DS3                          0x8948
    #define   LSb32Gbl_LCDD11Cntl_DS3                             3
    #define   LSb16Gbl_LCDD11Cntl_DS3                             3
    #define       bGbl_LCDD11Cntl_DS3                          1
    #define   MSK32Gbl_LCDD11Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD11Cntl_IE                           0x8948
    #define     B16Gbl_LCDD11Cntl_IE                           0x8948
    #define   LSb32Gbl_LCDD11Cntl_IE                              4
    #define   LSb16Gbl_LCDD11Cntl_IE                              4
    #define       bGbl_LCDD11Cntl_IE                           1
    #define   MSK32Gbl_LCDD11Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD11Cntl_PD                           0x8948
    #define     B16Gbl_LCDD11Cntl_PD                           0x8948
    #define   LSb32Gbl_LCDD11Cntl_PD                              5
    #define   LSb16Gbl_LCDD11Cntl_PD                              5
    #define       bGbl_LCDD11Cntl_PD                           1
    #define   MSK32Gbl_LCDD11Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD11Cntl_PU                           0x8948
    #define     B16Gbl_LCDD11Cntl_PU                           0x8948
    #define   LSb32Gbl_LCDD11Cntl_PU                              6
    #define   LSb16Gbl_LCDD11Cntl_PU                              6
    #define       bGbl_LCDD11Cntl_PU                           1
    #define   MSK32Gbl_LCDD11Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD11Cntl_ST                           0x8948
    #define     B16Gbl_LCDD11Cntl_ST                           0x8948
    #define   LSb32Gbl_LCDD11Cntl_ST                              7
    #define   LSb16Gbl_LCDD11Cntl_ST                              7
    #define       bGbl_LCDD11Cntl_ST                           1
    #define   MSK32Gbl_LCDD11Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD12Cntl                              0x894C

    #define     BA_Gbl_LCDD12Cntl_DS0                          0x894C
    #define     B16Gbl_LCDD12Cntl_DS0                          0x894C
    #define   LSb32Gbl_LCDD12Cntl_DS0                             0
    #define   LSb16Gbl_LCDD12Cntl_DS0                             0
    #define       bGbl_LCDD12Cntl_DS0                          1
    #define   MSK32Gbl_LCDD12Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD12Cntl_DS1                          0x894C
    #define     B16Gbl_LCDD12Cntl_DS1                          0x894C
    #define   LSb32Gbl_LCDD12Cntl_DS1                             1
    #define   LSb16Gbl_LCDD12Cntl_DS1                             1
    #define       bGbl_LCDD12Cntl_DS1                          1
    #define   MSK32Gbl_LCDD12Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD12Cntl_DS2                          0x894C
    #define     B16Gbl_LCDD12Cntl_DS2                          0x894C
    #define   LSb32Gbl_LCDD12Cntl_DS2                             2
    #define   LSb16Gbl_LCDD12Cntl_DS2                             2
    #define       bGbl_LCDD12Cntl_DS2                          1
    #define   MSK32Gbl_LCDD12Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD12Cntl_DS3                          0x894C
    #define     B16Gbl_LCDD12Cntl_DS3                          0x894C
    #define   LSb32Gbl_LCDD12Cntl_DS3                             3
    #define   LSb16Gbl_LCDD12Cntl_DS3                             3
    #define       bGbl_LCDD12Cntl_DS3                          1
    #define   MSK32Gbl_LCDD12Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD12Cntl_IE                           0x894C
    #define     B16Gbl_LCDD12Cntl_IE                           0x894C
    #define   LSb32Gbl_LCDD12Cntl_IE                              4
    #define   LSb16Gbl_LCDD12Cntl_IE                              4
    #define       bGbl_LCDD12Cntl_IE                           1
    #define   MSK32Gbl_LCDD12Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD12Cntl_PD                           0x894C
    #define     B16Gbl_LCDD12Cntl_PD                           0x894C
    #define   LSb32Gbl_LCDD12Cntl_PD                              5
    #define   LSb16Gbl_LCDD12Cntl_PD                              5
    #define       bGbl_LCDD12Cntl_PD                           1
    #define   MSK32Gbl_LCDD12Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD12Cntl_PU                           0x894C
    #define     B16Gbl_LCDD12Cntl_PU                           0x894C
    #define   LSb32Gbl_LCDD12Cntl_PU                              6
    #define   LSb16Gbl_LCDD12Cntl_PU                              6
    #define       bGbl_LCDD12Cntl_PU                           1
    #define   MSK32Gbl_LCDD12Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD12Cntl_ST                           0x894C
    #define     B16Gbl_LCDD12Cntl_ST                           0x894C
    #define   LSb32Gbl_LCDD12Cntl_ST                              7
    #define   LSb16Gbl_LCDD12Cntl_ST                              7
    #define       bGbl_LCDD12Cntl_ST                           1
    #define   MSK32Gbl_LCDD12Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD13Cntl                              0x8950

    #define     BA_Gbl_LCDD13Cntl_DS0                          0x8950
    #define     B16Gbl_LCDD13Cntl_DS0                          0x8950
    #define   LSb32Gbl_LCDD13Cntl_DS0                             0
    #define   LSb16Gbl_LCDD13Cntl_DS0                             0
    #define       bGbl_LCDD13Cntl_DS0                          1
    #define   MSK32Gbl_LCDD13Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD13Cntl_DS1                          0x8950
    #define     B16Gbl_LCDD13Cntl_DS1                          0x8950
    #define   LSb32Gbl_LCDD13Cntl_DS1                             1
    #define   LSb16Gbl_LCDD13Cntl_DS1                             1
    #define       bGbl_LCDD13Cntl_DS1                          1
    #define   MSK32Gbl_LCDD13Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD13Cntl_DS2                          0x8950
    #define     B16Gbl_LCDD13Cntl_DS2                          0x8950
    #define   LSb32Gbl_LCDD13Cntl_DS2                             2
    #define   LSb16Gbl_LCDD13Cntl_DS2                             2
    #define       bGbl_LCDD13Cntl_DS2                          1
    #define   MSK32Gbl_LCDD13Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD13Cntl_DS3                          0x8950
    #define     B16Gbl_LCDD13Cntl_DS3                          0x8950
    #define   LSb32Gbl_LCDD13Cntl_DS3                             3
    #define   LSb16Gbl_LCDD13Cntl_DS3                             3
    #define       bGbl_LCDD13Cntl_DS3                          1
    #define   MSK32Gbl_LCDD13Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD13Cntl_IE                           0x8950
    #define     B16Gbl_LCDD13Cntl_IE                           0x8950
    #define   LSb32Gbl_LCDD13Cntl_IE                              4
    #define   LSb16Gbl_LCDD13Cntl_IE                              4
    #define       bGbl_LCDD13Cntl_IE                           1
    #define   MSK32Gbl_LCDD13Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD13Cntl_PD                           0x8950
    #define     B16Gbl_LCDD13Cntl_PD                           0x8950
    #define   LSb32Gbl_LCDD13Cntl_PD                              5
    #define   LSb16Gbl_LCDD13Cntl_PD                              5
    #define       bGbl_LCDD13Cntl_PD                           1
    #define   MSK32Gbl_LCDD13Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD13Cntl_PU                           0x8950
    #define     B16Gbl_LCDD13Cntl_PU                           0x8950
    #define   LSb32Gbl_LCDD13Cntl_PU                              6
    #define   LSb16Gbl_LCDD13Cntl_PU                              6
    #define       bGbl_LCDD13Cntl_PU                           1
    #define   MSK32Gbl_LCDD13Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD13Cntl_ST                           0x8950
    #define     B16Gbl_LCDD13Cntl_ST                           0x8950
    #define   LSb32Gbl_LCDD13Cntl_ST                              7
    #define   LSb16Gbl_LCDD13Cntl_ST                              7
    #define       bGbl_LCDD13Cntl_ST                           1
    #define   MSK32Gbl_LCDD13Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD14Cntl                              0x8954

    #define     BA_Gbl_LCDD14Cntl_DS0                          0x8954
    #define     B16Gbl_LCDD14Cntl_DS0                          0x8954
    #define   LSb32Gbl_LCDD14Cntl_DS0                             0
    #define   LSb16Gbl_LCDD14Cntl_DS0                             0
    #define       bGbl_LCDD14Cntl_DS0                          1
    #define   MSK32Gbl_LCDD14Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD14Cntl_DS1                          0x8954
    #define     B16Gbl_LCDD14Cntl_DS1                          0x8954
    #define   LSb32Gbl_LCDD14Cntl_DS1                             1
    #define   LSb16Gbl_LCDD14Cntl_DS1                             1
    #define       bGbl_LCDD14Cntl_DS1                          1
    #define   MSK32Gbl_LCDD14Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD14Cntl_DS2                          0x8954
    #define     B16Gbl_LCDD14Cntl_DS2                          0x8954
    #define   LSb32Gbl_LCDD14Cntl_DS2                             2
    #define   LSb16Gbl_LCDD14Cntl_DS2                             2
    #define       bGbl_LCDD14Cntl_DS2                          1
    #define   MSK32Gbl_LCDD14Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD14Cntl_DS3                          0x8954
    #define     B16Gbl_LCDD14Cntl_DS3                          0x8954
    #define   LSb32Gbl_LCDD14Cntl_DS3                             3
    #define   LSb16Gbl_LCDD14Cntl_DS3                             3
    #define       bGbl_LCDD14Cntl_DS3                          1
    #define   MSK32Gbl_LCDD14Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD14Cntl_IE                           0x8954
    #define     B16Gbl_LCDD14Cntl_IE                           0x8954
    #define   LSb32Gbl_LCDD14Cntl_IE                              4
    #define   LSb16Gbl_LCDD14Cntl_IE                              4
    #define       bGbl_LCDD14Cntl_IE                           1
    #define   MSK32Gbl_LCDD14Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD14Cntl_PD                           0x8954
    #define     B16Gbl_LCDD14Cntl_PD                           0x8954
    #define   LSb32Gbl_LCDD14Cntl_PD                              5
    #define   LSb16Gbl_LCDD14Cntl_PD                              5
    #define       bGbl_LCDD14Cntl_PD                           1
    #define   MSK32Gbl_LCDD14Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD14Cntl_PU                           0x8954
    #define     B16Gbl_LCDD14Cntl_PU                           0x8954
    #define   LSb32Gbl_LCDD14Cntl_PU                              6
    #define   LSb16Gbl_LCDD14Cntl_PU                              6
    #define       bGbl_LCDD14Cntl_PU                           1
    #define   MSK32Gbl_LCDD14Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD14Cntl_ST                           0x8954
    #define     B16Gbl_LCDD14Cntl_ST                           0x8954
    #define   LSb32Gbl_LCDD14Cntl_ST                              7
    #define   LSb16Gbl_LCDD14Cntl_ST                              7
    #define       bGbl_LCDD14Cntl_ST                           1
    #define   MSK32Gbl_LCDD14Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD15Cntl                              0x8958

    #define     BA_Gbl_LCDD15Cntl_DS0                          0x8958
    #define     B16Gbl_LCDD15Cntl_DS0                          0x8958
    #define   LSb32Gbl_LCDD15Cntl_DS0                             0
    #define   LSb16Gbl_LCDD15Cntl_DS0                             0
    #define       bGbl_LCDD15Cntl_DS0                          1
    #define   MSK32Gbl_LCDD15Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD15Cntl_DS1                          0x8958
    #define     B16Gbl_LCDD15Cntl_DS1                          0x8958
    #define   LSb32Gbl_LCDD15Cntl_DS1                             1
    #define   LSb16Gbl_LCDD15Cntl_DS1                             1
    #define       bGbl_LCDD15Cntl_DS1                          1
    #define   MSK32Gbl_LCDD15Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD15Cntl_DS2                          0x8958
    #define     B16Gbl_LCDD15Cntl_DS2                          0x8958
    #define   LSb32Gbl_LCDD15Cntl_DS2                             2
    #define   LSb16Gbl_LCDD15Cntl_DS2                             2
    #define       bGbl_LCDD15Cntl_DS2                          1
    #define   MSK32Gbl_LCDD15Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD15Cntl_DS3                          0x8958
    #define     B16Gbl_LCDD15Cntl_DS3                          0x8958
    #define   LSb32Gbl_LCDD15Cntl_DS3                             3
    #define   LSb16Gbl_LCDD15Cntl_DS3                             3
    #define       bGbl_LCDD15Cntl_DS3                          1
    #define   MSK32Gbl_LCDD15Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD15Cntl_IE                           0x8958
    #define     B16Gbl_LCDD15Cntl_IE                           0x8958
    #define   LSb32Gbl_LCDD15Cntl_IE                              4
    #define   LSb16Gbl_LCDD15Cntl_IE                              4
    #define       bGbl_LCDD15Cntl_IE                           1
    #define   MSK32Gbl_LCDD15Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD15Cntl_PD                           0x8958
    #define     B16Gbl_LCDD15Cntl_PD                           0x8958
    #define   LSb32Gbl_LCDD15Cntl_PD                              5
    #define   LSb16Gbl_LCDD15Cntl_PD                              5
    #define       bGbl_LCDD15Cntl_PD                           1
    #define   MSK32Gbl_LCDD15Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD15Cntl_PU                           0x8958
    #define     B16Gbl_LCDD15Cntl_PU                           0x8958
    #define   LSb32Gbl_LCDD15Cntl_PU                              6
    #define   LSb16Gbl_LCDD15Cntl_PU                              6
    #define       bGbl_LCDD15Cntl_PU                           1
    #define   MSK32Gbl_LCDD15Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD15Cntl_ST                           0x8958
    #define     B16Gbl_LCDD15Cntl_ST                           0x8958
    #define   LSb32Gbl_LCDD15Cntl_ST                              7
    #define   LSb16Gbl_LCDD15Cntl_ST                              7
    #define       bGbl_LCDD15Cntl_ST                           1
    #define   MSK32Gbl_LCDD15Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD16Cntl                              0x895C

    #define     BA_Gbl_LCDD16Cntl_DS0                          0x895C
    #define     B16Gbl_LCDD16Cntl_DS0                          0x895C
    #define   LSb32Gbl_LCDD16Cntl_DS0                             0
    #define   LSb16Gbl_LCDD16Cntl_DS0                             0
    #define       bGbl_LCDD16Cntl_DS0                          1
    #define   MSK32Gbl_LCDD16Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD16Cntl_DS1                          0x895C
    #define     B16Gbl_LCDD16Cntl_DS1                          0x895C
    #define   LSb32Gbl_LCDD16Cntl_DS1                             1
    #define   LSb16Gbl_LCDD16Cntl_DS1                             1
    #define       bGbl_LCDD16Cntl_DS1                          1
    #define   MSK32Gbl_LCDD16Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD16Cntl_DS2                          0x895C
    #define     B16Gbl_LCDD16Cntl_DS2                          0x895C
    #define   LSb32Gbl_LCDD16Cntl_DS2                             2
    #define   LSb16Gbl_LCDD16Cntl_DS2                             2
    #define       bGbl_LCDD16Cntl_DS2                          1
    #define   MSK32Gbl_LCDD16Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD16Cntl_DS3                          0x895C
    #define     B16Gbl_LCDD16Cntl_DS3                          0x895C
    #define   LSb32Gbl_LCDD16Cntl_DS3                             3
    #define   LSb16Gbl_LCDD16Cntl_DS3                             3
    #define       bGbl_LCDD16Cntl_DS3                          1
    #define   MSK32Gbl_LCDD16Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD16Cntl_IE                           0x895C
    #define     B16Gbl_LCDD16Cntl_IE                           0x895C
    #define   LSb32Gbl_LCDD16Cntl_IE                              4
    #define   LSb16Gbl_LCDD16Cntl_IE                              4
    #define       bGbl_LCDD16Cntl_IE                           1
    #define   MSK32Gbl_LCDD16Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD16Cntl_PD                           0x895C
    #define     B16Gbl_LCDD16Cntl_PD                           0x895C
    #define   LSb32Gbl_LCDD16Cntl_PD                              5
    #define   LSb16Gbl_LCDD16Cntl_PD                              5
    #define       bGbl_LCDD16Cntl_PD                           1
    #define   MSK32Gbl_LCDD16Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD16Cntl_PU                           0x895C
    #define     B16Gbl_LCDD16Cntl_PU                           0x895C
    #define   LSb32Gbl_LCDD16Cntl_PU                              6
    #define   LSb16Gbl_LCDD16Cntl_PU                              6
    #define       bGbl_LCDD16Cntl_PU                           1
    #define   MSK32Gbl_LCDD16Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD16Cntl_ST                           0x895C
    #define     B16Gbl_LCDD16Cntl_ST                           0x895C
    #define   LSb32Gbl_LCDD16Cntl_ST                              7
    #define   LSb16Gbl_LCDD16Cntl_ST                              7
    #define       bGbl_LCDD16Cntl_ST                           1
    #define   MSK32Gbl_LCDD16Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD17Cntl                              0x8960

    #define     BA_Gbl_LCDD17Cntl_DS0                          0x8960
    #define     B16Gbl_LCDD17Cntl_DS0                          0x8960
    #define   LSb32Gbl_LCDD17Cntl_DS0                             0
    #define   LSb16Gbl_LCDD17Cntl_DS0                             0
    #define       bGbl_LCDD17Cntl_DS0                          1
    #define   MSK32Gbl_LCDD17Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD17Cntl_DS1                          0x8960
    #define     B16Gbl_LCDD17Cntl_DS1                          0x8960
    #define   LSb32Gbl_LCDD17Cntl_DS1                             1
    #define   LSb16Gbl_LCDD17Cntl_DS1                             1
    #define       bGbl_LCDD17Cntl_DS1                          1
    #define   MSK32Gbl_LCDD17Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD17Cntl_DS2                          0x8960
    #define     B16Gbl_LCDD17Cntl_DS2                          0x8960
    #define   LSb32Gbl_LCDD17Cntl_DS2                             2
    #define   LSb16Gbl_LCDD17Cntl_DS2                             2
    #define       bGbl_LCDD17Cntl_DS2                          1
    #define   MSK32Gbl_LCDD17Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD17Cntl_DS3                          0x8960
    #define     B16Gbl_LCDD17Cntl_DS3                          0x8960
    #define   LSb32Gbl_LCDD17Cntl_DS3                             3
    #define   LSb16Gbl_LCDD17Cntl_DS3                             3
    #define       bGbl_LCDD17Cntl_DS3                          1
    #define   MSK32Gbl_LCDD17Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD17Cntl_IE                           0x8960
    #define     B16Gbl_LCDD17Cntl_IE                           0x8960
    #define   LSb32Gbl_LCDD17Cntl_IE                              4
    #define   LSb16Gbl_LCDD17Cntl_IE                              4
    #define       bGbl_LCDD17Cntl_IE                           1
    #define   MSK32Gbl_LCDD17Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD17Cntl_PD                           0x8960
    #define     B16Gbl_LCDD17Cntl_PD                           0x8960
    #define   LSb32Gbl_LCDD17Cntl_PD                              5
    #define   LSb16Gbl_LCDD17Cntl_PD                              5
    #define       bGbl_LCDD17Cntl_PD                           1
    #define   MSK32Gbl_LCDD17Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD17Cntl_PU                           0x8960
    #define     B16Gbl_LCDD17Cntl_PU                           0x8960
    #define   LSb32Gbl_LCDD17Cntl_PU                              6
    #define   LSb16Gbl_LCDD17Cntl_PU                              6
    #define       bGbl_LCDD17Cntl_PU                           1
    #define   MSK32Gbl_LCDD17Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD17Cntl_ST                           0x8960
    #define     B16Gbl_LCDD17Cntl_ST                           0x8960
    #define   LSb32Gbl_LCDD17Cntl_ST                              7
    #define   LSb16Gbl_LCDD17Cntl_ST                              7
    #define       bGbl_LCDD17Cntl_ST                           1
    #define   MSK32Gbl_LCDD17Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD18Cntl                              0x8964

    #define     BA_Gbl_LCDD18Cntl_DS0                          0x8964
    #define     B16Gbl_LCDD18Cntl_DS0                          0x8964
    #define   LSb32Gbl_LCDD18Cntl_DS0                             0
    #define   LSb16Gbl_LCDD18Cntl_DS0                             0
    #define       bGbl_LCDD18Cntl_DS0                          1
    #define   MSK32Gbl_LCDD18Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD18Cntl_DS1                          0x8964
    #define     B16Gbl_LCDD18Cntl_DS1                          0x8964
    #define   LSb32Gbl_LCDD18Cntl_DS1                             1
    #define   LSb16Gbl_LCDD18Cntl_DS1                             1
    #define       bGbl_LCDD18Cntl_DS1                          1
    #define   MSK32Gbl_LCDD18Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD18Cntl_DS2                          0x8964
    #define     B16Gbl_LCDD18Cntl_DS2                          0x8964
    #define   LSb32Gbl_LCDD18Cntl_DS2                             2
    #define   LSb16Gbl_LCDD18Cntl_DS2                             2
    #define       bGbl_LCDD18Cntl_DS2                          1
    #define   MSK32Gbl_LCDD18Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD18Cntl_DS3                          0x8964
    #define     B16Gbl_LCDD18Cntl_DS3                          0x8964
    #define   LSb32Gbl_LCDD18Cntl_DS3                             3
    #define   LSb16Gbl_LCDD18Cntl_DS3                             3
    #define       bGbl_LCDD18Cntl_DS3                          1
    #define   MSK32Gbl_LCDD18Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD18Cntl_IE                           0x8964
    #define     B16Gbl_LCDD18Cntl_IE                           0x8964
    #define   LSb32Gbl_LCDD18Cntl_IE                              4
    #define   LSb16Gbl_LCDD18Cntl_IE                              4
    #define       bGbl_LCDD18Cntl_IE                           1
    #define   MSK32Gbl_LCDD18Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD18Cntl_PD                           0x8964
    #define     B16Gbl_LCDD18Cntl_PD                           0x8964
    #define   LSb32Gbl_LCDD18Cntl_PD                              5
    #define   LSb16Gbl_LCDD18Cntl_PD                              5
    #define       bGbl_LCDD18Cntl_PD                           1
    #define   MSK32Gbl_LCDD18Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD18Cntl_PU                           0x8964
    #define     B16Gbl_LCDD18Cntl_PU                           0x8964
    #define   LSb32Gbl_LCDD18Cntl_PU                              6
    #define   LSb16Gbl_LCDD18Cntl_PU                              6
    #define       bGbl_LCDD18Cntl_PU                           1
    #define   MSK32Gbl_LCDD18Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD18Cntl_ST                           0x8964
    #define     B16Gbl_LCDD18Cntl_ST                           0x8964
    #define   LSb32Gbl_LCDD18Cntl_ST                              7
    #define   LSb16Gbl_LCDD18Cntl_ST                              7
    #define       bGbl_LCDD18Cntl_ST                           1
    #define   MSK32Gbl_LCDD18Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD19Cntl                              0x8968

    #define     BA_Gbl_LCDD19Cntl_DS0                          0x8968
    #define     B16Gbl_LCDD19Cntl_DS0                          0x8968
    #define   LSb32Gbl_LCDD19Cntl_DS0                             0
    #define   LSb16Gbl_LCDD19Cntl_DS0                             0
    #define       bGbl_LCDD19Cntl_DS0                          1
    #define   MSK32Gbl_LCDD19Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD19Cntl_DS1                          0x8968
    #define     B16Gbl_LCDD19Cntl_DS1                          0x8968
    #define   LSb32Gbl_LCDD19Cntl_DS1                             1
    #define   LSb16Gbl_LCDD19Cntl_DS1                             1
    #define       bGbl_LCDD19Cntl_DS1                          1
    #define   MSK32Gbl_LCDD19Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD19Cntl_DS2                          0x8968
    #define     B16Gbl_LCDD19Cntl_DS2                          0x8968
    #define   LSb32Gbl_LCDD19Cntl_DS2                             2
    #define   LSb16Gbl_LCDD19Cntl_DS2                             2
    #define       bGbl_LCDD19Cntl_DS2                          1
    #define   MSK32Gbl_LCDD19Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD19Cntl_DS3                          0x8968
    #define     B16Gbl_LCDD19Cntl_DS3                          0x8968
    #define   LSb32Gbl_LCDD19Cntl_DS3                             3
    #define   LSb16Gbl_LCDD19Cntl_DS3                             3
    #define       bGbl_LCDD19Cntl_DS3                          1
    #define   MSK32Gbl_LCDD19Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD19Cntl_IE                           0x8968
    #define     B16Gbl_LCDD19Cntl_IE                           0x8968
    #define   LSb32Gbl_LCDD19Cntl_IE                              4
    #define   LSb16Gbl_LCDD19Cntl_IE                              4
    #define       bGbl_LCDD19Cntl_IE                           1
    #define   MSK32Gbl_LCDD19Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD19Cntl_PD                           0x8968
    #define     B16Gbl_LCDD19Cntl_PD                           0x8968
    #define   LSb32Gbl_LCDD19Cntl_PD                              5
    #define   LSb16Gbl_LCDD19Cntl_PD                              5
    #define       bGbl_LCDD19Cntl_PD                           1
    #define   MSK32Gbl_LCDD19Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD19Cntl_PU                           0x8968
    #define     B16Gbl_LCDD19Cntl_PU                           0x8968
    #define   LSb32Gbl_LCDD19Cntl_PU                              6
    #define   LSb16Gbl_LCDD19Cntl_PU                              6
    #define       bGbl_LCDD19Cntl_PU                           1
    #define   MSK32Gbl_LCDD19Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD19Cntl_ST                           0x8968
    #define     B16Gbl_LCDD19Cntl_ST                           0x8968
    #define   LSb32Gbl_LCDD19Cntl_ST                              7
    #define   LSb16Gbl_LCDD19Cntl_ST                              7
    #define       bGbl_LCDD19Cntl_ST                           1
    #define   MSK32Gbl_LCDD19Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD20Cntl                              0x896C

    #define     BA_Gbl_LCDD20Cntl_DS0                          0x896C
    #define     B16Gbl_LCDD20Cntl_DS0                          0x896C
    #define   LSb32Gbl_LCDD20Cntl_DS0                             0
    #define   LSb16Gbl_LCDD20Cntl_DS0                             0
    #define       bGbl_LCDD20Cntl_DS0                          1
    #define   MSK32Gbl_LCDD20Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD20Cntl_DS1                          0x896C
    #define     B16Gbl_LCDD20Cntl_DS1                          0x896C
    #define   LSb32Gbl_LCDD20Cntl_DS1                             1
    #define   LSb16Gbl_LCDD20Cntl_DS1                             1
    #define       bGbl_LCDD20Cntl_DS1                          1
    #define   MSK32Gbl_LCDD20Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD20Cntl_DS2                          0x896C
    #define     B16Gbl_LCDD20Cntl_DS2                          0x896C
    #define   LSb32Gbl_LCDD20Cntl_DS2                             2
    #define   LSb16Gbl_LCDD20Cntl_DS2                             2
    #define       bGbl_LCDD20Cntl_DS2                          1
    #define   MSK32Gbl_LCDD20Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD20Cntl_DS3                          0x896C
    #define     B16Gbl_LCDD20Cntl_DS3                          0x896C
    #define   LSb32Gbl_LCDD20Cntl_DS3                             3
    #define   LSb16Gbl_LCDD20Cntl_DS3                             3
    #define       bGbl_LCDD20Cntl_DS3                          1
    #define   MSK32Gbl_LCDD20Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD20Cntl_IE                           0x896C
    #define     B16Gbl_LCDD20Cntl_IE                           0x896C
    #define   LSb32Gbl_LCDD20Cntl_IE                              4
    #define   LSb16Gbl_LCDD20Cntl_IE                              4
    #define       bGbl_LCDD20Cntl_IE                           1
    #define   MSK32Gbl_LCDD20Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD20Cntl_PD                           0x896C
    #define     B16Gbl_LCDD20Cntl_PD                           0x896C
    #define   LSb32Gbl_LCDD20Cntl_PD                              5
    #define   LSb16Gbl_LCDD20Cntl_PD                              5
    #define       bGbl_LCDD20Cntl_PD                           1
    #define   MSK32Gbl_LCDD20Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD20Cntl_PU                           0x896C
    #define     B16Gbl_LCDD20Cntl_PU                           0x896C
    #define   LSb32Gbl_LCDD20Cntl_PU                              6
    #define   LSb16Gbl_LCDD20Cntl_PU                              6
    #define       bGbl_LCDD20Cntl_PU                           1
    #define   MSK32Gbl_LCDD20Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD20Cntl_ST                           0x896C
    #define     B16Gbl_LCDD20Cntl_ST                           0x896C
    #define   LSb32Gbl_LCDD20Cntl_ST                              7
    #define   LSb16Gbl_LCDD20Cntl_ST                              7
    #define       bGbl_LCDD20Cntl_ST                           1
    #define   MSK32Gbl_LCDD20Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD21Cntl                              0x8970

    #define     BA_Gbl_LCDD21Cntl_DS0                          0x8970
    #define     B16Gbl_LCDD21Cntl_DS0                          0x8970
    #define   LSb32Gbl_LCDD21Cntl_DS0                             0
    #define   LSb16Gbl_LCDD21Cntl_DS0                             0
    #define       bGbl_LCDD21Cntl_DS0                          1
    #define   MSK32Gbl_LCDD21Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD21Cntl_DS1                          0x8970
    #define     B16Gbl_LCDD21Cntl_DS1                          0x8970
    #define   LSb32Gbl_LCDD21Cntl_DS1                             1
    #define   LSb16Gbl_LCDD21Cntl_DS1                             1
    #define       bGbl_LCDD21Cntl_DS1                          1
    #define   MSK32Gbl_LCDD21Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD21Cntl_DS2                          0x8970
    #define     B16Gbl_LCDD21Cntl_DS2                          0x8970
    #define   LSb32Gbl_LCDD21Cntl_DS2                             2
    #define   LSb16Gbl_LCDD21Cntl_DS2                             2
    #define       bGbl_LCDD21Cntl_DS2                          1
    #define   MSK32Gbl_LCDD21Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD21Cntl_DS3                          0x8970
    #define     B16Gbl_LCDD21Cntl_DS3                          0x8970
    #define   LSb32Gbl_LCDD21Cntl_DS3                             3
    #define   LSb16Gbl_LCDD21Cntl_DS3                             3
    #define       bGbl_LCDD21Cntl_DS3                          1
    #define   MSK32Gbl_LCDD21Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD21Cntl_IE                           0x8970
    #define     B16Gbl_LCDD21Cntl_IE                           0x8970
    #define   LSb32Gbl_LCDD21Cntl_IE                              4
    #define   LSb16Gbl_LCDD21Cntl_IE                              4
    #define       bGbl_LCDD21Cntl_IE                           1
    #define   MSK32Gbl_LCDD21Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD21Cntl_PD                           0x8970
    #define     B16Gbl_LCDD21Cntl_PD                           0x8970
    #define   LSb32Gbl_LCDD21Cntl_PD                              5
    #define   LSb16Gbl_LCDD21Cntl_PD                              5
    #define       bGbl_LCDD21Cntl_PD                           1
    #define   MSK32Gbl_LCDD21Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD21Cntl_PU                           0x8970
    #define     B16Gbl_LCDD21Cntl_PU                           0x8970
    #define   LSb32Gbl_LCDD21Cntl_PU                              6
    #define   LSb16Gbl_LCDD21Cntl_PU                              6
    #define       bGbl_LCDD21Cntl_PU                           1
    #define   MSK32Gbl_LCDD21Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD21Cntl_ST                           0x8970
    #define     B16Gbl_LCDD21Cntl_ST                           0x8970
    #define   LSb32Gbl_LCDD21Cntl_ST                              7
    #define   LSb16Gbl_LCDD21Cntl_ST                              7
    #define       bGbl_LCDD21Cntl_ST                           1
    #define   MSK32Gbl_LCDD21Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD22Cntl                              0x8974

    #define     BA_Gbl_LCDD22Cntl_DS0                          0x8974
    #define     B16Gbl_LCDD22Cntl_DS0                          0x8974
    #define   LSb32Gbl_LCDD22Cntl_DS0                             0
    #define   LSb16Gbl_LCDD22Cntl_DS0                             0
    #define       bGbl_LCDD22Cntl_DS0                          1
    #define   MSK32Gbl_LCDD22Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD22Cntl_DS1                          0x8974
    #define     B16Gbl_LCDD22Cntl_DS1                          0x8974
    #define   LSb32Gbl_LCDD22Cntl_DS1                             1
    #define   LSb16Gbl_LCDD22Cntl_DS1                             1
    #define       bGbl_LCDD22Cntl_DS1                          1
    #define   MSK32Gbl_LCDD22Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD22Cntl_DS2                          0x8974
    #define     B16Gbl_LCDD22Cntl_DS2                          0x8974
    #define   LSb32Gbl_LCDD22Cntl_DS2                             2
    #define   LSb16Gbl_LCDD22Cntl_DS2                             2
    #define       bGbl_LCDD22Cntl_DS2                          1
    #define   MSK32Gbl_LCDD22Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD22Cntl_DS3                          0x8974
    #define     B16Gbl_LCDD22Cntl_DS3                          0x8974
    #define   LSb32Gbl_LCDD22Cntl_DS3                             3
    #define   LSb16Gbl_LCDD22Cntl_DS3                             3
    #define       bGbl_LCDD22Cntl_DS3                          1
    #define   MSK32Gbl_LCDD22Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD22Cntl_IE                           0x8974
    #define     B16Gbl_LCDD22Cntl_IE                           0x8974
    #define   LSb32Gbl_LCDD22Cntl_IE                              4
    #define   LSb16Gbl_LCDD22Cntl_IE                              4
    #define       bGbl_LCDD22Cntl_IE                           1
    #define   MSK32Gbl_LCDD22Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD22Cntl_PD                           0x8974
    #define     B16Gbl_LCDD22Cntl_PD                           0x8974
    #define   LSb32Gbl_LCDD22Cntl_PD                              5
    #define   LSb16Gbl_LCDD22Cntl_PD                              5
    #define       bGbl_LCDD22Cntl_PD                           1
    #define   MSK32Gbl_LCDD22Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD22Cntl_PU                           0x8974
    #define     B16Gbl_LCDD22Cntl_PU                           0x8974
    #define   LSb32Gbl_LCDD22Cntl_PU                              6
    #define   LSb16Gbl_LCDD22Cntl_PU                              6
    #define       bGbl_LCDD22Cntl_PU                           1
    #define   MSK32Gbl_LCDD22Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD22Cntl_ST                           0x8974
    #define     B16Gbl_LCDD22Cntl_ST                           0x8974
    #define   LSb32Gbl_LCDD22Cntl_ST                              7
    #define   LSb16Gbl_LCDD22Cntl_ST                              7
    #define       bGbl_LCDD22Cntl_ST                           1
    #define   MSK32Gbl_LCDD22Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDD23Cntl                              0x8978

    #define     BA_Gbl_LCDD23Cntl_DS0                          0x8978
    #define     B16Gbl_LCDD23Cntl_DS0                          0x8978
    #define   LSb32Gbl_LCDD23Cntl_DS0                             0
    #define   LSb16Gbl_LCDD23Cntl_DS0                             0
    #define       bGbl_LCDD23Cntl_DS0                          1
    #define   MSK32Gbl_LCDD23Cntl_DS0                             0x00000001

    #define     BA_Gbl_LCDD23Cntl_DS1                          0x8978
    #define     B16Gbl_LCDD23Cntl_DS1                          0x8978
    #define   LSb32Gbl_LCDD23Cntl_DS1                             1
    #define   LSb16Gbl_LCDD23Cntl_DS1                             1
    #define       bGbl_LCDD23Cntl_DS1                          1
    #define   MSK32Gbl_LCDD23Cntl_DS1                             0x00000002

    #define     BA_Gbl_LCDD23Cntl_DS2                          0x8978
    #define     B16Gbl_LCDD23Cntl_DS2                          0x8978
    #define   LSb32Gbl_LCDD23Cntl_DS2                             2
    #define   LSb16Gbl_LCDD23Cntl_DS2                             2
    #define       bGbl_LCDD23Cntl_DS2                          1
    #define   MSK32Gbl_LCDD23Cntl_DS2                             0x00000004

    #define     BA_Gbl_LCDD23Cntl_DS3                          0x8978
    #define     B16Gbl_LCDD23Cntl_DS3                          0x8978
    #define   LSb32Gbl_LCDD23Cntl_DS3                             3
    #define   LSb16Gbl_LCDD23Cntl_DS3                             3
    #define       bGbl_LCDD23Cntl_DS3                          1
    #define   MSK32Gbl_LCDD23Cntl_DS3                             0x00000008

    #define     BA_Gbl_LCDD23Cntl_IE                           0x8978
    #define     B16Gbl_LCDD23Cntl_IE                           0x8978
    #define   LSb32Gbl_LCDD23Cntl_IE                              4
    #define   LSb16Gbl_LCDD23Cntl_IE                              4
    #define       bGbl_LCDD23Cntl_IE                           1
    #define   MSK32Gbl_LCDD23Cntl_IE                              0x00000010

    #define     BA_Gbl_LCDD23Cntl_PD                           0x8978
    #define     B16Gbl_LCDD23Cntl_PD                           0x8978
    #define   LSb32Gbl_LCDD23Cntl_PD                              5
    #define   LSb16Gbl_LCDD23Cntl_PD                              5
    #define       bGbl_LCDD23Cntl_PD                           1
    #define   MSK32Gbl_LCDD23Cntl_PD                              0x00000020

    #define     BA_Gbl_LCDD23Cntl_PU                           0x8978
    #define     B16Gbl_LCDD23Cntl_PU                           0x8978
    #define   LSb32Gbl_LCDD23Cntl_PU                              6
    #define   LSb16Gbl_LCDD23Cntl_PU                              6
    #define       bGbl_LCDD23Cntl_PU                           1
    #define   MSK32Gbl_LCDD23Cntl_PU                              0x00000040

    #define     BA_Gbl_LCDD23Cntl_ST                           0x8978
    #define     B16Gbl_LCDD23Cntl_ST                           0x8978
    #define   LSb32Gbl_LCDD23Cntl_ST                              7
    #define   LSb16Gbl_LCDD23Cntl_ST                              7
    #define       bGbl_LCDD23Cntl_ST                           1
    #define   MSK32Gbl_LCDD23Cntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LPCLKCntl                               0x897C

    #define     BA_Gbl_LPCLKCntl_DS0                           0x897C
    #define     B16Gbl_LPCLKCntl_DS0                           0x897C
    #define   LSb32Gbl_LPCLKCntl_DS0                              0
    #define   LSb16Gbl_LPCLKCntl_DS0                              0
    #define       bGbl_LPCLKCntl_DS0                           1
    #define   MSK32Gbl_LPCLKCntl_DS0                              0x00000001

    #define     BA_Gbl_LPCLKCntl_DS1                           0x897C
    #define     B16Gbl_LPCLKCntl_DS1                           0x897C
    #define   LSb32Gbl_LPCLKCntl_DS1                              1
    #define   LSb16Gbl_LPCLKCntl_DS1                              1
    #define       bGbl_LPCLKCntl_DS1                           1
    #define   MSK32Gbl_LPCLKCntl_DS1                              0x00000002

    #define     BA_Gbl_LPCLKCntl_DS2                           0x897C
    #define     B16Gbl_LPCLKCntl_DS2                           0x897C
    #define   LSb32Gbl_LPCLKCntl_DS2                              2
    #define   LSb16Gbl_LPCLKCntl_DS2                              2
    #define       bGbl_LPCLKCntl_DS2                           1
    #define   MSK32Gbl_LPCLKCntl_DS2                              0x00000004

    #define     BA_Gbl_LPCLKCntl_DS3                           0x897C
    #define     B16Gbl_LPCLKCntl_DS3                           0x897C
    #define   LSb32Gbl_LPCLKCntl_DS3                              3
    #define   LSb16Gbl_LPCLKCntl_DS3                              3
    #define       bGbl_LPCLKCntl_DS3                           1
    #define   MSK32Gbl_LPCLKCntl_DS3                              0x00000008

    #define     BA_Gbl_LPCLKCntl_IE                            0x897C
    #define     B16Gbl_LPCLKCntl_IE                            0x897C
    #define   LSb32Gbl_LPCLKCntl_IE                               4
    #define   LSb16Gbl_LPCLKCntl_IE                               4
    #define       bGbl_LPCLKCntl_IE                            1
    #define   MSK32Gbl_LPCLKCntl_IE                               0x00000010

    #define     BA_Gbl_LPCLKCntl_PD                            0x897C
    #define     B16Gbl_LPCLKCntl_PD                            0x897C
    #define   LSb32Gbl_LPCLKCntl_PD                               5
    #define   LSb16Gbl_LPCLKCntl_PD                               5
    #define       bGbl_LPCLKCntl_PD                            1
    #define   MSK32Gbl_LPCLKCntl_PD                               0x00000020

    #define     BA_Gbl_LPCLKCntl_PU                            0x897C
    #define     B16Gbl_LPCLKCntl_PU                            0x897C
    #define   LSb32Gbl_LPCLKCntl_PU                               6
    #define   LSb16Gbl_LPCLKCntl_PU                               6
    #define       bGbl_LPCLKCntl_PU                            1
    #define   MSK32Gbl_LPCLKCntl_PU                               0x00000040

    #define     BA_Gbl_LPCLKCntl_ST                            0x897C
    #define     B16Gbl_LPCLKCntl_ST                            0x897C
    #define   LSb32Gbl_LPCLKCntl_ST                               7
    #define   LSb16Gbl_LPCLKCntl_ST                               7
    #define       bGbl_LPCLKCntl_ST                            1
    #define   MSK32Gbl_LPCLKCntl_ST                               0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDGPIO0Cntl                            0x8980

    #define     BA_Gbl_LCDGPIO0Cntl_DS0                        0x8980
    #define     B16Gbl_LCDGPIO0Cntl_DS0                        0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_DS0                           0
    #define   LSb16Gbl_LCDGPIO0Cntl_DS0                           0
    #define       bGbl_LCDGPIO0Cntl_DS0                        1
    #define   MSK32Gbl_LCDGPIO0Cntl_DS0                           0x00000001

    #define     BA_Gbl_LCDGPIO0Cntl_DS1                        0x8980
    #define     B16Gbl_LCDGPIO0Cntl_DS1                        0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_DS1                           1
    #define   LSb16Gbl_LCDGPIO0Cntl_DS1                           1
    #define       bGbl_LCDGPIO0Cntl_DS1                        1
    #define   MSK32Gbl_LCDGPIO0Cntl_DS1                           0x00000002

    #define     BA_Gbl_LCDGPIO0Cntl_DS2                        0x8980
    #define     B16Gbl_LCDGPIO0Cntl_DS2                        0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_DS2                           2
    #define   LSb16Gbl_LCDGPIO0Cntl_DS2                           2
    #define       bGbl_LCDGPIO0Cntl_DS2                        1
    #define   MSK32Gbl_LCDGPIO0Cntl_DS2                           0x00000004

    #define     BA_Gbl_LCDGPIO0Cntl_DS3                        0x8980
    #define     B16Gbl_LCDGPIO0Cntl_DS3                        0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_DS3                           3
    #define   LSb16Gbl_LCDGPIO0Cntl_DS3                           3
    #define       bGbl_LCDGPIO0Cntl_DS3                        1
    #define   MSK32Gbl_LCDGPIO0Cntl_DS3                           0x00000008

    #define     BA_Gbl_LCDGPIO0Cntl_IE                         0x8980
    #define     B16Gbl_LCDGPIO0Cntl_IE                         0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_IE                            4
    #define   LSb16Gbl_LCDGPIO0Cntl_IE                            4
    #define       bGbl_LCDGPIO0Cntl_IE                         1
    #define   MSK32Gbl_LCDGPIO0Cntl_IE                            0x00000010

    #define     BA_Gbl_LCDGPIO0Cntl_PD                         0x8980
    #define     B16Gbl_LCDGPIO0Cntl_PD                         0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_PD                            5
    #define   LSb16Gbl_LCDGPIO0Cntl_PD                            5
    #define       bGbl_LCDGPIO0Cntl_PD                         1
    #define   MSK32Gbl_LCDGPIO0Cntl_PD                            0x00000020

    #define     BA_Gbl_LCDGPIO0Cntl_PU                         0x8980
    #define     B16Gbl_LCDGPIO0Cntl_PU                         0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_PU                            6
    #define   LSb16Gbl_LCDGPIO0Cntl_PU                            6
    #define       bGbl_LCDGPIO0Cntl_PU                         1
    #define   MSK32Gbl_LCDGPIO0Cntl_PU                            0x00000040

    #define     BA_Gbl_LCDGPIO0Cntl_ST                         0x8980
    #define     B16Gbl_LCDGPIO0Cntl_ST                         0x8980
    #define   LSb32Gbl_LCDGPIO0Cntl_ST                            7
    #define   LSb16Gbl_LCDGPIO0Cntl_ST                            7
    #define       bGbl_LCDGPIO0Cntl_ST                         1
    #define   MSK32Gbl_LCDGPIO0Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDGPIO1Cntl                            0x8984

    #define     BA_Gbl_LCDGPIO1Cntl_DS0                        0x8984
    #define     B16Gbl_LCDGPIO1Cntl_DS0                        0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_DS0                           0
    #define   LSb16Gbl_LCDGPIO1Cntl_DS0                           0
    #define       bGbl_LCDGPIO1Cntl_DS0                        1
    #define   MSK32Gbl_LCDGPIO1Cntl_DS0                           0x00000001

    #define     BA_Gbl_LCDGPIO1Cntl_DS1                        0x8984
    #define     B16Gbl_LCDGPIO1Cntl_DS1                        0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_DS1                           1
    #define   LSb16Gbl_LCDGPIO1Cntl_DS1                           1
    #define       bGbl_LCDGPIO1Cntl_DS1                        1
    #define   MSK32Gbl_LCDGPIO1Cntl_DS1                           0x00000002

    #define     BA_Gbl_LCDGPIO1Cntl_DS2                        0x8984
    #define     B16Gbl_LCDGPIO1Cntl_DS2                        0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_DS2                           2
    #define   LSb16Gbl_LCDGPIO1Cntl_DS2                           2
    #define       bGbl_LCDGPIO1Cntl_DS2                        1
    #define   MSK32Gbl_LCDGPIO1Cntl_DS2                           0x00000004

    #define     BA_Gbl_LCDGPIO1Cntl_DS3                        0x8984
    #define     B16Gbl_LCDGPIO1Cntl_DS3                        0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_DS3                           3
    #define   LSb16Gbl_LCDGPIO1Cntl_DS3                           3
    #define       bGbl_LCDGPIO1Cntl_DS3                        1
    #define   MSK32Gbl_LCDGPIO1Cntl_DS3                           0x00000008

    #define     BA_Gbl_LCDGPIO1Cntl_IE                         0x8984
    #define     B16Gbl_LCDGPIO1Cntl_IE                         0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_IE                            4
    #define   LSb16Gbl_LCDGPIO1Cntl_IE                            4
    #define       bGbl_LCDGPIO1Cntl_IE                         1
    #define   MSK32Gbl_LCDGPIO1Cntl_IE                            0x00000010

    #define     BA_Gbl_LCDGPIO1Cntl_PD                         0x8984
    #define     B16Gbl_LCDGPIO1Cntl_PD                         0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_PD                            5
    #define   LSb16Gbl_LCDGPIO1Cntl_PD                            5
    #define       bGbl_LCDGPIO1Cntl_PD                         1
    #define   MSK32Gbl_LCDGPIO1Cntl_PD                            0x00000020

    #define     BA_Gbl_LCDGPIO1Cntl_PU                         0x8984
    #define     B16Gbl_LCDGPIO1Cntl_PU                         0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_PU                            6
    #define   LSb16Gbl_LCDGPIO1Cntl_PU                            6
    #define       bGbl_LCDGPIO1Cntl_PU                         1
    #define   MSK32Gbl_LCDGPIO1Cntl_PU                            0x00000040

    #define     BA_Gbl_LCDGPIO1Cntl_ST                         0x8984
    #define     B16Gbl_LCDGPIO1Cntl_ST                         0x8984
    #define   LSb32Gbl_LCDGPIO1Cntl_ST                            7
    #define   LSb16Gbl_LCDGPIO1Cntl_ST                            7
    #define       bGbl_LCDGPIO1Cntl_ST                         1
    #define   MSK32Gbl_LCDGPIO1Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDGPIO2Cntl                            0x8988

    #define     BA_Gbl_LCDGPIO2Cntl_DS0                        0x8988
    #define     B16Gbl_LCDGPIO2Cntl_DS0                        0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_DS0                           0
    #define   LSb16Gbl_LCDGPIO2Cntl_DS0                           0
    #define       bGbl_LCDGPIO2Cntl_DS0                        1
    #define   MSK32Gbl_LCDGPIO2Cntl_DS0                           0x00000001

    #define     BA_Gbl_LCDGPIO2Cntl_DS1                        0x8988
    #define     B16Gbl_LCDGPIO2Cntl_DS1                        0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_DS1                           1
    #define   LSb16Gbl_LCDGPIO2Cntl_DS1                           1
    #define       bGbl_LCDGPIO2Cntl_DS1                        1
    #define   MSK32Gbl_LCDGPIO2Cntl_DS1                           0x00000002

    #define     BA_Gbl_LCDGPIO2Cntl_DS2                        0x8988
    #define     B16Gbl_LCDGPIO2Cntl_DS2                        0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_DS2                           2
    #define   LSb16Gbl_LCDGPIO2Cntl_DS2                           2
    #define       bGbl_LCDGPIO2Cntl_DS2                        1
    #define   MSK32Gbl_LCDGPIO2Cntl_DS2                           0x00000004

    #define     BA_Gbl_LCDGPIO2Cntl_DS3                        0x8988
    #define     B16Gbl_LCDGPIO2Cntl_DS3                        0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_DS3                           3
    #define   LSb16Gbl_LCDGPIO2Cntl_DS3                           3
    #define       bGbl_LCDGPIO2Cntl_DS3                        1
    #define   MSK32Gbl_LCDGPIO2Cntl_DS3                           0x00000008

    #define     BA_Gbl_LCDGPIO2Cntl_IE                         0x8988
    #define     B16Gbl_LCDGPIO2Cntl_IE                         0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_IE                            4
    #define   LSb16Gbl_LCDGPIO2Cntl_IE                            4
    #define       bGbl_LCDGPIO2Cntl_IE                         1
    #define   MSK32Gbl_LCDGPIO2Cntl_IE                            0x00000010

    #define     BA_Gbl_LCDGPIO2Cntl_PD                         0x8988
    #define     B16Gbl_LCDGPIO2Cntl_PD                         0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_PD                            5
    #define   LSb16Gbl_LCDGPIO2Cntl_PD                            5
    #define       bGbl_LCDGPIO2Cntl_PD                         1
    #define   MSK32Gbl_LCDGPIO2Cntl_PD                            0x00000020

    #define     BA_Gbl_LCDGPIO2Cntl_PU                         0x8988
    #define     B16Gbl_LCDGPIO2Cntl_PU                         0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_PU                            6
    #define   LSb16Gbl_LCDGPIO2Cntl_PU                            6
    #define       bGbl_LCDGPIO2Cntl_PU                         1
    #define   MSK32Gbl_LCDGPIO2Cntl_PU                            0x00000040

    #define     BA_Gbl_LCDGPIO2Cntl_ST                         0x8988
    #define     B16Gbl_LCDGPIO2Cntl_ST                         0x8988
    #define   LSb32Gbl_LCDGPIO2Cntl_ST                            7
    #define   LSb16Gbl_LCDGPIO2Cntl_ST                            7
    #define       bGbl_LCDGPIO2Cntl_ST                         1
    #define   MSK32Gbl_LCDGPIO2Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDGPIO3Cntl                            0x898C

    #define     BA_Gbl_LCDGPIO3Cntl_DS0                        0x898C
    #define     B16Gbl_LCDGPIO3Cntl_DS0                        0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_DS0                           0
    #define   LSb16Gbl_LCDGPIO3Cntl_DS0                           0
    #define       bGbl_LCDGPIO3Cntl_DS0                        1
    #define   MSK32Gbl_LCDGPIO3Cntl_DS0                           0x00000001

    #define     BA_Gbl_LCDGPIO3Cntl_DS1                        0x898C
    #define     B16Gbl_LCDGPIO3Cntl_DS1                        0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_DS1                           1
    #define   LSb16Gbl_LCDGPIO3Cntl_DS1                           1
    #define       bGbl_LCDGPIO3Cntl_DS1                        1
    #define   MSK32Gbl_LCDGPIO3Cntl_DS1                           0x00000002

    #define     BA_Gbl_LCDGPIO3Cntl_DS2                        0x898C
    #define     B16Gbl_LCDGPIO3Cntl_DS2                        0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_DS2                           2
    #define   LSb16Gbl_LCDGPIO3Cntl_DS2                           2
    #define       bGbl_LCDGPIO3Cntl_DS2                        1
    #define   MSK32Gbl_LCDGPIO3Cntl_DS2                           0x00000004

    #define     BA_Gbl_LCDGPIO3Cntl_DS3                        0x898C
    #define     B16Gbl_LCDGPIO3Cntl_DS3                        0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_DS3                           3
    #define   LSb16Gbl_LCDGPIO3Cntl_DS3                           3
    #define       bGbl_LCDGPIO3Cntl_DS3                        1
    #define   MSK32Gbl_LCDGPIO3Cntl_DS3                           0x00000008

    #define     BA_Gbl_LCDGPIO3Cntl_IE                         0x898C
    #define     B16Gbl_LCDGPIO3Cntl_IE                         0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_IE                            4
    #define   LSb16Gbl_LCDGPIO3Cntl_IE                            4
    #define       bGbl_LCDGPIO3Cntl_IE                         1
    #define   MSK32Gbl_LCDGPIO3Cntl_IE                            0x00000010

    #define     BA_Gbl_LCDGPIO3Cntl_PD                         0x898C
    #define     B16Gbl_LCDGPIO3Cntl_PD                         0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_PD                            5
    #define   LSb16Gbl_LCDGPIO3Cntl_PD                            5
    #define       bGbl_LCDGPIO3Cntl_PD                         1
    #define   MSK32Gbl_LCDGPIO3Cntl_PD                            0x00000020

    #define     BA_Gbl_LCDGPIO3Cntl_PU                         0x898C
    #define     B16Gbl_LCDGPIO3Cntl_PU                         0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_PU                            6
    #define   LSb16Gbl_LCDGPIO3Cntl_PU                            6
    #define       bGbl_LCDGPIO3Cntl_PU                         1
    #define   MSK32Gbl_LCDGPIO3Cntl_PU                            0x00000040

    #define     BA_Gbl_LCDGPIO3Cntl_ST                         0x898C
    #define     B16Gbl_LCDGPIO3Cntl_ST                         0x898C
    #define   LSb32Gbl_LCDGPIO3Cntl_ST                            7
    #define   LSb16Gbl_LCDGPIO3Cntl_ST                            7
    #define       bGbl_LCDGPIO3Cntl_ST                         1
    #define   MSK32Gbl_LCDGPIO3Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_LCDGPIO4Cntl                            0x8990

    #define     BA_Gbl_LCDGPIO4Cntl_DS0                        0x8990
    #define     B16Gbl_LCDGPIO4Cntl_DS0                        0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_DS0                           0
    #define   LSb16Gbl_LCDGPIO4Cntl_DS0                           0
    #define       bGbl_LCDGPIO4Cntl_DS0                        1
    #define   MSK32Gbl_LCDGPIO4Cntl_DS0                           0x00000001

    #define     BA_Gbl_LCDGPIO4Cntl_DS1                        0x8990
    #define     B16Gbl_LCDGPIO4Cntl_DS1                        0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_DS1                           1
    #define   LSb16Gbl_LCDGPIO4Cntl_DS1                           1
    #define       bGbl_LCDGPIO4Cntl_DS1                        1
    #define   MSK32Gbl_LCDGPIO4Cntl_DS1                           0x00000002

    #define     BA_Gbl_LCDGPIO4Cntl_DS2                        0x8990
    #define     B16Gbl_LCDGPIO4Cntl_DS2                        0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_DS2                           2
    #define   LSb16Gbl_LCDGPIO4Cntl_DS2                           2
    #define       bGbl_LCDGPIO4Cntl_DS2                        1
    #define   MSK32Gbl_LCDGPIO4Cntl_DS2                           0x00000004

    #define     BA_Gbl_LCDGPIO4Cntl_DS3                        0x8990
    #define     B16Gbl_LCDGPIO4Cntl_DS3                        0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_DS3                           3
    #define   LSb16Gbl_LCDGPIO4Cntl_DS3                           3
    #define       bGbl_LCDGPIO4Cntl_DS3                        1
    #define   MSK32Gbl_LCDGPIO4Cntl_DS3                           0x00000008

    #define     BA_Gbl_LCDGPIO4Cntl_IE                         0x8990
    #define     B16Gbl_LCDGPIO4Cntl_IE                         0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_IE                            4
    #define   LSb16Gbl_LCDGPIO4Cntl_IE                            4
    #define       bGbl_LCDGPIO4Cntl_IE                         1
    #define   MSK32Gbl_LCDGPIO4Cntl_IE                            0x00000010

    #define     BA_Gbl_LCDGPIO4Cntl_PD                         0x8990
    #define     B16Gbl_LCDGPIO4Cntl_PD                         0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_PD                            5
    #define   LSb16Gbl_LCDGPIO4Cntl_PD                            5
    #define       bGbl_LCDGPIO4Cntl_PD                         1
    #define   MSK32Gbl_LCDGPIO4Cntl_PD                            0x00000020

    #define     BA_Gbl_LCDGPIO4Cntl_PU                         0x8990
    #define     B16Gbl_LCDGPIO4Cntl_PU                         0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_PU                            6
    #define   LSb16Gbl_LCDGPIO4Cntl_PU                            6
    #define       bGbl_LCDGPIO4Cntl_PU                         1
    #define   MSK32Gbl_LCDGPIO4Cntl_PU                            0x00000040

    #define     BA_Gbl_LCDGPIO4Cntl_ST                         0x8990
    #define     B16Gbl_LCDGPIO4Cntl_ST                         0x8990
    #define   LSb32Gbl_LCDGPIO4Cntl_ST                            7
    #define   LSb16Gbl_LCDGPIO4Cntl_ST                            7
    #define       bGbl_LCDGPIO4Cntl_ST                         1
    #define   MSK32Gbl_LCDGPIO4Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////

    typedef struct SIE_Gbl {
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ProductId_Id(r32)                       _BFGET_(r32, 31, 0)
    #define   SET32Gbl_ProductId_Id(r32, v)                     _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_ProductId                               {\
	    UNSG32 uProductId_Id                               : 32;\
	}
    union { UNSG32 u32Gbl_ProductId;
	    struct w32Gbl_ProductId;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ProductId_ext_ID_EXT(r32)               _BFGET_(r32, 7, 0)
    #define   SET32Gbl_ProductId_ext_ID_EXT(r32, v)             _BFSET_(r32, 7, 0, v)
    #define   GET16Gbl_ProductId_ext_ID_EXT(r16)               _BFGET_(r16, 7, 0)
    #define   SET16Gbl_ProductId_ext_ID_EXT(r16, v)             _BFSET_(r16, 7, 0, v)

    #define     w32Gbl_ProductId_ext                           {\
	    UNSG32 uProductId_ext_ID_EXT                       :  8;\
	    UNSG32 RSVDx4_b8                                   : 24;\
	}
    union { UNSG32 u32Gbl_ProductId_ext;
	    struct w32Gbl_ProductId_ext;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_INT_ID_VALUE(r32)                       _BFGET_(r32, 7, 0)
    #define   SET32Gbl_INT_ID_VALUE(r32, v)                     _BFSET_(r32, 7, 0, v)
    #define   GET16Gbl_INT_ID_VALUE(r16)                       _BFGET_(r16, 7, 0)
    #define   SET16Gbl_INT_ID_VALUE(r16, v)                     _BFSET_(r16, 7, 0, v)

    #define     w32Gbl_INT_ID                                  {\
	    UNSG32 uINT_ID_VALUE                               :  8;\
	    UNSG32 RSVDx8_b8                                   : 24;\
	}
    union { UNSG32 u32Gbl_INT_ID;
	    struct w32Gbl_INT_ID;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrap_softwareStrap(r32)            _BFGET_(r32, 15, 0)
    #define   SET32Gbl_bootStrap_softwareStrap(r32, v)          _BFSET_(r32, 15, 0, v)
    #define   GET16Gbl_bootStrap_softwareStrap(r16)            _BFGET_(r16, 15, 0)
    #define   SET16Gbl_bootStrap_softwareStrap(r16, v)          _BFSET_(r16, 15, 0, v)

    #define   GET32Gbl_bootStrap_bootSrc(r32)                  _BFGET_(r32, 17, 16)
    #define   SET32Gbl_bootStrap_bootSrc(r32, v)                _BFSET_(r32, 17, 16, v)
    #define   GET16Gbl_bootStrap_bootSrc(r16)                  _BFGET_(r16, 1, 0)
    #define   SET16Gbl_bootStrap_bootSrc(r16, v)                _BFSET_(r16, 1, 0, v)

    #define   GET32Gbl_bootStrap_cpuRstByps(r32)               _BFGET_(r32, 18, 18)
    #define   SET32Gbl_bootStrap_cpuRstByps(r32, v)             _BFSET_(r32, 18, 18, v)
    #define   GET16Gbl_bootStrap_cpuRstByps(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_bootStrap_cpuRstByps(r16, v)             _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_bootStrap_pllPwrDown(r32)               _BFGET_(r32, 19, 19)
    #define   SET32Gbl_bootStrap_pllPwrDown(r32, v)             _BFSET_(r32, 19, 19, v)
    #define   GET16Gbl_bootStrap_pllPwrDown(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_bootStrap_pllPwrDown(r16, v)             _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_bootStrap_sysPll_0Byps(r32)             _BFGET_(r32, 20, 20)
    #define   SET32Gbl_bootStrap_sysPll_0Byps(r32, v)           _BFSET_(r32, 20, 20, v)
    #define   GET16Gbl_bootStrap_sysPll_0Byps(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_bootStrap_sysPll_0Byps(r16, v)           _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_bootStrap_sysPll_1Byps(r32)             _BFGET_(r32, 21, 21)
    #define   SET32Gbl_bootStrap_sysPll_1Byps(r32, v)           _BFSET_(r32, 21, 21, v)
    #define   GET16Gbl_bootStrap_sysPll_1Byps(r16)             _BFGET_(r16, 5, 5)
    #define   SET16Gbl_bootStrap_sysPll_1Byps(r16, v)           _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_bootStrap_memPllByps(r32)               _BFGET_(r32, 22, 22)
    #define   SET32Gbl_bootStrap_memPllByps(r32, v)             _BFSET_(r32, 22, 22, v)
    #define   GET16Gbl_bootStrap_memPllByps(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_bootStrap_memPllByps(r16, v)             _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_bootStrap_cpuPllByps(r32)               _BFGET_(r32, 23, 23)
    #define   SET32Gbl_bootStrap_cpuPllByps(r32, v)             _BFSET_(r32, 23, 23, v)
    #define   GET16Gbl_bootStrap_cpuPllByps(r16)               _BFGET_(r16, 7, 7)
    #define   SET16Gbl_bootStrap_cpuPllByps(r16, v)             _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_bootStrap_emmcV12Enable(r32)            _BFGET_(r32, 24, 24)
    #define   SET32Gbl_bootStrap_emmcV12Enable(r32, v)          _BFSET_(r32, 24, 24, v)
    #define   GET16Gbl_bootStrap_emmcV12Enable(r16)            _BFGET_(r16, 8, 8)
    #define   SET16Gbl_bootStrap_emmcV12Enable(r16, v)          _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_bootStrap_ENG_EN(r32)                   _BFGET_(r32, 25, 25)
    #define   SET32Gbl_bootStrap_ENG_EN(r32, v)                 _BFSET_(r32, 25, 25, v)
    #define   GET16Gbl_bootStrap_ENG_EN(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_bootStrap_ENG_EN(r16, v)                 _BFSET_(r16, 9, 9, v)

    #define   GET32Gbl_bootStrap_LEGACY_BOOT(r32)              _BFGET_(r32, 26, 26)
    #define   SET32Gbl_bootStrap_LEGACY_BOOT(r32, v)            _BFSET_(r32, 26, 26, v)
    #define   GET16Gbl_bootStrap_LEGACY_BOOT(r16)              _BFGET_(r16, 10, 10)
    #define   SET16Gbl_bootStrap_LEGACY_BOOT(r16, v)            _BFSET_(r16, 10, 10, v)

    #define   GET32Gbl_bootStrap_aPll_0Byps(r32)               _BFGET_(r32, 27, 27)
    #define   SET32Gbl_bootStrap_aPll_0Byps(r32, v)             _BFSET_(r32, 27, 27, v)
    #define   GET16Gbl_bootStrap_aPll_0Byps(r16)               _BFGET_(r16, 11, 11)
    #define   SET16Gbl_bootStrap_aPll_0Byps(r16, v)             _BFSET_(r16, 11, 11, v)

    #define     w32Gbl_bootStrap                               {\
	    UNSG32 ubootStrap_softwareStrap                    : 16;\
	    UNSG32 ubootStrap_bootSrc                          :  2;\
	    UNSG32 ubootStrap_cpuRstByps                       :  1;\
	    UNSG32 ubootStrap_pllPwrDown                       :  1;\
	    UNSG32 ubootStrap_sysPll_0Byps                     :  1;\
	    UNSG32 ubootStrap_sysPll_1Byps                     :  1;\
	    UNSG32 ubootStrap_memPllByps                       :  1;\
	    UNSG32 ubootStrap_cpuPllByps                       :  1;\
	    UNSG32 ubootStrap_emmcV12Enable                    :  1;\
	    UNSG32 ubootStrap_ENG_EN                           :  1;\
	    UNSG32 ubootStrap_LEGACY_BOOT                      :  1;\
	    UNSG32 ubootStrap_aPll_0Byps                       :  1;\
	    UNSG32 RSVDxC_b28                                  :  4;\
	}
    union { UNSG32 u32Gbl_bootStrap;
	    struct w32Gbl_bootStrap;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrapEn_cpuRstBypsEn(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_bootStrapEn_cpuRstBypsEn(r32, v)         _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_bootStrapEn_cpuRstBypsEn(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_bootStrapEn_cpuRstBypsEn(r16, v)         _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_bootStrapEn_pllPwrDownEn(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_bootStrapEn_pllPwrDownEn(r32, v)         _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_bootStrapEn_pllPwrDownEn(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_bootStrapEn_pllPwrDownEn(r16, v)         _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_bootStrapEn_sysPLL_0BypsEn(r32)         _BFGET_(r32, 2, 2)
    #define   SET32Gbl_bootStrapEn_sysPLL_0BypsEn(r32, v)       _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_bootStrapEn_sysPLL_0BypsEn(r16)         _BFGET_(r16, 2, 2)
    #define   SET16Gbl_bootStrapEn_sysPLL_0BypsEn(r16, v)       _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_bootStrapEn_memPLLBypsEn(r32)           _BFGET_(r32, 3, 3)
    #define   SET32Gbl_bootStrapEn_memPLLBypsEn(r32, v)         _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_bootStrapEn_memPLLBypsEn(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_bootStrapEn_memPLLBypsEn(r16, v)         _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_bootStrapEn_cpuPLLBypsEn(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_bootStrapEn_cpuPLLBypsEn(r32, v)         _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_bootStrapEn_cpuPLLBypsEn(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_bootStrapEn_cpuPLLBypsEn(r16, v)         _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_bootStrapEn_legacyBootEn(r32)           _BFGET_(r32, 5, 5)
    #define   SET32Gbl_bootStrapEn_legacyBootEn(r32, v)         _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_bootStrapEn_legacyBootEn(r16)           _BFGET_(r16, 5, 5)
    #define   SET16Gbl_bootStrapEn_legacyBootEn(r16, v)         _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_bootStrapEn_sysPLL_1BypsEn(r32)         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_bootStrapEn_sysPLL_1BypsEn(r32, v)       _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_bootStrapEn_sysPLL_1BypsEn(r16)         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_bootStrapEn_sysPLL_1BypsEn(r16, v)       _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_bootStrapEn_aPLL_0BypsEn(r32)           _BFGET_(r32, 7, 7)
    #define   SET32Gbl_bootStrapEn_aPLL_0BypsEn(r32, v)         _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_bootStrapEn_aPLL_0BypsEn(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_bootStrapEn_aPLL_0BypsEn(r16, v)         _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_bootStrapEn                             {\
	    UNSG32 ubootStrapEn_cpuRstBypsEn                   :  1;\
	    UNSG32 ubootStrapEn_pllPwrDownEn                   :  1;\
	    UNSG32 ubootStrapEn_sysPLL_0BypsEn                 :  1;\
	    UNSG32 ubootStrapEn_memPLLBypsEn                   :  1;\
	    UNSG32 ubootStrapEn_cpuPLLBypsEn                   :  1;\
	    UNSG32 ubootStrapEn_legacyBootEn                   :  1;\
	    UNSG32 ubootStrapEn_sysPLL_1BypsEn                 :  1;\
	    UNSG32 ubootStrapEn_aPLL_0BypsEn                   :  1;\
	    UNSG32 RSVDx10_b8                                  : 24;\
	}
    union { UNSG32 u32Gbl_bootStrapEn;
	    struct w32Gbl_bootStrapEn;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_pkgSel_DDR32bit(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_pkgSel_DDR32bit(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_pkgSel_DDR32bit(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_pkgSel_DDR32bit(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_pkgSel_reserved(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_pkgSel_reserved(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_pkgSel_reserved(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_pkgSel_reserved(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define     w32Gbl_pkgSel                                  {\
	    UNSG32 upkgSel_DDR32bit                            :  1;\
	    UNSG32 upkgSel_reserved                            :  1;\
	    UNSG32 RSVDx14_b2                                  : 30;\
	}
    union { UNSG32 u32Gbl_pkgSel;
	    struct w32Gbl_pkgSel;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx18[40];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_chipCntl_DBG_SEL(r32)                   _BFGET_(r32, 2, 0)
    #define   SET32Gbl_chipCntl_DBG_SEL(r32, v)                 _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_chipCntl_DBG_SEL(r16)                   _BFGET_(r16, 2, 0)
    #define   SET16Gbl_chipCntl_DBG_SEL(r16, v)                 _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_chipCntl_TW1_SEL(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_chipCntl_TW1_SEL(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_chipCntl_TW1_SEL(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_chipCntl_TW1_SEL(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define     w32Gbl_chipCntl                                {\
	    UNSG32 uchipCntl_DBG_SEL                           :  3;\
	    UNSG32 uchipCntl_TW1_SEL                           :  1;\
	    UNSG32 RSVDx40_b4                                  : 28;\
	}
    union { UNSG32 u32Gbl_chipCntl;
	    struct w32Gbl_chipCntl;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx44[60];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic0_swReg0(r32)                 _BFGET_(r32, 31, 0)
    #define   SET32Gbl_sw_generic0_swReg0(r32, v)               _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_sw_generic0                             {\
	    UNSG32 usw_generic0_swReg0                         : 32;\
	}
    union { UNSG32 u32Gbl_sw_generic0;
	    struct w32Gbl_sw_generic0;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic1_swReg1(r32)                 _BFGET_(r32, 31, 0)
    #define   SET32Gbl_sw_generic1_swReg1(r32, v)               _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_sw_generic1                             {\
	    UNSG32 usw_generic1_swReg1                         : 32;\
	}
    union { UNSG32 u32Gbl_sw_generic1;
	    struct w32Gbl_sw_generic1;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic2_swReg2(r32)                 _BFGET_(r32, 31, 0)
    #define   SET32Gbl_sw_generic2_swReg2(r32, v)               _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_sw_generic2                             {\
	    UNSG32 usw_generic2_swReg2                         : 32;\
	}
    union { UNSG32 u32Gbl_sw_generic2;
	    struct w32Gbl_sw_generic2;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic3_swReg3(r32)                 _BFGET_(r32, 31, 0)
    #define   SET32Gbl_sw_generic3_swReg3(r32, v)               _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_sw_generic3                             {\
	    UNSG32 usw_generic3_swReg3                         : 32;\
	}
    union { UNSG32 u32Gbl_sw_generic3;
	    struct w32Gbl_sw_generic3;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx90[112];
    ///////////////////////////////////////////////////////////
	SIE_SRAMRWTC                                     ie_RWTC_SOC;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_EMMC;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_SDIO;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_USB2;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_SISS;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_PB;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_GFX3D;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_MC;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_ALM;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_SPMEM;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_USB3;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_GE;
    ///////////////////////////////////////////////////////////
	SIE_SRAMPWR                                      ie_SRAM_PWR_NAND;
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx13C[92];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FPGAR_FPGAR(r32)                        _BFGET_(r32, 31, 0)
    #define   SET32Gbl_FPGAR_FPGAR(r32, v)                      _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_FPGAR                                   {\
	    UNSG32 uFPGAR_FPGAR                                : 32;\
	}
    union { UNSG32 u32Gbl_FPGAR;
	    struct w32Gbl_FPGAR;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FPGARW_FPGARW(r32)                      _BFGET_(r32, 31, 0)
    #define   SET32Gbl_FPGARW_FPGARW(r32, v)                    _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_FPGARW                                  {\
	    UNSG32 uFPGARW_FPGARW                              : 32;\
	}
    union { UNSG32 u32Gbl_FPGARW;
	    struct w32Gbl_FPGARW;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx1A0[96];
    ///////////////////////////////////////////////////////////
	SIE_abipll                                       ie_sysPll_0;
    ///////////////////////////////////////////////////////////
	SIE_abipll                                       ie_sysPll_1;
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx240[960];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ResetTrigger_chipReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetTrigger_chipReset(r32, v)           _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_ResetTrigger_chipReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetTrigger_chipReset(r16, v)           _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_ResetTrigger_socDdrSyncReset(r32)       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetTrigger_socDdrSyncReset(r32, v)     _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_ResetTrigger_socDdrSyncReset(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetTrigger_socDdrSyncReset(r16, v)     _BFSET_(r16, 1, 1, v)

    #define     w32Gbl_ResetTrigger                            {\
	    UNSG32 uResetTrigger_chipReset                     :  1;\
	    UNSG32 uResetTrigger_socDdrSyncReset               :  1;\
	    UNSG32 RSVDx600_b2                                 : 30;\
	}
    union { UNSG32 u32Gbl_ResetTrigger;
	    struct w32Gbl_ResetTrigger;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ResetStatus_ChipResetStatus(r32)        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetStatus_ChipResetStatus(r32, v)      _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_ResetStatus_ChipResetStatus(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetStatus_ChipResetStatus(r16, v)      _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_ResetStatus_socDdrSyncResetStatus(r32)  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetStatus_socDdrSyncResetStatus(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_ResetStatus_socDdrSyncResetStatus(r16)  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetStatus_socDdrSyncResetStatus(r16, v) _BFSET_(r16, 1, 1, v)

    #define     w32Gbl_ResetStatus                             {\
	    UNSG32 uResetStatus_ChipResetStatus                :  1;\
	    UNSG32 uResetStatus_socDdrSyncResetStatus          :  1;\
	    UNSG32 RSVDx604_b2                                 : 30;\
	}
    union { UNSG32 u32Gbl_ResetStatus;
	    struct w32Gbl_ResetStatus;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx608[4];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_WDTResetStatus_wd0Status(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_WDTResetStatus_wd0Status(r32, v)         _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_WDTResetStatus_wd0Status(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_WDTResetStatus_wd0Status(r16, v)         _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_WDTResetStatus_wd1Status(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_WDTResetStatus_wd1Status(r32, v)         _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_WDTResetStatus_wd1Status(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_WDTResetStatus_wd1Status(r16, v)         _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_WDTResetStatus_wd2Status(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_WDTResetStatus_wd2Status(r32, v)         _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_WDTResetStatus_wd2Status(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_WDTResetStatus_wd2Status(r16, v)         _BFSET_(r16, 2, 2, v)

    #define     w32Gbl_WDTResetStatus                          {\
	    UNSG32 uWDTResetStatus_wd0Status                   :  1;\
	    UNSG32 uWDTResetStatus_wd1Status                   :  1;\
	    UNSG32 uWDTResetStatus_wd2Status                   :  1;\
	    UNSG32 RSVDx60C_b3                                 : 29;\
	}
    union { UNSG32 u32Gbl_WDTResetStatus;
	    struct w32Gbl_WDTResetStatus;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_WDTSysRstMask_wdt0Mask(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_WDTSysRstMask_wdt0Mask(r32, v)           _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_WDTSysRstMask_wdt0Mask(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_WDTSysRstMask_wdt0Mask(r16, v)           _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_WDTSysRstMask_wdt1Mask(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_WDTSysRstMask_wdt1Mask(r32, v)           _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_WDTSysRstMask_wdt1Mask(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_WDTSysRstMask_wdt1Mask(r16, v)           _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_WDTSysRstMask_wdt2Mask(r32)             _BFGET_(r32, 2, 2)
    #define   SET32Gbl_WDTSysRstMask_wdt2Mask(r32, v)           _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_WDTSysRstMask_wdt2Mask(r16)             _BFGET_(r16, 2, 2)
    #define   SET16Gbl_WDTSysRstMask_wdt2Mask(r16, v)           _BFSET_(r16, 2, 2, v)

    #define     w32Gbl_WDTSysRstMask                           {\
	    UNSG32 uWDTSysRstMask_wdt0Mask                     :  1;\
	    UNSG32 uWDTSysRstMask_wdt1Mask                     :  1;\
	    UNSG32 uWDTSysRstMask_wdt2Mask                     :  1;\
	    UNSG32 RSVDx610_b3                                 : 29;\
	}
    union { UNSG32 u32Gbl_WDTSysRstMask;
	    struct w32Gbl_WDTSysRstMask;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_CHIP_RESET_TRACKER_VALUE(r32)           _BFGET_(r32, 31, 0)
    #define   SET32Gbl_CHIP_RESET_TRACKER_VALUE(r32, v)         _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_CHIP_RESET_TRACKER                      {\
	    UNSG32 uCHIP_RESET_TRACKER_VALUE                   : 32;\
	}
    union { UNSG32 u32Gbl_CHIP_RESET_TRACKER;
	    struct w32Gbl_CHIP_RESET_TRACKER;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx618[8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_avioReset_SyncReset(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_avioReset_SyncReset(r32, v)              _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_avioReset_SyncReset(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_avioReset_SyncReset(r16, v)              _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_avioReset                               {\
	    UNSG32 uavioReset_SyncReset                        :  1;\
	    UNSG32 RSVDx620_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_avioReset;
	    struct w32Gbl_avioReset;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_avioResetStatus_SyncReset(r32)          _BFGET_(r32, 0, 0)
    #define   SET32Gbl_avioResetStatus_SyncReset(r32, v)        _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_avioResetStatus_SyncReset(r16)          _BFGET_(r16, 0, 0)
    #define   SET16Gbl_avioResetStatus_SyncReset(r16, v)        _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_avioResetStatus                         {\
	    UNSG32 uavioResetStatus_SyncReset                  :  1;\
	    UNSG32 RSVDx624_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_avioResetStatus;
	    struct w32Gbl_avioResetStatus;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx628[88];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_perifReset_SyncReset(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_perifReset_SyncReset(r32, v)             _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_perifReset_SyncReset(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_perifReset_SyncReset(r16, v)             _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_perifReset_ahbApbSyncReset(r32)         _BFGET_(r32, 1, 1)
    #define   SET32Gbl_perifReset_ahbApbSyncReset(r32, v)       _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_perifReset_ahbApbSyncReset(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_perifReset_ahbApbSyncReset(r16, v)       _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_perifReset_sdioSyncReset(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_perifReset_sdioSyncReset(r32, v)         _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_perifReset_sdioSyncReset(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_perifReset_sdioSyncReset(r16, v)         _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_perifReset_ReservedSyncReset(r32)       _BFGET_(r32, 3, 3)
    #define   SET32Gbl_perifReset_ReservedSyncReset(r32, v)     _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_perifReset_ReservedSyncReset(r16)       _BFGET_(r16, 3, 3)
    #define   SET16Gbl_perifReset_ReservedSyncReset(r16, v)     _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_perifReset_usb0SyncReset(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_perifReset_usb0SyncReset(r32, v)         _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_perifReset_usb0SyncReset(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_perifReset_usb0SyncReset(r16, v)         _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_perifReset_emmcSyncReset(r32)           _BFGET_(r32, 5, 5)
    #define   SET32Gbl_perifReset_emmcSyncReset(r32, v)         _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_perifReset_emmcSyncReset(r16)           _BFGET_(r16, 5, 5)
    #define   SET16Gbl_perifReset_emmcSyncReset(r16, v)         _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_perifReset_pBridgeSyncReset(r32)        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_perifReset_pBridgeSyncReset(r32, v)      _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_perifReset_pBridgeSyncReset(r16)        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_perifReset_pBridgeSyncReset(r16, v)      _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_perifReset_usb3SyncReset(r32)           _BFGET_(r32, 7, 7)
    #define   SET32Gbl_perifReset_usb3SyncReset(r32, v)         _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_perifReset_usb3SyncReset(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_perifReset_usb3SyncReset(r16, v)         _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_perifReset_nfcSysSyncReset(r32)         _BFGET_(r32, 8, 8)
    #define   SET32Gbl_perifReset_nfcSysSyncReset(r32, v)       _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_perifReset_nfcSysSyncReset(r16)         _BFGET_(r16, 8, 8)
    #define   SET16Gbl_perifReset_nfcSysSyncReset(r16, v)       _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_perifReset_nfcRegSyncReset(r32)         _BFGET_(r32, 9, 9)
    #define   SET32Gbl_perifReset_nfcRegSyncReset(r32, v)       _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_perifReset_nfcRegSyncReset(r16)         _BFGET_(r16, 9, 9)
    #define   SET16Gbl_perifReset_nfcRegSyncReset(r16, v)       _BFSET_(r16, 9, 9, v)

    #define   GET32Gbl_perifReset_gethRgmiiSyncReset(r32)      _BFGET_(r32, 10, 10)
    #define   SET32Gbl_perifReset_gethRgmiiSyncReset(r32, v)    _BFSET_(r32, 10, 10, v)
    #define   GET16Gbl_perifReset_gethRgmiiSyncReset(r16)      _BFGET_(r16, 10, 10)
    #define   SET16Gbl_perifReset_gethRgmiiSyncReset(r16, v)    _BFSET_(r16, 10, 10, v)

    #define     w32Gbl_perifReset                              {\
	    UNSG32 uperifReset_SyncReset                       :  1;\
	    UNSG32 uperifReset_ahbApbSyncReset                 :  1;\
	    UNSG32 uperifReset_sdioSyncReset                   :  1;\
	    UNSG32 uperifReset_ReservedSyncReset               :  1;\
	    UNSG32 uperifReset_usb0SyncReset                   :  1;\
	    UNSG32 uperifReset_emmcSyncReset                   :  1;\
	    UNSG32 uperifReset_pBridgeSyncReset                :  1;\
	    UNSG32 uperifReset_usb3SyncReset                   :  1;\
	    UNSG32 uperifReset_nfcSysSyncReset                 :  1;\
	    UNSG32 uperifReset_nfcRegSyncReset                 :  1;\
	    UNSG32 uperifReset_gethRgmiiSyncReset              :  1;\
	    UNSG32 RSVDx680_b11                                : 21;\
	}
    union { UNSG32 u32Gbl_perifReset;
	    struct w32Gbl_perifReset;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_perifResetStatus_SyncReset(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_perifResetStatus_SyncReset(r32, v)       _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_perifResetStatus_SyncReset(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_perifResetStatus_SyncReset(r16, v)       _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_perifResetStatus_ahbApbSyncReset(r32)   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_perifResetStatus_ahbApbSyncReset(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_perifResetStatus_ahbApbSyncReset(r16)   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_perifResetStatus_ahbApbSyncReset(r16, v) _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_perifResetStatus_sdioSyncReset(r32)     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_perifResetStatus_sdioSyncReset(r32, v)   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_perifResetStatus_sdioSyncReset(r16)     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_perifResetStatus_sdioSyncReset(r16, v)   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_perifResetStatus_bcmSyncReset(r32)      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_perifResetStatus_bcmSyncReset(r32, v)    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_perifResetStatus_bcmSyncReset(r16)      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_perifResetStatus_bcmSyncReset(r16, v)    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_perifResetStatus_usb0SyncReset(r32)     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_perifResetStatus_usb0SyncReset(r32, v)   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_perifResetStatus_usb0SyncReset(r16)     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_perifResetStatus_usb0SyncReset(r16, v)   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_perifResetStatus_emmcSyncReset(r32)     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_perifResetStatus_emmcSyncReset(r32, v)   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_perifResetStatus_emmcSyncReset(r16)     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_perifResetStatus_emmcSyncReset(r16, v)   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_perifResetStatus_pBridgeSyncReset(r32)  _BFGET_(r32, 6, 6)
    #define   SET32Gbl_perifResetStatus_pBridgeSyncReset(r32, v) _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_perifResetStatus_pBridgeSyncReset(r16)  _BFGET_(r16, 6, 6)
    #define   SET16Gbl_perifResetStatus_pBridgeSyncReset(r16, v) _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_perifResetStatus_usb3SyncReset(r32)     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_perifResetStatus_usb3SyncReset(r32, v)   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_perifResetStatus_usb3SyncReset(r16)     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_perifResetStatus_usb3SyncReset(r16, v)   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_perifResetStatus_nfcSysSyncReset(r32)   _BFGET_(r32, 8, 8)
    #define   SET32Gbl_perifResetStatus_nfcSysSyncReset(r32, v) _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_perifResetStatus_nfcSysSyncReset(r16)   _BFGET_(r16, 8, 8)
    #define   SET16Gbl_perifResetStatus_nfcSysSyncReset(r16, v) _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_perifResetStatus_nfcRegSyncReset(r32)   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_perifResetStatus_nfcRegSyncReset(r32, v) _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_perifResetStatus_nfcRegSyncReset(r16)   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_perifResetStatus_nfcRegSyncReset(r16, v) _BFSET_(r16, 9, 9, v)

    #define   GET32Gbl_perifResetStatus_gethRgmiiSyncReset(r32) _BFGET_(r32, 10, 10)
    #define   SET32Gbl_perifResetStatus_gethRgmiiSyncReset(r32, v) _BFSET_(r32, 10, 10, v)
    #define   GET16Gbl_perifResetStatus_gethRgmiiSyncReset(r16) _BFGET_(r16, 10, 10)
    #define   SET16Gbl_perifResetStatus_gethRgmiiSyncReset(r16, v) _BFSET_(r16, 10, 10, v)

    #define     w32Gbl_perifResetStatus                        {\
	    UNSG32 uperifResetStatus_SyncReset                 :  1;\
	    UNSG32 uperifResetStatus_ahbApbSyncReset           :  1;\
	    UNSG32 uperifResetStatus_sdioSyncReset             :  1;\
	    UNSG32 uperifResetStatus_bcmSyncReset              :  1;\
	    UNSG32 uperifResetStatus_usb0SyncReset             :  1;\
	    UNSG32 uperifResetStatus_emmcSyncReset             :  1;\
	    UNSG32 uperifResetStatus_pBridgeSyncReset          :  1;\
	    UNSG32 uperifResetStatus_usb3SyncReset             :  1;\
	    UNSG32 uperifResetStatus_nfcSysSyncReset           :  1;\
	    UNSG32 uperifResetStatus_nfcRegSyncReset           :  1;\
	    UNSG32 uperifResetStatus_gethRgmiiSyncReset        :  1;\
	    UNSG32 RSVDx684_b11                                : 21;\
	}
    union { UNSG32 u32Gbl_perifResetStatus;
	    struct w32Gbl_perifResetStatus;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_perifStickyResetN_usb0PhyRstn(r32)      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_perifStickyResetN_usb0PhyRstn(r32, v)    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_perifStickyResetN_usb0PhyRstn(r16)      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_perifStickyResetN_usb0PhyRstn(r16, v)    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_perifStickyResetN_usb0CoreRstn(r32)     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_perifStickyResetN_usb0CoreRstn(r32, v)   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_perifStickyResetN_usb0CoreRstn(r16)     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_perifStickyResetN_usb0CoreRstn(r16, v)   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_perifStickyResetN_usb0MahbRstn(r32)     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_perifStickyResetN_usb0MahbRstn(r32, v)   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_perifStickyResetN_usb0MahbRstn(r16)     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_perifStickyResetN_usb0MahbRstn(r16, v)   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_perifStickyResetN_usb3PhyRstn(r32)      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_perifStickyResetN_usb3PhyRstn(r32, v)    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_perifStickyResetN_usb3PhyRstn(r16)      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_perifStickyResetN_usb3PhyRstn(r16, v)    _BFSET_(r16, 3, 3, v)

    #define     w32Gbl_perifStickyResetN                       {\
	    UNSG32 uperifStickyResetN_usb0PhyRstn              :  1;\
	    UNSG32 uperifStickyResetN_usb0CoreRstn             :  1;\
	    UNSG32 uperifStickyResetN_usb0MahbRstn             :  1;\
	    UNSG32 uperifStickyResetN_usb3PhyRstn              :  1;\
	    UNSG32 RSVDx688_b4                                 : 28;\
	}
    union { UNSG32 u32Gbl_perifStickyResetN;
	    struct w32Gbl_perifStickyResetN;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_apbPerifResetTrigger_uart0SyncReset(r32) _BFGET_(r32, 0, 0)
    #define   SET32Gbl_apbPerifResetTrigger_uart0SyncReset(r32, v) _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_apbPerifResetTrigger_uart0SyncReset(r16) _BFGET_(r16, 0, 0)
    #define   SET16Gbl_apbPerifResetTrigger_uart0SyncReset(r16, v) _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_apbPerifResetTrigger_uart1SyncReset(r32) _BFGET_(r32, 1, 1)
    #define   SET32Gbl_apbPerifResetTrigger_uart1SyncReset(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_apbPerifResetTrigger_uart1SyncReset(r16) _BFGET_(r16, 1, 1)
    #define   SET16Gbl_apbPerifResetTrigger_uart1SyncReset(r16, v) _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_apbPerifResetTrigger_i2c0SyncReset(r32) _BFGET_(r32, 2, 2)
    #define   SET32Gbl_apbPerifResetTrigger_i2c0SyncReset(r32, v) _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_apbPerifResetTrigger_i2c0SyncReset(r16) _BFGET_(r16, 2, 2)
    #define   SET16Gbl_apbPerifResetTrigger_i2c0SyncReset(r16, v) _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_apbPerifResetTrigger_i2c1SyncReset(r32) _BFGET_(r32, 3, 3)
    #define   SET32Gbl_apbPerifResetTrigger_i2c1SyncReset(r32, v) _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_apbPerifResetTrigger_i2c1SyncReset(r16) _BFGET_(r16, 3, 3)
    #define   SET16Gbl_apbPerifResetTrigger_i2c1SyncReset(r16, v) _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_apbPerifResetTrigger_i2c2SyncReset(r32) _BFGET_(r32, 4, 4)
    #define   SET32Gbl_apbPerifResetTrigger_i2c2SyncReset(r32, v) _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_apbPerifResetTrigger_i2c2SyncReset(r16) _BFGET_(r16, 4, 4)
    #define   SET16Gbl_apbPerifResetTrigger_i2c2SyncReset(r16, v) _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_apbPerifResetTrigger_i2c3SyncReset(r32) _BFGET_(r32, 5, 5)
    #define   SET32Gbl_apbPerifResetTrigger_i2c3SyncReset(r32, v) _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_apbPerifResetTrigger_i2c3SyncReset(r16) _BFGET_(r16, 5, 5)
    #define   SET16Gbl_apbPerifResetTrigger_i2c3SyncReset(r16, v) _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_apbPerifResetTrigger_spi1SyncReset(r32) _BFGET_(r32, 6, 6)
    #define   SET32Gbl_apbPerifResetTrigger_spi1SyncReset(r32, v) _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_apbPerifResetTrigger_spi1SyncReset(r16) _BFGET_(r16, 6, 6)
    #define   SET16Gbl_apbPerifResetTrigger_spi1SyncReset(r16, v) _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_apbPerifResetTrigger_spi2SyncReset(r32) _BFGET_(r32, 7, 7)
    #define   SET32Gbl_apbPerifResetTrigger_spi2SyncReset(r32, v) _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_apbPerifResetTrigger_spi2SyncReset(r16) _BFGET_(r16, 7, 7)
    #define   SET16Gbl_apbPerifResetTrigger_spi2SyncReset(r16, v) _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_apbPerifResetTrigger_timer0SyncReset(r32) _BFGET_(r32, 8, 8)
    #define   SET32Gbl_apbPerifResetTrigger_timer0SyncReset(r32, v) _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_apbPerifResetTrigger_timer0SyncReset(r16) _BFGET_(r16, 8, 8)
    #define   SET16Gbl_apbPerifResetTrigger_timer0SyncReset(r16, v) _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_apbPerifResetTrigger_timer1SyncReset(r32) _BFGET_(r32, 9, 9)
    #define   SET32Gbl_apbPerifResetTrigger_timer1SyncReset(r32, v) _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_apbPerifResetTrigger_timer1SyncReset(r16) _BFGET_(r16, 9, 9)
    #define   SET16Gbl_apbPerifResetTrigger_timer1SyncReset(r16, v) _BFSET_(r16, 9, 9, v)

    #define   GET32Gbl_apbPerifResetTrigger_wdt0SyncReset(r32) _BFGET_(r32, 10, 10)
    #define   SET32Gbl_apbPerifResetTrigger_wdt0SyncReset(r32, v) _BFSET_(r32, 10, 10, v)
    #define   GET16Gbl_apbPerifResetTrigger_wdt0SyncReset(r16) _BFGET_(r16, 10, 10)
    #define   SET16Gbl_apbPerifResetTrigger_wdt0SyncReset(r16, v) _BFSET_(r16, 10, 10, v)

    #define   GET32Gbl_apbPerifResetTrigger_wdt1SyncReset(r32) _BFGET_(r32, 11, 11)
    #define   SET32Gbl_apbPerifResetTrigger_wdt1SyncReset(r32, v) _BFSET_(r32, 11, 11, v)
    #define   GET16Gbl_apbPerifResetTrigger_wdt1SyncReset(r16) _BFGET_(r16, 11, 11)
    #define   SET16Gbl_apbPerifResetTrigger_wdt1SyncReset(r16, v) _BFSET_(r16, 11, 11, v)

    #define   GET32Gbl_apbPerifResetTrigger_wdt2SyncReset(r32) _BFGET_(r32, 12, 12)
    #define   SET32Gbl_apbPerifResetTrigger_wdt2SyncReset(r32, v) _BFSET_(r32, 12, 12, v)
    #define   GET16Gbl_apbPerifResetTrigger_wdt2SyncReset(r16) _BFGET_(r16, 12, 12)
    #define   SET16Gbl_apbPerifResetTrigger_wdt2SyncReset(r16, v) _BFSET_(r16, 12, 12, v)

    #define     w32Gbl_apbPerifResetTrigger                    {\
	    UNSG32 uapbPerifResetTrigger_uart0SyncReset        :  1;\
	    UNSG32 uapbPerifResetTrigger_uart1SyncReset        :  1;\
	    UNSG32 uapbPerifResetTrigger_i2c0SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_i2c1SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_i2c2SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_i2c3SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_spi1SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_spi2SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_timer0SyncReset       :  1;\
	    UNSG32 uapbPerifResetTrigger_timer1SyncReset       :  1;\
	    UNSG32 uapbPerifResetTrigger_wdt0SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_wdt1SyncReset         :  1;\
	    UNSG32 uapbPerifResetTrigger_wdt2SyncReset         :  1;\
	    UNSG32 RSVDx68C_b13                                : 19;\
	}
    union { UNSG32 u32Gbl_apbPerifResetTrigger;
	    struct w32Gbl_apbPerifResetTrigger;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_apbPerifResetStatus_uart0SyncResetStatus(r32) _BFGET_(r32, 0, 0)
    #define   SET32Gbl_apbPerifResetStatus_uart0SyncResetStatus(r32, v) _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_apbPerifResetStatus_uart0SyncResetStatus(r16) _BFGET_(r16, 0, 0)
    #define   SET16Gbl_apbPerifResetStatus_uart0SyncResetStatus(r16, v) _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_apbPerifResetStatus_uart1SyncResetStatus(r32) _BFGET_(r32, 1, 1)
    #define   SET32Gbl_apbPerifResetStatus_uart1SyncResetStatus(r32, v) _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_apbPerifResetStatus_uart1SyncResetStatus(r16) _BFGET_(r16, 1, 1)
    #define   SET16Gbl_apbPerifResetStatus_uart1SyncResetStatus(r16, v) _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r32) _BFGET_(r32, 2, 2)
    #define   SET32Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r32, v) _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r16) _BFGET_(r16, 2, 2)
    #define   SET16Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r16, v) _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r32) _BFGET_(r32, 3, 3)
    #define   SET32Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r32, v) _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r16) _BFGET_(r16, 3, 3)
    #define   SET16Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r16, v) _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r32) _BFGET_(r32, 4, 4)
    #define   SET32Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r32, v) _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r16) _BFGET_(r16, 4, 4)
    #define   SET16Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r16, v) _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_apbPerifResetStatus_i2c3SyncResetStatus(r32) _BFGET_(r32, 5, 5)
    #define   SET32Gbl_apbPerifResetStatus_i2c3SyncResetStatus(r32, v) _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_apbPerifResetStatus_i2c3SyncResetStatus(r16) _BFGET_(r16, 5, 5)
    #define   SET16Gbl_apbPerifResetStatus_i2c3SyncResetStatus(r16, v) _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_apbPerifResetStatus_spi1SyncResetStatus(r32) _BFGET_(r32, 6, 6)
    #define   SET32Gbl_apbPerifResetStatus_spi1SyncResetStatus(r32, v) _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_apbPerifResetStatus_spi1SyncResetStatus(r16) _BFGET_(r16, 6, 6)
    #define   SET16Gbl_apbPerifResetStatus_spi1SyncResetStatus(r16, v) _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_apbPerifResetStatus_spi2SyncResetStatus(r32) _BFGET_(r32, 7, 7)
    #define   SET32Gbl_apbPerifResetStatus_spi2SyncResetStatus(r32, v) _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_apbPerifResetStatus_spi2SyncResetStatus(r16) _BFGET_(r16, 7, 7)
    #define   SET16Gbl_apbPerifResetStatus_spi2SyncResetStatus(r16, v) _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_apbPerifResetStatus_timer0SyncResetStatus(r32) _BFGET_(r32, 8, 8)
    #define   SET32Gbl_apbPerifResetStatus_timer0SyncResetStatus(r32, v) _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_apbPerifResetStatus_timer0SyncResetStatus(r16) _BFGET_(r16, 8, 8)
    #define   SET16Gbl_apbPerifResetStatus_timer0SyncResetStatus(r16, v) _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_apbPerifResetStatus_timer1SyncResetStatus(r32) _BFGET_(r32, 9, 9)
    #define   SET32Gbl_apbPerifResetStatus_timer1SyncResetStatus(r32, v) _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_apbPerifResetStatus_timer1SyncResetStatus(r16) _BFGET_(r16, 9, 9)
    #define   SET16Gbl_apbPerifResetStatus_timer1SyncResetStatus(r16, v) _BFSET_(r16, 9, 9, v)

    #define   GET32Gbl_apbPerifResetStatus_wdt0SyncResetStatus(r32) _BFGET_(r32, 10, 10)
    #define   SET32Gbl_apbPerifResetStatus_wdt0SyncResetStatus(r32, v) _BFSET_(r32, 10, 10, v)
    #define   GET16Gbl_apbPerifResetStatus_wdt0SyncResetStatus(r16) _BFGET_(r16, 10, 10)
    #define   SET16Gbl_apbPerifResetStatus_wdt0SyncResetStatus(r16, v) _BFSET_(r16, 10, 10, v)

    #define   GET32Gbl_apbPerifResetStatus_wdt1SyncResetStatus(r32) _BFGET_(r32, 11, 11)
    #define   SET32Gbl_apbPerifResetStatus_wdt1SyncResetStatus(r32, v) _BFSET_(r32, 11, 11, v)
    #define   GET16Gbl_apbPerifResetStatus_wdt1SyncResetStatus(r16) _BFGET_(r16, 11, 11)
    #define   SET16Gbl_apbPerifResetStatus_wdt1SyncResetStatus(r16, v) _BFSET_(r16, 11, 11, v)

    #define   GET32Gbl_apbPerifResetStatus_wdt2SyncResetStatus(r32) _BFGET_(r32, 12, 12)
    #define   SET32Gbl_apbPerifResetStatus_wdt2SyncResetStatus(r32, v) _BFSET_(r32, 12, 12, v)
    #define   GET16Gbl_apbPerifResetStatus_wdt2SyncResetStatus(r16) _BFGET_(r16, 12, 12)
    #define   SET16Gbl_apbPerifResetStatus_wdt2SyncResetStatus(r16, v) _BFSET_(r16, 12, 12, v)

    #define     w32Gbl_apbPerifResetStatus                     {\
	    UNSG32 uapbPerifResetStatus_uart0SyncResetStatus   :  1;\
	    UNSG32 uapbPerifResetStatus_uart1SyncResetStatus   :  1;\
	    UNSG32 uapbPerifResetStatus_i2c0SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_i2c1SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_i2c2SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_i2c3SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_spi1SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_spi2SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_timer0SyncResetStatus  :  1;\
	    UNSG32 uapbPerifResetStatus_timer1SyncResetStatus  :  1;\
	    UNSG32 uapbPerifResetStatus_wdt0SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_wdt1SyncResetStatus    :  1;\
	    UNSG32 uapbPerifResetStatus_wdt2SyncResetStatus    :  1;\
	    UNSG32 RSVDx690_b13                                : 19;\
	}
    union { UNSG32 u32Gbl_apbPerifResetStatus;
	    struct w32Gbl_apbPerifResetStatus;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_topStickyResetN_gpuCoreRstn(r32)        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_topStickyResetN_gpuCoreRstn(r32, v)      _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_topStickyResetN_gpuCoreRstn(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_topStickyResetN_gpuCoreRstn(r16, v)      _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_topStickyResetN                         {\
	    UNSG32 utopStickyResetN_gpuCoreRstn                :  1;\
	    UNSG32 RSVDx694_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_topStickyResetN;
	    struct w32Gbl_topStickyResetN;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx698[104];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_clkEnable_usb0CoreClkEn(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_clkEnable_usb0CoreClkEn(r32, v)          _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_clkEnable_usb0CoreClkEn(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_clkEnable_usb0CoreClkEn(r16, v)          _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_clkEnable_sdioSysClkEn(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_clkEnable_sdioSysClkEn(r32, v)           _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_clkEnable_sdioSysClkEn(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_clkEnable_sdioSysClkEn(r16, v)           _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_clkEnable_emmcSysClkEn(r32)             _BFGET_(r32, 2, 2)
    #define   SET32Gbl_clkEnable_emmcSysClkEn(r32, v)           _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_clkEnable_emmcSysClkEn(r16)             _BFGET_(r16, 2, 2)
    #define   SET16Gbl_clkEnable_emmcSysClkEn(r16, v)           _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_clkEnable_pBridgeCoreClkEn(r32)         _BFGET_(r32, 3, 3)
    #define   SET32Gbl_clkEnable_pBridgeCoreClkEn(r32, v)       _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_clkEnable_pBridgeCoreClkEn(r16)         _BFGET_(r16, 3, 3)
    #define   SET16Gbl_clkEnable_pBridgeCoreClkEn(r16, v)       _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_clkEnable_gpuAxiClkEn(r32)              _BFGET_(r32, 4, 4)
    #define   SET32Gbl_clkEnable_gpuAxiClkEn(r32, v)            _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_clkEnable_gpuAxiClkEn(r16)              _BFGET_(r16, 4, 4)
    #define   SET16Gbl_clkEnable_gpuAxiClkEn(r16, v)            _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_clkEnable_gethRgmiiSysClkEn(r32)        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_clkEnable_gethRgmiiSysClkEn(r32, v)      _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_clkEnable_gethRgmiiSysClkEn(r16)        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_clkEnable_gethRgmiiSysClkEn(r16, v)      _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_clkEnable_nfcSysClkEn(r32)              _BFGET_(r32, 6, 6)
    #define   SET32Gbl_clkEnable_nfcSysClkEn(r32, v)            _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_clkEnable_nfcSysClkEn(r16)              _BFGET_(r16, 6, 6)
    #define   SET16Gbl_clkEnable_nfcSysClkEn(r16, v)            _BFSET_(r16, 6, 6, v)

    #define     w32Gbl_clkEnable                               {\
	    UNSG32 uclkEnable_usb0CoreClkEn                    :  1;\
	    UNSG32 uclkEnable_sdioSysClkEn                     :  1;\
	    UNSG32 uclkEnable_emmcSysClkEn                     :  1;\
	    UNSG32 uclkEnable_pBridgeCoreClkEn                 :  1;\
	    UNSG32 uclkEnable_gpuAxiClkEn                      :  1;\
	    UNSG32 uclkEnable_gethRgmiiSysClkEn                :  1;\
	    UNSG32 uclkEnable_nfcSysClkEn                      :  1;\
	    UNSG32 RSVDx700_b7                                 : 25;\
	}
    union { UNSG32 u32Gbl_clkEnable;
	    struct w32Gbl_clkEnable;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx704[12];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ClkSwitch_sysPLL_0SWBypass(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ClkSwitch_sysPLL_0SWBypass(r32, v)       _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_ClkSwitch_sysPLL_0SWBypass(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ClkSwitch_sysPLL_0SWBypass(r16, v)       _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_ClkSwitch_sysPLL_1SWBypass(r32)         _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ClkSwitch_sysPLL_1SWBypass(r32, v)       _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_ClkSwitch_sysPLL_1SWBypass(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ClkSwitch_sysPLL_1SWBypass(r16, v)       _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_ClkSwitch_memPLLSWBypass(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ClkSwitch_memPLLSWBypass(r32, v)         _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_ClkSwitch_memPLLSWBypass(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ClkSwitch_memPLLSWBypass(r16, v)         _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_ClkSwitch_cpuPLLSWBypass(r32)           _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ClkSwitch_cpuPLLSWBypass(r32, v)         _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_ClkSwitch_cpuPLLSWBypass(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ClkSwitch_cpuPLLSWBypass(r16, v)         _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_ClkSwitch_aPLL_0SWBypass(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ClkSwitch_aPLL_0SWBypass(r32, v)         _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_ClkSwitch_aPLL_0SWBypass(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ClkSwitch_aPLL_0SWBypass(r16, v)         _BFSET_(r16, 4, 4, v)

    #define     w32Gbl_ClkSwitch                               {\
	    UNSG32 uClkSwitch_sysPLL_0SWBypass                 :  1;\
	    UNSG32 uClkSwitch_sysPLL_1SWBypass                 :  1;\
	    UNSG32 uClkSwitch_memPLLSWBypass                   :  1;\
	    UNSG32 uClkSwitch_cpuPLLSWBypass                   :  1;\
	    UNSG32 uClkSwitch_aPLL_0SWBypass                   :  1;\
	    UNSG32 RSVDx710_b5                                 : 27;\
	}
    union { UNSG32 u32Gbl_ClkSwitch;
	    struct w32Gbl_ClkSwitch;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx714[12];
    ///////////////////////////////////////////////////////////
	SIE_clkD2                                        ie_cpufastRefClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD2                                        ie_memfastRefClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8                                        ie_cfgClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD12                                       ie_atbClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8                                        ie_apbCoreClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk480mGroup0;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk480mGroup1;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk480mGroup2;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup0;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup1;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup2;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup3;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup4;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_perifTestClk125mGroup0;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_perifTestClk250mGroup0;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_perifTestClk500mGroup0;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_perifTestClk200mGroup0;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_perifTestClk200mGroup1;
    ///////////////////////////////////////////////////////////
	SIE_clkD4                                        ie_emmcClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8_ENOFF                                  ie_sd0Clk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4_ENOFF                                  ie_gethRgmiiClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD12_ENOFF                                 ie_usb2TestClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD2                                        ie_usb3CoreClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8                                        ie_nfcEccClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8                                        ie_nfcCoreClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8                                        ie_bcmClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4_ENOFF                                  ie_gpuClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4                                        ie_sysClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4_ENOFF                                  ie_aioSysClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4                                        ie_perifSysClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4_ENOFF                                  ie_avioSysClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD8                                        ie_avSysClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4_ENOFF                                  ie_lcdc1ScanClk;
    ///////////////////////////////////////////////////////////
	SIE_clkD4_ENOFF                                  ie_lcdc2ScanClk;
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx7A8[344];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SECURE_SCAN_EN_SET(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SECURE_SCAN_EN_SET(r32, v)               _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SECURE_SCAN_EN_SET(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SECURE_SCAN_EN_SET(r16, v)               _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SECURE_SCAN_EN_drcg(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SECURE_SCAN_EN_drcg(r32, v)              _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SECURE_SCAN_EN_drcg(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SECURE_SCAN_EN_drcg(r16, v)              _BFSET_(r16, 1, 1, v)

    #define     w32Gbl_SECURE_SCAN_EN                          {\
	    UNSG32 uSECURE_SCAN_EN_SET                         :  1;\
	    UNSG32 uSECURE_SCAN_EN_drcg                        :  1;\
	    UNSG32 RSVDx900_b2                                 : 30;\
	}
    union { UNSG32 u32Gbl_SECURE_SCAN_EN;
	    struct w32Gbl_SECURE_SCAN_EN;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx904[92];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gic400_ctrl_cfgsdisable(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gic400_ctrl_cfgsdisable(r32, v)          _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_gic400_ctrl_cfgsdisable(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gic400_ctrl_cfgsdisable(r16, v)          _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_gic400_ctrl                             {\
	    UNSG32 ugic400_ctrl_cfgsdisable                    :  1;\
	    UNSG32 RSVDx960_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_gic400_ctrl;
	    struct w32Gbl_gic400_ctrl;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx964[12];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_0_timer_enable(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GFX_CTRL_0_timer_enable(r32, v)          _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GFX_CTRL_0_timer_enable(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GFX_CTRL_0_timer_enable(r16, v)          _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_GFX_CTRL_0                              {\
	    UNSG32 uGFX_CTRL_0_timer_enable                    :  1;\
	    UNSG32 RSVDx970_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_GFX_CTRL_0;
	    struct w32Gbl_GFX_CTRL_0;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_1_timer_load(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GFX_CTRL_1_timer_load(r32, v)            _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GFX_CTRL_1_timer_load(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GFX_CTRL_1_timer_load(r16, v)            _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_GFX_CTRL_1_timer_halt(r32)              _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GFX_CTRL_1_timer_halt(r32, v)            _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_GFX_CTRL_1_timer_halt(r16)              _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GFX_CTRL_1_timer_halt(r16, v)            _BFSET_(r16, 1, 1, v)

    #define     w32Gbl_GFX_CTRL_1                              {\
	    UNSG32 uGFX_CTRL_1_timer_load                      :  1;\
	    UNSG32 uGFX_CTRL_1_timer_halt                      :  1;\
	    UNSG32 RSVDx974_b2                                 : 30;\
	}
    union { UNSG32 u32Gbl_GFX_CTRL_1;
	    struct w32Gbl_GFX_CTRL_1;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_2_timer_value_lsb(r32)         _BFGET_(r32, 31, 0)
    #define   SET32Gbl_GFX_CTRL_2_timer_value_lsb(r32, v)       _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_GFX_CTRL_2                              {\
	    UNSG32 uGFX_CTRL_2_timer_value_lsb                 : 32;\
	}
    union { UNSG32 u32Gbl_GFX_CTRL_2;
	    struct w32Gbl_GFX_CTRL_2;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_3_timer_value_msb(r32)         _BFGET_(r32, 31, 0)
    #define   SET32Gbl_GFX_CTRL_3_timer_value_msb(r32, v)       _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_GFX_CTRL_3                              {\
	    UNSG32 uGFX_CTRL_3_timer_value_msb                 : 32;\
	}
    union { UNSG32 u32Gbl_GFX_CTRL_3;
	    struct w32Gbl_GFX_CTRL_3;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb(r32) _BFGET_(r32, 31, 0)
    #define   SET32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb(r32, v) _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_GFX_TIMER_VALUE                         {\
	    UNSG32 uGFX_TIMER_VALUE_timer_binary_value_lsb     : 32;\
	}
    union { UNSG32 u32Gbl_GFX_TIMER_VALUE;
	    struct w32Gbl_GFX_TIMER_VALUE;
	  };
    #define   GET32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb(r32) _BFGET_(r32, 31, 0)
    #define   SET32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb(r32, v) _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_GFX_TIMER_VALUE1                        {\
	    UNSG32 uGFX_TIMER_VALUE_timer_binary_value_msb     : 32;\
	}
    union { UNSG32 u32Gbl_GFX_TIMER_VALUE1;
	    struct w32Gbl_GFX_TIMER_VALUE1;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx988[4];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_STATUS_gfx3d_idle(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GFX_STATUS_gfx3d_idle(r32, v)            _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GFX_STATUS_gfx3d_idle(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GFX_STATUS_gfx3d_idle(r16, v)            _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_GFX_STATUS                              {\
	    UNSG32 uGFX_STATUS_gfx3d_idle                      :  1;\
	    UNSG32 RSVDx98C_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_GFX_STATUS;
	    struct w32Gbl_GFX_STATUS;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USBOTG_REFCLK_CTRL0_divval(r32)         _BFGET_(r32, 31, 0)
    #define   SET32Gbl_USBOTG_REFCLK_CTRL0_divval(r32, v)       _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_USBOTG_REFCLK_CTRL0                     {\
	    UNSG32 uUSBOTG_REFCLK_CTRL0_divval                 : 32;\
	}
    union { UNSG32 u32Gbl_USBOTG_REFCLK_CTRL0;
	    struct w32Gbl_USBOTG_REFCLK_CTRL0;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USBOTG_REFCLK_CTRL1_lowcnt(r32)         _BFGET_(r32, 31, 0)
    #define   SET32Gbl_USBOTG_REFCLK_CTRL1_lowcnt(r32, v)       _BFSET_(r32, 31, 0, v)

    #define     w32Gbl_USBOTG_REFCLK_CTRL1                     {\
	    UNSG32 uUSBOTG_REFCLK_CTRL1_lowcnt                 : 32;\
	}
    union { UNSG32 u32Gbl_USBOTG_REFCLK_CTRL1;
	    struct w32Gbl_USBOTG_REFCLK_CTRL1;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx998[56];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel(r32)       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel(r32, v)     _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_PORT_CTRL_i2s2_mclk_sel(r16, v)     _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_I2S2_PORT_CTRL                          {\
	    UNSG32 uI2S2_PORT_CTRL_i2s2_mclk_sel               :  1;\
	    UNSG32 RSVDx9D0_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_I2S2_PORT_CTRL;
	    struct w32Gbl_I2S2_PORT_CTRL;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD_IO_CTRL_MS(r32)                    _BFGET_(r32, 1, 0)
    #define   SET32Gbl_LCDD_IO_CTRL_MS(r32, v)                  _BFSET_(r32, 1, 0, v)
    #define   GET16Gbl_LCDD_IO_CTRL_MS(r16)                    _BFGET_(r16, 1, 0)
    #define   SET16Gbl_LCDD_IO_CTRL_MS(r16, v)                  _BFSET_(r16, 1, 0, v)

    #define     w32Gbl_LCDD_IO_CTRL                            {\
	    UNSG32 uLCDD_IO_CTRL_MS                            :  2;\
	    UNSG32 RSVDx9D4_b2                                 : 30;\
	}
    union { UNSG32 u32Gbl_LCDD_IO_CTRL;
	    struct w32Gbl_LCDD_IO_CTRL;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx9D8[8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_POR_EN_status_POR_EN(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_POR_EN_status_POR_EN(r32, v)             _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_POR_EN_status_POR_EN(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_POR_EN_status_POR_EN(r16, v)             _BFSET_(r16, 0, 0, v)

    #define     w32Gbl_POR_EN_status                           {\
	    UNSG32 uPOR_EN_status_POR_EN                       :  1;\
	    UNSG32 RSVDx9E0_b1                                 : 31;\
	}
    union { UNSG32 u32Gbl_POR_EN_status;
	    struct w32Gbl_POR_EN_status;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_POR_EN_OVRD_POR_EN_OVRD_EN(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_POR_EN_OVRD_POR_EN_OVRD_EN(r32, v)       _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_POR_EN_OVRD_POR_EN_OVRD_EN(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_POR_EN_OVRD_POR_EN_OVRD_EN(r16, v)       _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL(r32)        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL(r32, v)      _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL(r16)        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_POR_EN_OVRD_POR_EN_OVRD_VAL(r16, v)      _BFSET_(r16, 1, 1, v)

    #define     w32Gbl_POR_EN_OVRD                             {\
	    UNSG32 uPOR_EN_OVRD_POR_EN_OVRD_EN                 :  1;\
	    UNSG32 uPOR_EN_OVRD_POR_EN_OVRD_VAL                :  1;\
	    UNSG32 RSVDx9E4_b2                                 : 30;\
	}
    union { UNSG32 u32Gbl_POR_EN_OVRD;
	    struct w32Gbl_POR_EN_OVRD;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx9E8[8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_POR_status_POR_VDDIO_SOC(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_POR_status_POR_VDDIO_SOC(r32, v)         _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_POR_status_POR_VDDIO_SOC(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_POR_status_POR_VDDIO_SOC(r16, v)         _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_POR_status_POR_VDDIO3P3_SOC(r32)        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_POR_status_POR_VDDIO3P3_SOC(r32, v)      _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_POR_status_POR_VDDIO3P3_SOC(r16)        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_POR_status_POR_VDDIO3P3_SOC(r16, v)      _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_POR_status_POR_VDD_CPU(r32)             _BFGET_(r32, 2, 2)
    #define   SET32Gbl_POR_status_POR_VDD_CPU(r32, v)           _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_POR_status_POR_VDD_CPU(r16)             _BFGET_(r16, 2, 2)
    #define   SET16Gbl_POR_status_POR_VDD_CPU(r16, v)           _BFSET_(r16, 2, 2, v)

    #define     w32Gbl_POR_status                              {\
	    UNSG32 uPOR_status_POR_VDDIO_SOC                   :  1;\
	    UNSG32 uPOR_status_POR_VDDIO3P3_SOC                :  1;\
	    UNSG32 uPOR_status_POR_VDD_CPU                     :  1;\
	    UNSG32 RSVDx9F0_b3                                 : 29;\
	}
    union { UNSG32 u32Gbl_POR_status;
	    struct w32Gbl_POR_status;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_POR_CTL_SOC_VDD1P8V_BYPASS(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_POR_CTL_SOC_VDD1P8V_BYPASS(r32, v)       _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_POR_CTL_SOC_VDD1P8V_BYPASS(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_POR_CTL_SOC_VDD1P8V_BYPASS(r16, v)       _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_POR_CTL_POR_SOC_IO_1P8V_PD(r32)         _BFGET_(r32, 1, 1)
    #define   SET32Gbl_POR_CTL_POR_SOC_IO_1P8V_PD(r32, v)       _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_POR_CTL_POR_SOC_IO_1P8V_PD(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_POR_CTL_POR_SOC_IO_1P8V_PD(r16, v)       _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH(r32)        _BFGET_(r32, 3, 2)
    #define   SET32Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH(r32, v)      _BFSET_(r32, 3, 2, v)
    #define   GET16Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH(r16)        _BFGET_(r16, 3, 2)
    #define   SET16Gbl_POR_CTL_POR_SOC_IO_1P8V_VTH(r16, v)      _BFSET_(r16, 3, 2, v)

    #define   GET32Gbl_POR_CTL_SOC_VDD3P3V_BYPASS(r32)         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_POR_CTL_SOC_VDD3P3V_BYPASS(r32, v)       _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_POR_CTL_SOC_VDD3P3V_BYPASS(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_POR_CTL_SOC_VDD3P3V_BYPASS(r16, v)       _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_POR_CTL_POR_SOC_IO_3P3V_PD(r32)         _BFGET_(r32, 5, 5)
    #define   SET32Gbl_POR_CTL_POR_SOC_IO_3P3V_PD(r32, v)       _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_POR_CTL_POR_SOC_IO_3P3V_PD(r16)         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_POR_CTL_POR_SOC_IO_3P3V_PD(r16, v)       _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH(r32)        _BFGET_(r32, 7, 6)
    #define   SET32Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH(r32, v)      _BFSET_(r32, 7, 6, v)
    #define   GET16Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH(r16)        _BFGET_(r16, 7, 6)
    #define   SET16Gbl_POR_CTL_POR_SOC_IO_3P3V_VTH(r16, v)      _BFSET_(r16, 7, 6, v)

    #define     w32Gbl_POR_CTL                                 {\
	    UNSG32 uPOR_CTL_SOC_VDD1P8V_BYPASS                 :  1;\
	    UNSG32 uPOR_CTL_POR_SOC_IO_1P8V_PD                 :  1;\
	    UNSG32 uPOR_CTL_POR_SOC_IO_1P8V_VTH                :  2;\
	    UNSG32 uPOR_CTL_SOC_VDD3P3V_BYPASS                 :  1;\
	    UNSG32 uPOR_CTL_POR_SOC_IO_3P3V_PD                 :  1;\
	    UNSG32 uPOR_CTL_POR_SOC_IO_3P3V_VTH                :  2;\
	    UNSG32 RSVDx9F4_b8                                 : 24;\
	}
    union { UNSG32 u32Gbl_POR_CTL;
	    struct w32Gbl_POR_CTL;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx9F8[8];
    ///////////////////////////////////////////////////////////
	SIE_PERIF                                        ie_PERIF;
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDxA54[172];
    ///////////////////////////////////////////////////////////
	SIE_PLL_COUNTER                                  ie_PLL_COUNTER;
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDxB0C[29940];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_pinMuxCntlBus_TW0_SCL(r32)              _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_TW0_SCL(r32, v)            _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_TW0_SCL(r16)              _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_TW0_SCL(r16, v)            _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_TW0_SDA(r32)              _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_TW0_SDA(r32, v)            _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_TW0_SDA(r16)              _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_TW0_SDA(r16, v)            _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_TW1_SCL(r32)              _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_TW1_SCL(r32, v)            _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_TW1_SCL(r16)              _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_TW1_SCL(r16, v)            _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_TW1_SDA(r32)              _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_TW1_SDA(r32, v)            _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_TW1_SDA(r16)              _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_TW1_SDA(r16, v)            _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_TMS(r32)                  _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_TMS(r32, v)                _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_TMS(r16)                  _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_TMS(r16, v)                _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_TDI(r32)                  _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_TDI(r32, v)                _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_TDO(r32)                  _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_TDO(r32, v)                _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_TDO(r16)                  _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_TDO(r16, v)                _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS0n(r32)            _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS0n(r32, v)          _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS0n(r16)            _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS0n(r16, v)          _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS1n(r32)            _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS1n(r32, v)          _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS1n(r16)            _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS1n(r16, v)          _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS2n(r32)            _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS2n(r32, v)          _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS2n(r16)            _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS2n(r16, v)          _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus                           {\
	    UNSG32 upinMuxCntlBus_TW0_SCL                      :  3;\
	    UNSG32 upinMuxCntlBus_TW0_SDA                      :  3;\
	    UNSG32 upinMuxCntlBus_TW1_SCL                      :  3;\
	    UNSG32 upinMuxCntlBus_TW1_SDA                      :  3;\
	    UNSG32 upinMuxCntlBus_TMS                          :  3;\
	    UNSG32 upinMuxCntlBus_TDI                          :  3;\
	    UNSG32 upinMuxCntlBus_TDO                          :  3;\
	    UNSG32 upinMuxCntlBus_SPI1_SS0n                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI1_SS1n                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI1_SS2n                    :  3;\
	    UNSG32 RSVDx8000_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus;
	    struct w32Gbl_pinMuxCntlBus;
	  };
    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS3n(r32)            _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS3n(r32, v)          _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS3n(r16)            _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS3n(r16, v)          _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SDO(r32)             _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SDO(r32, v)           _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SDO(r16)             _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SDO(r16, v)           _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SDI(r32)             _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SDI(r32, v)           _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SDI(r16)             _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SDI(r16, v)           _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SCLK(r32)            _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SCLK(r32, v)          _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SCLK(r16)            _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SCLK(r16, v)          _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_TW2_SCL(r32)              _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_TW2_SCL(r32, v)            _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_TW2_SCL(r16)              _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_TW2_SCL(r16, v)            _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_TW2_SDA(r32)              _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_TW2_SDA(r32, v)            _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI2_SS0n(r32)            _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SS0n(r32, v)          _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SS0n(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SS0n(r16, v)          _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI2_SS1n(r32)            _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SS1n(r32, v)          _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SS1n(r16)            _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SS1n(r16, v)          _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI2_SS2n(r32)            _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SS2n(r32, v)          _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SS2n(r16)            _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SS2n(r16, v)          _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI2_SS3n(r32)            _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SS3n(r32, v)          _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SS3n(r16)            _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SS3n(r16, v)          _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus1                          {\
	    UNSG32 upinMuxCntlBus_SPI1_SS3n                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI1_SDO                     :  3;\
	    UNSG32 upinMuxCntlBus_SPI1_SDI                     :  3;\
	    UNSG32 upinMuxCntlBus_SPI1_SCLK                    :  3;\
	    UNSG32 upinMuxCntlBus_TW2_SCL                      :  3;\
	    UNSG32 upinMuxCntlBus_TW2_SDA                      :  3;\
	    UNSG32 upinMuxCntlBus_SPI2_SS0n                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI2_SS1n                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI2_SS2n                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI2_SS3n                    :  3;\
	    UNSG32 RSVDx8004_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus1;
	    struct w32Gbl_pinMuxCntlBus1;
	  };
    #define   GET32Gbl_pinMuxCntlBus_SPI2_SDO(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SDO(r32, v)           _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SDO(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SDO(r16, v)           _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI2_SCLK(r32)            _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SCLK(r32, v)          _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SCLK(r16)            _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SCLK(r16, v)          _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_SPI2_SDI(r32)             _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_SPI2_SDI(r32, v)           _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_SPI2_SDI(r16)             _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_SPI2_SDI(r16, v)           _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_TW3_SCL(r32)              _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_TW3_SCL(r32, v)            _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_TW3_SCL(r16)              _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_TW3_SCL(r16, v)            _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_TW3_SDA(r32)              _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_TW3_SDA(r32, v)            _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_TW3_SDA(r16)              _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_TW3_SDA(r16, v)            _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_URT1_RXD(r32)             _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_URT1_RXD(r32, v)           _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_URT1_TXD(r32)             _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_URT1_TXD(r32, v)           _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_URT1_TXD(r16)             _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_URT1_TXD(r16, v)           _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_PWM0(r32)                 _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_PWM0(r32, v)               _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_PWM0(r16)                 _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_PWM0(r16, v)               _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_PWM1(r32)                 _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_PWM1(r32, v)               _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_PWM1(r16)                 _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_PWM1(r16, v)               _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_PWM2(r32)                 _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_PWM2(r32, v)               _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_PWM2(r16)                 _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_PWM2(r16, v)               _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus2                          {\
	    UNSG32 upinMuxCntlBus_SPI2_SDO                     :  3;\
	    UNSG32 upinMuxCntlBus_SPI2_SCLK                    :  3;\
	    UNSG32 upinMuxCntlBus_SPI2_SDI                     :  3;\
	    UNSG32 upinMuxCntlBus_TW3_SCL                      :  3;\
	    UNSG32 upinMuxCntlBus_TW3_SDA                      :  3;\
	    UNSG32 upinMuxCntlBus_URT1_RXD                     :  3;\
	    UNSG32 upinMuxCntlBus_URT1_TXD                     :  3;\
	    UNSG32 upinMuxCntlBus_PWM0                         :  3;\
	    UNSG32 upinMuxCntlBus_PWM1                         :  3;\
	    UNSG32 upinMuxCntlBus_PWM2                         :  3;\
	    UNSG32 RSVDx8008_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus2;
	    struct w32Gbl_pinMuxCntlBus2;
	  };
    #define   GET32Gbl_pinMuxCntlBus_PWM3(r32)                 _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_PWM3(r32, v)               _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_PWM3(r16)                 _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_PWM3(r16, v)               _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_GPIO_A0(r32)              _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A0(r32, v)            _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A0(r16)              _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A0(r16, v)            _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_GPIO_A1(r32)              _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A1(r32, v)            _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A1(r16)              _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A1(r16, v)            _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_GPIO_A2(r32)              _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A2(r32, v)            _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A2(r16)              _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A2(r16, v)            _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_GPIO_A3(r32)              _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A3(r32, v)            _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A3(r16)              _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A3(r16, v)            _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_USB2_DRV_VBUS(r32)        _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_USB2_DRV_VBUS(r32, v)      _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_SDIO_CDn(r32)             _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_SDIO_CDn(r32, v)           _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_SDIO_CDn(r16)             _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_SDIO_CDn(r16, v)           _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_SDIO_WP(r32)              _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_SDIO_WP(r32, v)            _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_SDIO_WP(r16)              _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_SDIO_WP(r16, v)            _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_NFALE(r32)                _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_NFALE(r32, v)              _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_NFALE(r16)                _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_NFALE(r16, v)              _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_NFLCS(r32)                _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_NFLCS(r32, v)              _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_NFLCS(r16)                _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_NFLCS(r16, v)              _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus3                          {\
	    UNSG32 upinMuxCntlBus_PWM3                         :  3;\
	    UNSG32 upinMuxCntlBus_GPIO_A0                      :  3;\
	    UNSG32 upinMuxCntlBus_GPIO_A1                      :  3;\
	    UNSG32 upinMuxCntlBus_GPIO_A2                      :  3;\
	    UNSG32 upinMuxCntlBus_GPIO_A3                      :  3;\
	    UNSG32 upinMuxCntlBus_USB2_DRV_VBUS                :  3;\
	    UNSG32 upinMuxCntlBus_SDIO_CDn                     :  3;\
	    UNSG32 upinMuxCntlBus_SDIO_WP                      :  3;\
	    UNSG32 upinMuxCntlBus_NFALE                        :  3;\
	    UNSG32 upinMuxCntlBus_NFLCS                        :  3;\
	    UNSG32 RSVDx800C_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus3;
	    struct w32Gbl_pinMuxCntlBus3;
	  };
    #define   GET32Gbl_pinMuxCntlBus_RGMII_CLK_OUT(r32)        _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_RGMII_CLK_OUT(r32, v)      _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMII_CLK_OUT(r16)        _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_RGMII_CLK_OUT(r16, v)      _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIITXC(r32)             _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_RGMIITXC(r32, v)           _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIITXC(r16)             _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_RGMIITXC(r16, v)           _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIITD0(r32)             _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_RGMIITD0(r32, v)           _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIITD0(r16)             _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_RGMIITD0(r16, v)           _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIITD1(r32)             _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_RGMIITD1(r32, v)           _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIITD1(r16)             _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_RGMIITD1(r16, v)           _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIITD2(r32)             _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_RGMIITD2(r32, v)           _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIITD2(r16)             _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_RGMIITD2(r16, v)           _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIITD3(r32)             _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_RGMIITD3(r32, v)           _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIITXCTL(r32)           _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_RGMIITXCTL(r32, v)         _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIITXCTL(r16)           _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_RGMIITXCTL(r16, v)         _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIIRXC(r32)             _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_RGMIIRXC(r32, v)           _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIIRXC(r16)             _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_RGMIIRXC(r16, v)           _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIIRD0(r32)             _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_RGMIIRD0(r32, v)           _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIIRD0(r16)             _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_RGMIIRD0(r16, v)           _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIIRD1(r32)             _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_RGMIIRD1(r32, v)           _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIIRD1(r16)             _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_RGMIIRD1(r16, v)           _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus4                          {\
	    UNSG32 upinMuxCntlBus_RGMII_CLK_OUT                :  3;\
	    UNSG32 upinMuxCntlBus_RGMIITXC                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIITD0                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIITD1                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIITD2                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIITD3                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIITXCTL                   :  3;\
	    UNSG32 upinMuxCntlBus_RGMIIRXC                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIIRD0                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIIRD1                     :  3;\
	    UNSG32 RSVDx8010_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus4;
	    struct w32Gbl_pinMuxCntlBus4;
	  };
    #define   GET32Gbl_pinMuxCntlBus_RGMIIRD2(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_RGMIIRD2(r32, v)           _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIIRD2(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_RGMIIRD2(r16, v)           _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIIRD3(r32)             _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_RGMIIRD3(r32, v)           _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIIRD3(r16)             _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_RGMIIRD3(r16, v)           _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_RGMIIRXCTL(r32)           _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_RGMIIRXCTL(r32, v)         _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_RGMIIRXCTL(r16)           _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_RGMIIRXCTL(r16, v)         _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S1_DO(r32)              _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_I2S1_DO(r32, v)            _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S1_DO(r16)              _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_I2S1_DO(r16, v)            _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S1_DI(r32)              _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_I2S1_DI(r32, v)            _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S1_DI(r16)              _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_I2S1_DI(r16, v)            _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S1_LRCK(r32)            _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_I2S1_LRCK(r32, v)          _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S1_BCLK(r32)            _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_I2S1_BCLK(r32, v)          _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S1_BCLK(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_I2S1_BCLK(r16, v)          _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S1_MCLK(r32)            _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_I2S1_MCLK(r32, v)          _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S1_MCLK(r16)            _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_I2S1_MCLK(r16, v)          _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S2_LRCK(r32)            _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_I2S2_LRCK(r32, v)          _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S2_LRCK(r16)            _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_I2S2_LRCK(r16, v)          _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S2_BCLK(r32)            _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_I2S2_BCLK(r32, v)          _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S2_BCLK(r16)            _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_I2S2_BCLK(r16, v)          _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus5                          {\
	    UNSG32 upinMuxCntlBus_RGMIIRD2                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIIRD3                     :  3;\
	    UNSG32 upinMuxCntlBus_RGMIIRXCTL                   :  3;\
	    UNSG32 upinMuxCntlBus_I2S1_DO                      :  3;\
	    UNSG32 upinMuxCntlBus_I2S1_DI                      :  3;\
	    UNSG32 upinMuxCntlBus_I2S1_LRCK                    :  3;\
	    UNSG32 upinMuxCntlBus_I2S1_BCLK                    :  3;\
	    UNSG32 upinMuxCntlBus_I2S1_MCLK                    :  3;\
	    UNSG32 upinMuxCntlBus_I2S2_LRCK                    :  3;\
	    UNSG32 upinMuxCntlBus_I2S2_BCLK                    :  3;\
	    UNSG32 RSVDx8014_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus5;
	    struct w32Gbl_pinMuxCntlBus5;
	  };
    #define   GET32Gbl_pinMuxCntlBus_I2S2_DO(r32)              _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_I2S2_DO(r32, v)            _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S2_DO(r16)              _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_I2S2_DO(r16, v)            _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S2_DI(r32)              _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_I2S2_DI(r32, v)            _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S2_DI(r16)              _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_I2S2_DI(r16, v)            _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_PDM_CLKIO(r32)            _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_PDM_CLKIO(r32, v)          _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_PDM_CLKIO(r16)            _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_PDM_CLKIO(r16, v)          _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_PDM_DI0(r32)              _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_PDM_DI0(r32, v)            _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_PDM_DI0(r16)              _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_PDM_DI0(r16, v)            _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_PDM_DI1(r32)              _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_PDM_DI1(r32, v)            _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_PDM_DI1(r16)              _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_PDM_DI1(r16, v)            _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S3_DO(r32)              _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_I2S3_DO(r32, v)            _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S3_LRCK(r32)            _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_I2S3_LRCK(r32, v)          _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S3_LRCK(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_I2S3_LRCK(r16, v)          _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S3_BCLK(r32)            _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_I2S3_BCLK(r32, v)          _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S3_BCLK(r16)            _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_I2S3_BCLK(r16, v)          _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_I2S3_DI(r32)              _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_I2S3_DI(r32, v)            _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_I2S3_DI(r16)              _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_I2S3_DI(r16, v)            _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD0(r32)                _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_LCDD0(r32, v)              _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD0(r16)                _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_LCDD0(r16, v)              _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus6                          {\
	    UNSG32 upinMuxCntlBus_I2S2_DO                      :  3;\
	    UNSG32 upinMuxCntlBus_I2S2_DI                      :  3;\
	    UNSG32 upinMuxCntlBus_PDM_CLKIO                    :  3;\
	    UNSG32 upinMuxCntlBus_PDM_DI0                      :  3;\
	    UNSG32 upinMuxCntlBus_PDM_DI1                      :  3;\
	    UNSG32 upinMuxCntlBus_I2S3_DO                      :  3;\
	    UNSG32 upinMuxCntlBus_I2S3_LRCK                    :  3;\
	    UNSG32 upinMuxCntlBus_I2S3_BCLK                    :  3;\
	    UNSG32 upinMuxCntlBus_I2S3_DI                      :  3;\
	    UNSG32 upinMuxCntlBus_LCDD0                        :  3;\
	    UNSG32 RSVDx8018_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus6;
	    struct w32Gbl_pinMuxCntlBus6;
	  };
    #define   GET32Gbl_pinMuxCntlBus_LCDD1(r32)                _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_LCDD1(r32, v)              _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD1(r16)                _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_LCDD1(r16, v)              _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD2(r32)                _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_LCDD2(r32, v)              _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD2(r16)                _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_LCDD2(r16, v)              _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD3(r32)                _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_LCDD3(r32, v)              _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD3(r16)                _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_LCDD3(r16, v)              _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD4(r32)                _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_LCDD4(r32, v)              _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD4(r16)                _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_LCDD4(r16, v)              _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD5(r32)                _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_LCDD5(r32, v)              _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD5(r16)                _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_LCDD5(r16, v)              _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD6(r32)                _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_LCDD6(r32, v)              _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD7(r32)                _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_LCDD7(r32, v)              _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD7(r16)                _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_LCDD7(r16, v)              _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD8(r32)                _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_LCDD8(r32, v)              _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD8(r16)                _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_LCDD8(r16, v)              _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD9(r32)                _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_LCDD9(r32, v)              _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD9(r16)                _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_LCDD9(r16, v)              _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD10(r32)               _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_LCDD10(r32, v)             _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD10(r16)               _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_LCDD10(r16, v)             _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus7                          {\
	    UNSG32 upinMuxCntlBus_LCDD1                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD2                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD3                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD4                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD5                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD6                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD7                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD8                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD9                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDD10                       :  3;\
	    UNSG32 RSVDx801C_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus7;
	    struct w32Gbl_pinMuxCntlBus7;
	  };
    #define   GET32Gbl_pinMuxCntlBus_LCDD11(r32)               _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_LCDD11(r32, v)             _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD11(r16)               _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_LCDD11(r16, v)             _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD12(r32)               _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_LCDD12(r32, v)             _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD12(r16)               _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_LCDD12(r16, v)             _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD13(r32)               _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_LCDD13(r32, v)             _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD13(r16)               _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_LCDD13(r16, v)             _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD14(r32)               _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_LCDD14(r32, v)             _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD14(r16)               _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_LCDD14(r16, v)             _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD15(r32)               _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_LCDD15(r32, v)             _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD15(r16)               _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_LCDD15(r16, v)             _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD16(r32)               _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_LCDD16(r32, v)             _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD17(r32)               _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_LCDD17(r32, v)             _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD17(r16)               _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_LCDD17(r16, v)             _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD18(r32)               _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_LCDD18(r32, v)             _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD18(r16)               _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_LCDD18(r16, v)             _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD19(r32)               _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_LCDD19(r32, v)             _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD19(r16)               _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_LCDD19(r16, v)             _BFSET_(r16, 10, 8, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD20(r32)               _BFGET_(r32, 29, 27)
    #define   SET32Gbl_pinMuxCntlBus_LCDD20(r32, v)             _BFSET_(r32, 29, 27, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD20(r16)               _BFGET_(r16, 13, 11)
    #define   SET16Gbl_pinMuxCntlBus_LCDD20(r16, v)             _BFSET_(r16, 13, 11, v)

    #define     w32Gbl_pinMuxCntlBus8                          {\
	    UNSG32 upinMuxCntlBus_LCDD11                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD12                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD13                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD14                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD15                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD16                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD17                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD18                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD19                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD20                       :  3;\
	    UNSG32 RSVDx8020_b30                               :  2;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus8;
	    struct w32Gbl_pinMuxCntlBus8;
	  };
    #define   GET32Gbl_pinMuxCntlBus_LCDD21(r32)               _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_LCDD21(r32, v)             _BFSET_(r32, 2, 0, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD21(r16)               _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_LCDD21(r16, v)             _BFSET_(r16, 2, 0, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD22(r32)               _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_LCDD22(r32, v)             _BFSET_(r32, 5, 3, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD22(r16)               _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_LCDD22(r16, v)             _BFSET_(r16, 5, 3, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDD23(r32)               _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_LCDD23(r32, v)             _BFSET_(r32, 8, 6, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDD23(r16)               _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_LCDD23(r16, v)             _BFSET_(r16, 8, 6, v)

    #define   GET32Gbl_pinMuxCntlBus_LPCLK(r32)                _BFGET_(r32, 11, 9)
    #define   SET32Gbl_pinMuxCntlBus_LPCLK(r32, v)              _BFSET_(r32, 11, 9, v)
    #define   GET16Gbl_pinMuxCntlBus_LPCLK(r16)                _BFGET_(r16, 11, 9)
    #define   SET16Gbl_pinMuxCntlBus_LPCLK(r16, v)              _BFSET_(r16, 11, 9, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDGPIO0(r32)             _BFGET_(r32, 14, 12)
    #define   SET32Gbl_pinMuxCntlBus_LCDGPIO0(r32, v)           _BFSET_(r32, 14, 12, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDGPIO0(r16)             _BFGET_(r16, 14, 12)
    #define   SET16Gbl_pinMuxCntlBus_LCDGPIO0(r16, v)           _BFSET_(r16, 14, 12, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDGPIO1(r32)             _BFGET_(r32, 17, 15)
    #define   SET32Gbl_pinMuxCntlBus_LCDGPIO1(r32, v)           _BFSET_(r32, 17, 15, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDGPIO2(r32)             _BFGET_(r32, 20, 18)
    #define   SET32Gbl_pinMuxCntlBus_LCDGPIO2(r32, v)           _BFSET_(r32, 20, 18, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDGPIO2(r16)             _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_LCDGPIO2(r16, v)           _BFSET_(r16, 4, 2, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDGPIO3(r32)             _BFGET_(r32, 23, 21)
    #define   SET32Gbl_pinMuxCntlBus_LCDGPIO3(r32, v)           _BFSET_(r32, 23, 21, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDGPIO3(r16)             _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_LCDGPIO3(r16, v)           _BFSET_(r16, 7, 5, v)

    #define   GET32Gbl_pinMuxCntlBus_LCDGPIO4(r32)             _BFGET_(r32, 26, 24)
    #define   SET32Gbl_pinMuxCntlBus_LCDGPIO4(r32, v)           _BFSET_(r32, 26, 24, v)
    #define   GET16Gbl_pinMuxCntlBus_LCDGPIO4(r16)             _BFGET_(r16, 10, 8)
    #define   SET16Gbl_pinMuxCntlBus_LCDGPIO4(r16, v)           _BFSET_(r16, 10, 8, v)

    #define     w32Gbl_pinMuxCntlBus9                          {\
	    UNSG32 upinMuxCntlBus_LCDD21                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD22                       :  3;\
	    UNSG32 upinMuxCntlBus_LCDD23                       :  3;\
	    UNSG32 upinMuxCntlBus_LPCLK                        :  3;\
	    UNSG32 upinMuxCntlBus_LCDGPIO0                     :  3;\
	    UNSG32 upinMuxCntlBus_LCDGPIO1                     :  3;\
	    UNSG32 upinMuxCntlBus_LCDGPIO2                     :  3;\
	    UNSG32 upinMuxCntlBus_LCDGPIO3                     :  3;\
	    UNSG32 upinMuxCntlBus_LCDGPIO4                     :  3;\
	    UNSG32 RSVDx8024_b27                               :  5;\
	}
    union { UNSG32 u32Gbl_pinMuxCntlBus9;
	    struct w32Gbl_pinMuxCntlBus9;
	  };
    ///////////////////////////////////////////////////////////
	     UNSG8 RSVDx8028[2008];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW0_SCLCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW0_SCLCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW0_SCLCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW0_SCLCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW0_SCLCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW0_SCLCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW0_SCLCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW0_SCLCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW0_SCLCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW0_SCLCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW0_SCLCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW0_SCLCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW0_SCLCntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW0_SCLCntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW0_SCLCntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW0_SCLCntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW0_SCLCntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW0_SCLCntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW0_SCLCntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW0_SCLCntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW0_SCLCntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW0_SCLCntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW0_SCLCntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW0_SCLCntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW0_SCLCntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW0_SCLCntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW0_SCLCntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW0_SCLCntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW0_SCLCntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW0_SCLCntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW0_SCLCntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW0_SCLCntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW0_SCLCntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW0_SCLCntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW0_SCLCntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW0_SCLCntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW0_SCLCntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW0_SCLCntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW0_SCLCntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW0_SCLCntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW0_SCLCntl                             {\
	    UNSG32 uTW0_SCLCntl_DS0                            :  1;\
	    UNSG32 uTW0_SCLCntl_DS1                            :  1;\
	    UNSG32 uTW0_SCLCntl_DS2                            :  1;\
	    UNSG32 uTW0_SCLCntl_DS3                            :  1;\
	    UNSG32 uTW0_SCLCntl_IE                             :  1;\
	    UNSG32 uTW0_SCLCntl_PE                             :  1;\
	    UNSG32 uTW0_SCLCntl_PS                             :  1;\
	    UNSG32 uTW0_SCLCntl_SL                             :  1;\
	    UNSG32 uTW0_SCLCntl_SPU                            :  1;\
	    UNSG32 uTW0_SCLCntl_ST                             :  1;\
	    UNSG32 RSVDx8800_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW0_SCLCntl;
	    struct w32Gbl_TW0_SCLCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW0_SDACntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW0_SDACntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW0_SDACntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW0_SDACntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW0_SDACntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW0_SDACntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW0_SDACntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW0_SDACntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW0_SDACntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW0_SDACntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW0_SDACntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW0_SDACntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW0_SDACntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW0_SDACntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW0_SDACntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW0_SDACntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW0_SDACntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW0_SDACntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW0_SDACntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW0_SDACntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW0_SDACntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW0_SDACntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW0_SDACntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW0_SDACntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW0_SDACntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW0_SDACntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW0_SDACntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW0_SDACntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW0_SDACntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW0_SDACntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW0_SDACntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW0_SDACntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW0_SDACntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW0_SDACntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW0_SDACntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW0_SDACntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW0_SDACntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW0_SDACntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW0_SDACntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW0_SDACntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW0_SDACntl                             {\
	    UNSG32 uTW0_SDACntl_DS0                            :  1;\
	    UNSG32 uTW0_SDACntl_DS1                            :  1;\
	    UNSG32 uTW0_SDACntl_DS2                            :  1;\
	    UNSG32 uTW0_SDACntl_DS3                            :  1;\
	    UNSG32 uTW0_SDACntl_IE                             :  1;\
	    UNSG32 uTW0_SDACntl_PE                             :  1;\
	    UNSG32 uTW0_SDACntl_PS                             :  1;\
	    UNSG32 uTW0_SDACntl_SL                             :  1;\
	    UNSG32 uTW0_SDACntl_SPU                            :  1;\
	    UNSG32 uTW0_SDACntl_ST                             :  1;\
	    UNSG32 RSVDx8804_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW0_SDACntl;
	    struct w32Gbl_TW0_SDACntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW1_SCLCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW1_SCLCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW1_SCLCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW1_SCLCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW1_SCLCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW1_SCLCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW1_SCLCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW1_SCLCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW1_SCLCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW1_SCLCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW1_SCLCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW1_SCLCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW1_SCLCntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW1_SCLCntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW1_SCLCntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW1_SCLCntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW1_SCLCntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW1_SCLCntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW1_SCLCntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW1_SCLCntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW1_SCLCntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW1_SCLCntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW1_SCLCntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW1_SCLCntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW1_SCLCntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW1_SCLCntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW1_SCLCntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW1_SCLCntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW1_SCLCntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW1_SCLCntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW1_SCLCntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW1_SCLCntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW1_SCLCntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW1_SCLCntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW1_SCLCntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW1_SCLCntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW1_SCLCntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW1_SCLCntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW1_SCLCntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW1_SCLCntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW1_SCLCntl                             {\
	    UNSG32 uTW1_SCLCntl_DS0                            :  1;\
	    UNSG32 uTW1_SCLCntl_DS1                            :  1;\
	    UNSG32 uTW1_SCLCntl_DS2                            :  1;\
	    UNSG32 uTW1_SCLCntl_DS3                            :  1;\
	    UNSG32 uTW1_SCLCntl_IE                             :  1;\
	    UNSG32 uTW1_SCLCntl_PE                             :  1;\
	    UNSG32 uTW1_SCLCntl_PS                             :  1;\
	    UNSG32 uTW1_SCLCntl_SL                             :  1;\
	    UNSG32 uTW1_SCLCntl_SPU                            :  1;\
	    UNSG32 uTW1_SCLCntl_ST                             :  1;\
	    UNSG32 RSVDx8808_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW1_SCLCntl;
	    struct w32Gbl_TW1_SCLCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW1_SDACntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW1_SDACntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW1_SDACntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW1_SDACntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW1_SDACntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW1_SDACntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW1_SDACntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW1_SDACntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW1_SDACntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW1_SDACntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW1_SDACntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW1_SDACntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW1_SDACntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW1_SDACntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW1_SDACntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW1_SDACntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW1_SDACntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW1_SDACntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW1_SDACntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW1_SDACntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW1_SDACntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW1_SDACntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW1_SDACntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW1_SDACntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW1_SDACntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW1_SDACntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW1_SDACntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW1_SDACntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW1_SDACntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW1_SDACntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW1_SDACntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW1_SDACntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW1_SDACntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW1_SDACntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW1_SDACntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW1_SDACntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW1_SDACntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW1_SDACntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW1_SDACntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW1_SDACntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW1_SDACntl                             {\
	    UNSG32 uTW1_SDACntl_DS0                            :  1;\
	    UNSG32 uTW1_SDACntl_DS1                            :  1;\
	    UNSG32 uTW1_SDACntl_DS2                            :  1;\
	    UNSG32 uTW1_SDACntl_DS3                            :  1;\
	    UNSG32 uTW1_SDACntl_IE                             :  1;\
	    UNSG32 uTW1_SDACntl_PE                             :  1;\
	    UNSG32 uTW1_SDACntl_PS                             :  1;\
	    UNSG32 uTW1_SDACntl_SL                             :  1;\
	    UNSG32 uTW1_SDACntl_SPU                            :  1;\
	    UNSG32 uTW1_SDACntl_ST                             :  1;\
	    UNSG32 RSVDx880C_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW1_SDACntl;
	    struct w32Gbl_TW1_SDACntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FORCE_MUTECntl_PE(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_FORCE_MUTECntl_PE(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_FORCE_MUTECntl_PE(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_FORCE_MUTECntl_PE(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_FORCE_MUTECntl_PS(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_FORCE_MUTECntl_PS(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_FORCE_MUTECntl_PS(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_FORCE_MUTECntl_PS(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_FORCE_MUTECntl_ST(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_FORCE_MUTECntl_ST(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_FORCE_MUTECntl_ST(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_FORCE_MUTECntl_ST(r16, v)                _BFSET_(r16, 2, 2, v)

    #define     w32Gbl_FORCE_MUTECntl                          {\
	    UNSG32 uFORCE_MUTECntl_PE                          :  1;\
	    UNSG32 uFORCE_MUTECntl_PS                          :  1;\
	    UNSG32 uFORCE_MUTECntl_ST                          :  1;\
	    UNSG32 RSVDx8810_b3                                : 29;\
	}
    union { UNSG32 u32Gbl_FORCE_MUTECntl;
	    struct w32Gbl_FORCE_MUTECntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TMSCntl_DS0(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TMSCntl_DS0(r32, v)                      _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TMSCntl_DS0(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TMSCntl_DS0(r16, v)                      _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TMSCntl_DS1(r32)                        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TMSCntl_DS1(r32, v)                      _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TMSCntl_DS1(r16)                        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TMSCntl_DS1(r16, v)                      _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TMSCntl_DS2(r32)                        _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TMSCntl_DS2(r32, v)                      _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TMSCntl_DS2(r16)                        _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TMSCntl_DS2(r16, v)                      _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TMSCntl_IE(r32)                         _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TMSCntl_IE(r32, v)                       _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TMSCntl_IE(r16)                         _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TMSCntl_IE(r16, v)                       _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TMSCntl_PD(r32)                         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TMSCntl_PD(r32, v)                       _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TMSCntl_PD(r16)                         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TMSCntl_PD(r16, v)                       _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TMSCntl_PU(r32)                         _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TMSCntl_PU(r32, v)                       _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TMSCntl_PU(r16)                         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TMSCntl_PU(r16, v)                       _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TMSCntl_SL(r32)                         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TMSCntl_SL(r32, v)                       _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TMSCntl_SL(r16)                         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TMSCntl_SL(r16, v)                       _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TMSCntl_ST(r32)                         _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TMSCntl_ST(r32, v)                       _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TMSCntl_ST(r16)                         _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TMSCntl_ST(r16, v)                       _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_TMSCntl                                 {\
	    UNSG32 uTMSCntl_DS0                                :  1;\
	    UNSG32 uTMSCntl_DS1                                :  1;\
	    UNSG32 uTMSCntl_DS2                                :  1;\
	    UNSG32 uTMSCntl_IE                                 :  1;\
	    UNSG32 uTMSCntl_PD                                 :  1;\
	    UNSG32 uTMSCntl_PU                                 :  1;\
	    UNSG32 uTMSCntl_SL                                 :  1;\
	    UNSG32 uTMSCntl_ST                                 :  1;\
	    UNSG32 RSVDx8814_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_TMSCntl;
	    struct w32Gbl_TMSCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TDICntl_DS0(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TDICntl_DS0(r32, v)                      _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TDICntl_DS0(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TDICntl_DS0(r16, v)                      _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TDICntl_DS1(r32)                        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TDICntl_DS1(r32, v)                      _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TDICntl_DS1(r16)                        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TDICntl_DS1(r16, v)                      _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TDICntl_DS2(r32)                        _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TDICntl_DS2(r32, v)                      _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TDICntl_DS2(r16)                        _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TDICntl_DS2(r16, v)                      _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TDICntl_DS3(r32)                        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TDICntl_DS3(r32, v)                      _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TDICntl_DS3(r16)                        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TDICntl_DS3(r16, v)                      _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TDICntl_IE(r32)                         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TDICntl_IE(r32, v)                       _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TDICntl_IE(r16)                         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TDICntl_IE(r16, v)                       _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TDICntl_PE(r32)                         _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TDICntl_PE(r32, v)                       _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TDICntl_PE(r16)                         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TDICntl_PE(r16, v)                       _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TDICntl_PS(r32)                         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TDICntl_PS(r32, v)                       _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TDICntl_PS(r16)                         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TDICntl_PS(r16, v)                       _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TDICntl_SL(r32)                         _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TDICntl_SL(r32, v)                       _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TDICntl_SL(r16)                         _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TDICntl_SL(r16, v)                       _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TDICntl_SPU(r32)                        _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TDICntl_SPU(r32, v)                      _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TDICntl_SPU(r16)                        _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TDICntl_SPU(r16, v)                      _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TDICntl_ST(r32)                         _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TDICntl_ST(r32, v)                       _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TDICntl_ST(r16)                         _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TDICntl_ST(r16, v)                       _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TDICntl                                 {\
	    UNSG32 uTDICntl_DS0                                :  1;\
	    UNSG32 uTDICntl_DS1                                :  1;\
	    UNSG32 uTDICntl_DS2                                :  1;\
	    UNSG32 uTDICntl_DS3                                :  1;\
	    UNSG32 uTDICntl_IE                                 :  1;\
	    UNSG32 uTDICntl_PE                                 :  1;\
	    UNSG32 uTDICntl_PS                                 :  1;\
	    UNSG32 uTDICntl_SL                                 :  1;\
	    UNSG32 uTDICntl_SPU                                :  1;\
	    UNSG32 uTDICntl_ST                                 :  1;\
	    UNSG32 RSVDx8818_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TDICntl;
	    struct w32Gbl_TDICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TDOCntl_DS0(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TDOCntl_DS0(r32, v)                      _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TDOCntl_DS0(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TDOCntl_DS0(r16, v)                      _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TDOCntl_DS1(r32)                        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TDOCntl_DS1(r32, v)                      _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TDOCntl_DS1(r16)                        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TDOCntl_DS1(r16, v)                      _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TDOCntl_DS2(r32)                        _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TDOCntl_DS2(r32, v)                      _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TDOCntl_DS2(r16)                        _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TDOCntl_DS2(r16, v)                      _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TDOCntl_IE(r32)                         _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TDOCntl_IE(r32, v)                       _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TDOCntl_IE(r16)                         _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TDOCntl_IE(r16, v)                       _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TDOCntl_PD(r32)                         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TDOCntl_PD(r32, v)                       _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TDOCntl_PD(r16)                         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TDOCntl_PD(r16, v)                       _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TDOCntl_PU(r32)                         _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TDOCntl_PU(r32, v)                       _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TDOCntl_PU(r16)                         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TDOCntl_PU(r16, v)                       _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TDOCntl_SL(r32)                         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TDOCntl_SL(r32, v)                       _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TDOCntl_SL(r16)                         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TDOCntl_SL(r16, v)                       _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TDOCntl_ST(r32)                         _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TDOCntl_ST(r32, v)                       _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TDOCntl_ST(r16)                         _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TDOCntl_ST(r16, v)                       _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_TDOCntl                                 {\
	    UNSG32 uTDOCntl_DS0                                :  1;\
	    UNSG32 uTDOCntl_DS1                                :  1;\
	    UNSG32 uTDOCntl_DS2                                :  1;\
	    UNSG32 uTDOCntl_IE                                 :  1;\
	    UNSG32 uTDOCntl_PD                                 :  1;\
	    UNSG32 uTDOCntl_PU                                 :  1;\
	    UNSG32 uTDOCntl_SL                                 :  1;\
	    UNSG32 uTDOCntl_ST                                 :  1;\
	    UNSG32 RSVDx881C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_TDOCntl;
	    struct w32Gbl_TDOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS0nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS0nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SS0nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS0nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SS0nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS0nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SS0nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS0nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SS0nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS0nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SS0nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS0nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SS0nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS0nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SS0nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS0nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SS0nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS0nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SS0nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS0nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SS0nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS0nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SS0nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS0nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SS0nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS0nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SS0nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS0nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SS0nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS0nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SS0nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS0nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI1_SS0nCntl                           {\
	    UNSG32 uSPI1_SS0nCntl_DS0                          :  1;\
	    UNSG32 uSPI1_SS0nCntl_DS1                          :  1;\
	    UNSG32 uSPI1_SS0nCntl_DS2                          :  1;\
	    UNSG32 uSPI1_SS0nCntl_IE                           :  1;\
	    UNSG32 uSPI1_SS0nCntl_PD                           :  1;\
	    UNSG32 uSPI1_SS0nCntl_PU                           :  1;\
	    UNSG32 uSPI1_SS0nCntl_SL                           :  1;\
	    UNSG32 uSPI1_SS0nCntl_ST                           :  1;\
	    UNSG32 RSVDx8820_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI1_SS0nCntl;
	    struct w32Gbl_SPI1_SS0nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS1nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS1nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SS1nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS1nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SS1nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS1nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SS1nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS1nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SS1nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS1nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SS1nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS1nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SS1nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS1nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SS1nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS1nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SS1nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS1nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SS1nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS1nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SS1nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS1nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SS1nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS1nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SS1nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS1nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SS1nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS1nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SS1nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS1nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SS1nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS1nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI1_SS1nCntl                           {\
	    UNSG32 uSPI1_SS1nCntl_DS0                          :  1;\
	    UNSG32 uSPI1_SS1nCntl_DS1                          :  1;\
	    UNSG32 uSPI1_SS1nCntl_DS2                          :  1;\
	    UNSG32 uSPI1_SS1nCntl_IE                           :  1;\
	    UNSG32 uSPI1_SS1nCntl_PD                           :  1;\
	    UNSG32 uSPI1_SS1nCntl_PU                           :  1;\
	    UNSG32 uSPI1_SS1nCntl_SL                           :  1;\
	    UNSG32 uSPI1_SS1nCntl_ST                           :  1;\
	    UNSG32 RSVDx8824_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI1_SS1nCntl;
	    struct w32Gbl_SPI1_SS1nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS2nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS2nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS2nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SS2nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS2nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS2nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SS2nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS2nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS2nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SS2nCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS2nCntl_DS3(r32, v)                _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS2nCntl_DS3(r16, v)                _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SS2nCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS2nCntl_IE(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SS2nCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS2nCntl_IE(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SS2nCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS2nCntl_PE(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SS2nCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS2nCntl_PE(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SS2nCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS2nCntl_PS(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SS2nCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS2nCntl_PS(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SS2nCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS2nCntl_SL(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SS2nCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS2nCntl_SL(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_SPI1_SS2nCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_SPI1_SS2nCntl_SPU(r32, v)                _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_SPI1_SS2nCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_SPI1_SS2nCntl_SPU(r16, v)                _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_SPI1_SS2nCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_SPI1_SS2nCntl_ST(r32, v)                 _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_SPI1_SS2nCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_SPI1_SS2nCntl_ST(r16, v)                 _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_SPI1_SS2nCntl                           {\
	    UNSG32 uSPI1_SS2nCntl_DS0                          :  1;\
	    UNSG32 uSPI1_SS2nCntl_DS1                          :  1;\
	    UNSG32 uSPI1_SS2nCntl_DS2                          :  1;\
	    UNSG32 uSPI1_SS2nCntl_DS3                          :  1;\
	    UNSG32 uSPI1_SS2nCntl_IE                           :  1;\
	    UNSG32 uSPI1_SS2nCntl_PE                           :  1;\
	    UNSG32 uSPI1_SS2nCntl_PS                           :  1;\
	    UNSG32 uSPI1_SS2nCntl_SL                           :  1;\
	    UNSG32 uSPI1_SS2nCntl_SPU                          :  1;\
	    UNSG32 uSPI1_SS2nCntl_ST                           :  1;\
	    UNSG32 RSVDx8828_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_SPI1_SS2nCntl;
	    struct w32Gbl_SPI1_SS2nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS3nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS3nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS3nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SS3nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS3nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS3nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SS3nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS3nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS3nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SS3nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS3nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SS3nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS3nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SS3nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS3nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SS3nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS3nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SS3nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS3nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SS3nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS3nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SS3nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS3nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SS3nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS3nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SS3nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS3nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SS3nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS3nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI1_SS3nCntl                           {\
	    UNSG32 uSPI1_SS3nCntl_DS0                          :  1;\
	    UNSG32 uSPI1_SS3nCntl_DS1                          :  1;\
	    UNSG32 uSPI1_SS3nCntl_DS2                          :  1;\
	    UNSG32 uSPI1_SS3nCntl_IE                           :  1;\
	    UNSG32 uSPI1_SS3nCntl_PD                           :  1;\
	    UNSG32 uSPI1_SS3nCntl_PU                           :  1;\
	    UNSG32 uSPI1_SS3nCntl_SL                           :  1;\
	    UNSG32 uSPI1_SS3nCntl_ST                           :  1;\
	    UNSG32 RSVDx882C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI1_SS3nCntl;
	    struct w32Gbl_SPI1_SS3nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SDOCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SDOCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SDOCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SDOCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SDOCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SDOCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SDOCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SDOCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SDOCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SDOCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SDOCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SDOCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SDOCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SDOCntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SDOCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SDOCntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SDOCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SDOCntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SDOCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SDOCntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SDOCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SDOCntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SDOCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SDOCntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SDOCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SDOCntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SDOCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SDOCntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SDOCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SDOCntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SDOCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SDOCntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI1_SDOCntl                            {\
	    UNSG32 uSPI1_SDOCntl_DS0                           :  1;\
	    UNSG32 uSPI1_SDOCntl_DS1                           :  1;\
	    UNSG32 uSPI1_SDOCntl_DS2                           :  1;\
	    UNSG32 uSPI1_SDOCntl_IE                            :  1;\
	    UNSG32 uSPI1_SDOCntl_PD                            :  1;\
	    UNSG32 uSPI1_SDOCntl_PU                            :  1;\
	    UNSG32 uSPI1_SDOCntl_SL                            :  1;\
	    UNSG32 uSPI1_SDOCntl_ST                            :  1;\
	    UNSG32 RSVDx8830_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI1_SDOCntl;
	    struct w32Gbl_SPI1_SDOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SDICntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SDICntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SDICntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SDICntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SDICntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SDICntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SDICntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SDICntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SDICntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SDICntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SDICntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SDICntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SDICntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SDICntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SDICntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SDICntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SDICntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SDICntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SDICntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SDICntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SDICntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SDICntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SDICntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SDICntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SDICntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SDICntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SDICntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SDICntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SDICntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SDICntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SDICntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SDICntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI1_SDICntl                            {\
	    UNSG32 uSPI1_SDICntl_DS0                           :  1;\
	    UNSG32 uSPI1_SDICntl_DS1                           :  1;\
	    UNSG32 uSPI1_SDICntl_DS2                           :  1;\
	    UNSG32 uSPI1_SDICntl_IE                            :  1;\
	    UNSG32 uSPI1_SDICntl_PD                            :  1;\
	    UNSG32 uSPI1_SDICntl_PU                            :  1;\
	    UNSG32 uSPI1_SDICntl_SL                            :  1;\
	    UNSG32 uSPI1_SDICntl_ST                            :  1;\
	    UNSG32 RSVDx8834_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI1_SDICntl;
	    struct w32Gbl_SPI1_SDICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SCLKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI1_SCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SCLKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI1_SCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SCLKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI1_SCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SCLKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI1_SCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SCLKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI1_SCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SCLKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI1_SCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SCLKCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI1_SCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SCLKCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI1_SCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SCLKCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI1_SCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SCLKCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI1_SCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SCLKCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI1_SCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SCLKCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI1_SCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SCLKCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI1_SCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SCLKCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI1_SCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SCLKCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI1_SCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SCLKCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI1_SCLKCntl                           {\
	    UNSG32 uSPI1_SCLKCntl_DS0                          :  1;\
	    UNSG32 uSPI1_SCLKCntl_DS1                          :  1;\
	    UNSG32 uSPI1_SCLKCntl_DS2                          :  1;\
	    UNSG32 uSPI1_SCLKCntl_IE                           :  1;\
	    UNSG32 uSPI1_SCLKCntl_PD                           :  1;\
	    UNSG32 uSPI1_SCLKCntl_PU                           :  1;\
	    UNSG32 uSPI1_SCLKCntl_SL                           :  1;\
	    UNSG32 uSPI1_SCLKCntl_ST                           :  1;\
	    UNSG32 RSVDx8838_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI1_SCLKCntl;
	    struct w32Gbl_SPI1_SCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW2_SCLCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW2_SCLCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW2_SCLCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW2_SCLCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW2_SCLCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW2_SCLCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW2_SCLCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW2_SCLCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW2_SCLCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW2_SCLCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW2_SCLCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW2_SCLCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW2_SCLCntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW2_SCLCntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW2_SCLCntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW2_SCLCntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW2_SCLCntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW2_SCLCntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW2_SCLCntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW2_SCLCntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW2_SCLCntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW2_SCLCntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW2_SCLCntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW2_SCLCntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW2_SCLCntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW2_SCLCntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW2_SCLCntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW2_SCLCntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW2_SCLCntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW2_SCLCntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW2_SCLCntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW2_SCLCntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW2_SCLCntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW2_SCLCntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW2_SCLCntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW2_SCLCntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW2_SCLCntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW2_SCLCntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW2_SCLCntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW2_SCLCntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW2_SCLCntl                             {\
	    UNSG32 uTW2_SCLCntl_DS0                            :  1;\
	    UNSG32 uTW2_SCLCntl_DS1                            :  1;\
	    UNSG32 uTW2_SCLCntl_DS2                            :  1;\
	    UNSG32 uTW2_SCLCntl_DS3                            :  1;\
	    UNSG32 uTW2_SCLCntl_IE                             :  1;\
	    UNSG32 uTW2_SCLCntl_PE                             :  1;\
	    UNSG32 uTW2_SCLCntl_PS                             :  1;\
	    UNSG32 uTW2_SCLCntl_SL                             :  1;\
	    UNSG32 uTW2_SCLCntl_SPU                            :  1;\
	    UNSG32 uTW2_SCLCntl_ST                             :  1;\
	    UNSG32 RSVDx883C_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW2_SCLCntl;
	    struct w32Gbl_TW2_SCLCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW2_SDACntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW2_SDACntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW2_SDACntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW2_SDACntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW2_SDACntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW2_SDACntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW2_SDACntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW2_SDACntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW2_SDACntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW2_SDACntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW2_SDACntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW2_SDACntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW2_SDACntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW2_SDACntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW2_SDACntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW2_SDACntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW2_SDACntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW2_SDACntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW2_SDACntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW2_SDACntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW2_SDACntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW2_SDACntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW2_SDACntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW2_SDACntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW2_SDACntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW2_SDACntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW2_SDACntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW2_SDACntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW2_SDACntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW2_SDACntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW2_SDACntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW2_SDACntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW2_SDACntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW2_SDACntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW2_SDACntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW2_SDACntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW2_SDACntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW2_SDACntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW2_SDACntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW2_SDACntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW2_SDACntl                             {\
	    UNSG32 uTW2_SDACntl_DS0                            :  1;\
	    UNSG32 uTW2_SDACntl_DS1                            :  1;\
	    UNSG32 uTW2_SDACntl_DS2                            :  1;\
	    UNSG32 uTW2_SDACntl_DS3                            :  1;\
	    UNSG32 uTW2_SDACntl_IE                             :  1;\
	    UNSG32 uTW2_SDACntl_PE                             :  1;\
	    UNSG32 uTW2_SDACntl_PS                             :  1;\
	    UNSG32 uTW2_SDACntl_SL                             :  1;\
	    UNSG32 uTW2_SDACntl_SPU                            :  1;\
	    UNSG32 uTW2_SDACntl_ST                             :  1;\
	    UNSG32 RSVDx8840_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW2_SDACntl;
	    struct w32Gbl_TW2_SDACntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SS0nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SS0nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SS0nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SS0nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SS0nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SS0nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SS0nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SS0nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SS0nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SS0nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SS0nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SS0nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SS0nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SS0nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SS0nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SS0nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SS0nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SS0nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SS0nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SS0nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SS0nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SS0nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SS0nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SS0nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SS0nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SS0nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SS0nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SS0nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SS0nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SS0nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SS0nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SS0nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SS0nCntl                           {\
	    UNSG32 uSPI2_SS0nCntl_DS0                          :  1;\
	    UNSG32 uSPI2_SS0nCntl_DS1                          :  1;\
	    UNSG32 uSPI2_SS0nCntl_DS2                          :  1;\
	    UNSG32 uSPI2_SS0nCntl_IE                           :  1;\
	    UNSG32 uSPI2_SS0nCntl_PD                           :  1;\
	    UNSG32 uSPI2_SS0nCntl_PU                           :  1;\
	    UNSG32 uSPI2_SS0nCntl_SL                           :  1;\
	    UNSG32 uSPI2_SS0nCntl_ST                           :  1;\
	    UNSG32 RSVDx8844_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SS0nCntl;
	    struct w32Gbl_SPI2_SS0nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SS1nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SS1nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SS1nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SS1nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SS1nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SS1nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SS1nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SS1nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SS1nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SS1nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SS1nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SS1nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SS1nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SS1nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SS1nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SS1nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SS1nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SS1nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SS1nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SS1nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SS1nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SS1nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SS1nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SS1nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SS1nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SS1nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SS1nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SS1nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SS1nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SS1nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SS1nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SS1nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SS1nCntl                           {\
	    UNSG32 uSPI2_SS1nCntl_DS0                          :  1;\
	    UNSG32 uSPI2_SS1nCntl_DS1                          :  1;\
	    UNSG32 uSPI2_SS1nCntl_DS2                          :  1;\
	    UNSG32 uSPI2_SS1nCntl_IE                           :  1;\
	    UNSG32 uSPI2_SS1nCntl_PD                           :  1;\
	    UNSG32 uSPI2_SS1nCntl_PU                           :  1;\
	    UNSG32 uSPI2_SS1nCntl_SL                           :  1;\
	    UNSG32 uSPI2_SS1nCntl_ST                           :  1;\
	    UNSG32 RSVDx8848_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SS1nCntl;
	    struct w32Gbl_SPI2_SS1nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SS2nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SS2nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SS2nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SS2nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SS2nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SS2nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SS2nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SS2nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SS2nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SS2nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SS2nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SS2nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SS2nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SS2nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SS2nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SS2nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SS2nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SS2nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SS2nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SS2nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SS2nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SS2nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SS2nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SS2nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SS2nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SS2nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SS2nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SS2nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SS2nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SS2nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SS2nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SS2nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SS2nCntl                           {\
	    UNSG32 uSPI2_SS2nCntl_DS0                          :  1;\
	    UNSG32 uSPI2_SS2nCntl_DS1                          :  1;\
	    UNSG32 uSPI2_SS2nCntl_DS2                          :  1;\
	    UNSG32 uSPI2_SS2nCntl_IE                           :  1;\
	    UNSG32 uSPI2_SS2nCntl_PD                           :  1;\
	    UNSG32 uSPI2_SS2nCntl_PU                           :  1;\
	    UNSG32 uSPI2_SS2nCntl_SL                           :  1;\
	    UNSG32 uSPI2_SS2nCntl_ST                           :  1;\
	    UNSG32 RSVDx884C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SS2nCntl;
	    struct w32Gbl_SPI2_SS2nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SS3nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SS3nCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SS3nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SS3nCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SS3nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SS3nCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SS3nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SS3nCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SS3nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SS3nCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SS3nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SS3nCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SS3nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SS3nCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SS3nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SS3nCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SS3nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SS3nCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SS3nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SS3nCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SS3nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SS3nCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SS3nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SS3nCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SS3nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SS3nCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SS3nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SS3nCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SS3nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SS3nCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SS3nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SS3nCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SS3nCntl                           {\
	    UNSG32 uSPI2_SS3nCntl_DS0                          :  1;\
	    UNSG32 uSPI2_SS3nCntl_DS1                          :  1;\
	    UNSG32 uSPI2_SS3nCntl_DS2                          :  1;\
	    UNSG32 uSPI2_SS3nCntl_IE                           :  1;\
	    UNSG32 uSPI2_SS3nCntl_PD                           :  1;\
	    UNSG32 uSPI2_SS3nCntl_PU                           :  1;\
	    UNSG32 uSPI2_SS3nCntl_SL                           :  1;\
	    UNSG32 uSPI2_SS3nCntl_ST                           :  1;\
	    UNSG32 RSVDx8850_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SS3nCntl;
	    struct w32Gbl_SPI2_SS3nCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SDOCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SDOCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SDOCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SDOCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SDOCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SDOCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SDOCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SDOCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SDOCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SDOCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SDOCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SDOCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SDOCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SDOCntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SDOCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SDOCntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SDOCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SDOCntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SDOCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SDOCntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SDOCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SDOCntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SDOCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SDOCntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SDOCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SDOCntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SDOCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SDOCntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SDOCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SDOCntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SDOCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SDOCntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SDOCntl                            {\
	    UNSG32 uSPI2_SDOCntl_DS0                           :  1;\
	    UNSG32 uSPI2_SDOCntl_DS1                           :  1;\
	    UNSG32 uSPI2_SDOCntl_DS2                           :  1;\
	    UNSG32 uSPI2_SDOCntl_IE                            :  1;\
	    UNSG32 uSPI2_SDOCntl_PD                            :  1;\
	    UNSG32 uSPI2_SDOCntl_PU                            :  1;\
	    UNSG32 uSPI2_SDOCntl_SL                            :  1;\
	    UNSG32 uSPI2_SDOCntl_ST                            :  1;\
	    UNSG32 RSVDx8854_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SDOCntl;
	    struct w32Gbl_SPI2_SDOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SCLKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SCLKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SCLKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SCLKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SCLKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SCLKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SCLKCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SCLKCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SCLKCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SCLKCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SCLKCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SCLKCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SCLKCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SCLKCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SCLKCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SCLKCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SCLKCntl                           {\
	    UNSG32 uSPI2_SCLKCntl_DS0                          :  1;\
	    UNSG32 uSPI2_SCLKCntl_DS1                          :  1;\
	    UNSG32 uSPI2_SCLKCntl_DS2                          :  1;\
	    UNSG32 uSPI2_SCLKCntl_IE                           :  1;\
	    UNSG32 uSPI2_SCLKCntl_PD                           :  1;\
	    UNSG32 uSPI2_SCLKCntl_PU                           :  1;\
	    UNSG32 uSPI2_SCLKCntl_SL                           :  1;\
	    UNSG32 uSPI2_SCLKCntl_ST                           :  1;\
	    UNSG32 RSVDx8858_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SCLKCntl;
	    struct w32Gbl_SPI2_SCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI2_SDICntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI2_SDICntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SPI2_SDICntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI2_SDICntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SPI2_SDICntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI2_SDICntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SPI2_SDICntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI2_SDICntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SPI2_SDICntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI2_SDICntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SPI2_SDICntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI2_SDICntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SPI2_SDICntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI2_SDICntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SPI2_SDICntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI2_SDICntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SPI2_SDICntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI2_SDICntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SPI2_SDICntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI2_SDICntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SPI2_SDICntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI2_SDICntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SPI2_SDICntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI2_SDICntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SPI2_SDICntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI2_SDICntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SPI2_SDICntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI2_SDICntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SPI2_SDICntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI2_SDICntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SPI2_SDICntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI2_SDICntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SPI2_SDICntl                            {\
	    UNSG32 uSPI2_SDICntl_DS0                           :  1;\
	    UNSG32 uSPI2_SDICntl_DS1                           :  1;\
	    UNSG32 uSPI2_SDICntl_DS2                           :  1;\
	    UNSG32 uSPI2_SDICntl_IE                            :  1;\
	    UNSG32 uSPI2_SDICntl_PD                            :  1;\
	    UNSG32 uSPI2_SDICntl_PU                            :  1;\
	    UNSG32 uSPI2_SDICntl_SL                            :  1;\
	    UNSG32 uSPI2_SDICntl_ST                            :  1;\
	    UNSG32 RSVDx885C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SPI2_SDICntl;
	    struct w32Gbl_SPI2_SDICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW3_SCLCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW3_SCLCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW3_SCLCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW3_SCLCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW3_SCLCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW3_SCLCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW3_SCLCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW3_SCLCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW3_SCLCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW3_SCLCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW3_SCLCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW3_SCLCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW3_SCLCntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW3_SCLCntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW3_SCLCntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW3_SCLCntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW3_SCLCntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW3_SCLCntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW3_SCLCntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW3_SCLCntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW3_SCLCntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW3_SCLCntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW3_SCLCntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW3_SCLCntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW3_SCLCntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW3_SCLCntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW3_SCLCntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW3_SCLCntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW3_SCLCntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW3_SCLCntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW3_SCLCntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW3_SCLCntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW3_SCLCntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW3_SCLCntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW3_SCLCntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW3_SCLCntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW3_SCLCntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW3_SCLCntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW3_SCLCntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW3_SCLCntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW3_SCLCntl                             {\
	    UNSG32 uTW3_SCLCntl_DS0                            :  1;\
	    UNSG32 uTW3_SCLCntl_DS1                            :  1;\
	    UNSG32 uTW3_SCLCntl_DS2                            :  1;\
	    UNSG32 uTW3_SCLCntl_DS3                            :  1;\
	    UNSG32 uTW3_SCLCntl_IE                             :  1;\
	    UNSG32 uTW3_SCLCntl_PE                             :  1;\
	    UNSG32 uTW3_SCLCntl_PS                             :  1;\
	    UNSG32 uTW3_SCLCntl_SL                             :  1;\
	    UNSG32 uTW3_SCLCntl_SPU                            :  1;\
	    UNSG32 uTW3_SCLCntl_ST                             :  1;\
	    UNSG32 RSVDx8860_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW3_SCLCntl;
	    struct w32Gbl_TW3_SCLCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW3_SDACntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW3_SDACntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_TW3_SDACntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW3_SDACntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_TW3_SDACntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW3_SDACntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_TW3_SDACntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW3_SDACntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_TW3_SDACntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW3_SDACntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_TW3_SDACntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW3_SDACntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_TW3_SDACntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW3_SDACntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_TW3_SDACntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW3_SDACntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_TW3_SDACntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW3_SDACntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_TW3_SDACntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW3_SDACntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_TW3_SDACntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW3_SDACntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_TW3_SDACntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW3_SDACntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_TW3_SDACntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW3_SDACntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_TW3_SDACntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW3_SDACntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_TW3_SDACntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW3_SDACntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_TW3_SDACntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW3_SDACntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_TW3_SDACntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW3_SDACntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_TW3_SDACntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW3_SDACntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_TW3_SDACntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW3_SDACntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_TW3_SDACntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW3_SDACntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_TW3_SDACntl                             {\
	    UNSG32 uTW3_SDACntl_DS0                            :  1;\
	    UNSG32 uTW3_SDACntl_DS1                            :  1;\
	    UNSG32 uTW3_SDACntl_DS2                            :  1;\
	    UNSG32 uTW3_SDACntl_DS3                            :  1;\
	    UNSG32 uTW3_SDACntl_IE                             :  1;\
	    UNSG32 uTW3_SDACntl_PE                             :  1;\
	    UNSG32 uTW3_SDACntl_PS                             :  1;\
	    UNSG32 uTW3_SDACntl_SL                             :  1;\
	    UNSG32 uTW3_SDACntl_SPU                            :  1;\
	    UNSG32 uTW3_SDACntl_ST                             :  1;\
	    UNSG32 RSVDx8864_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_TW3_SDACntl;
	    struct w32Gbl_TW3_SDACntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_URT1_RXDCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_URT1_RXDCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_URT1_RXDCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_URT1_RXDCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_URT1_RXDCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_URT1_RXDCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_URT1_RXDCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_URT1_RXDCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_URT1_RXDCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_URT1_RXDCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_URT1_RXDCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_URT1_RXDCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_URT1_RXDCntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_URT1_RXDCntl_DS3(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_URT1_RXDCntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_URT1_RXDCntl_DS3(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_URT1_RXDCntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_URT1_RXDCntl_IE(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_URT1_RXDCntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_URT1_RXDCntl_IE(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_URT1_RXDCntl_PE(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_URT1_RXDCntl_PE(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_URT1_RXDCntl_PE(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_URT1_RXDCntl_PE(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_URT1_RXDCntl_PS(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_URT1_RXDCntl_PS(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_URT1_RXDCntl_PS(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_URT1_RXDCntl_PS(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_URT1_RXDCntl_SL(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_URT1_RXDCntl_SL(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_URT1_RXDCntl_SL(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_URT1_RXDCntl_SL(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_URT1_RXDCntl_SPU(r32)                   _BFGET_(r32, 8, 8)
    #define   SET32Gbl_URT1_RXDCntl_SPU(r32, v)                 _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_URT1_RXDCntl_SPU(r16)                   _BFGET_(r16, 8, 8)
    #define   SET16Gbl_URT1_RXDCntl_SPU(r16, v)                 _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_URT1_RXDCntl_ST(r32)                    _BFGET_(r32, 9, 9)
    #define   SET32Gbl_URT1_RXDCntl_ST(r32, v)                  _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_URT1_RXDCntl_ST(r16)                    _BFGET_(r16, 9, 9)
    #define   SET16Gbl_URT1_RXDCntl_ST(r16, v)                  _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_URT1_RXDCntl                            {\
	    UNSG32 uURT1_RXDCntl_DS0                           :  1;\
	    UNSG32 uURT1_RXDCntl_DS1                           :  1;\
	    UNSG32 uURT1_RXDCntl_DS2                           :  1;\
	    UNSG32 uURT1_RXDCntl_DS3                           :  1;\
	    UNSG32 uURT1_RXDCntl_IE                            :  1;\
	    UNSG32 uURT1_RXDCntl_PE                            :  1;\
	    UNSG32 uURT1_RXDCntl_PS                            :  1;\
	    UNSG32 uURT1_RXDCntl_SL                            :  1;\
	    UNSG32 uURT1_RXDCntl_SPU                           :  1;\
	    UNSG32 uURT1_RXDCntl_ST                            :  1;\
	    UNSG32 RSVDx8868_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_URT1_RXDCntl;
	    struct w32Gbl_URT1_RXDCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_URT1_TXDCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_URT1_TXDCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_URT1_TXDCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_URT1_TXDCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_URT1_TXDCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_URT1_TXDCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_URT1_TXDCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_URT1_TXDCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_URT1_TXDCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_URT1_TXDCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_URT1_TXDCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_URT1_TXDCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_URT1_TXDCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_URT1_TXDCntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_URT1_TXDCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_URT1_TXDCntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_URT1_TXDCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_URT1_TXDCntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_URT1_TXDCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_URT1_TXDCntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_URT1_TXDCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_URT1_TXDCntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_URT1_TXDCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_URT1_TXDCntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_URT1_TXDCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_URT1_TXDCntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_URT1_TXDCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_URT1_TXDCntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_URT1_TXDCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_URT1_TXDCntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_URT1_TXDCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_URT1_TXDCntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_URT1_TXDCntl                            {\
	    UNSG32 uURT1_TXDCntl_DS0                           :  1;\
	    UNSG32 uURT1_TXDCntl_DS1                           :  1;\
	    UNSG32 uURT1_TXDCntl_DS2                           :  1;\
	    UNSG32 uURT1_TXDCntl_IE                            :  1;\
	    UNSG32 uURT1_TXDCntl_PD                            :  1;\
	    UNSG32 uURT1_TXDCntl_PU                            :  1;\
	    UNSG32 uURT1_TXDCntl_SL                            :  1;\
	    UNSG32 uURT1_TXDCntl_ST                            :  1;\
	    UNSG32 RSVDx886C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_URT1_TXDCntl;
	    struct w32Gbl_URT1_TXDCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PWM0Cntl_DS0(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PWM0Cntl_DS0(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PWM0Cntl_DS0(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PWM0Cntl_DS0(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PWM0Cntl_DS1(r32)                       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PWM0Cntl_DS1(r32, v)                     _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PWM0Cntl_DS1(r16)                       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PWM0Cntl_DS1(r16, v)                     _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PWM0Cntl_DS2(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PWM0Cntl_DS2(r32, v)                     _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PWM0Cntl_DS2(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PWM0Cntl_DS2(r16, v)                     _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PWM0Cntl_IE(r32)                        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PWM0Cntl_IE(r32, v)                      _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PWM0Cntl_IE(r16)                        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PWM0Cntl_IE(r16, v)                      _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PWM0Cntl_PD(r32)                        _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PWM0Cntl_PD(r32, v)                      _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PWM0Cntl_PD(r16)                        _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PWM0Cntl_PD(r16, v)                      _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PWM0Cntl_PU(r32)                        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PWM0Cntl_PU(r32, v)                      _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PWM0Cntl_PU(r16)                        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PWM0Cntl_PU(r16, v)                      _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PWM0Cntl_SL(r32)                        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PWM0Cntl_SL(r32, v)                      _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PWM0Cntl_SL(r16)                        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PWM0Cntl_SL(r16, v)                      _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PWM0Cntl_ST(r32)                        _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PWM0Cntl_ST(r32, v)                      _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PWM0Cntl_ST(r16)                        _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PWM0Cntl_ST(r16, v)                      _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PWM0Cntl                                {\
	    UNSG32 uPWM0Cntl_DS0                               :  1;\
	    UNSG32 uPWM0Cntl_DS1                               :  1;\
	    UNSG32 uPWM0Cntl_DS2                               :  1;\
	    UNSG32 uPWM0Cntl_IE                                :  1;\
	    UNSG32 uPWM0Cntl_PD                                :  1;\
	    UNSG32 uPWM0Cntl_PU                                :  1;\
	    UNSG32 uPWM0Cntl_SL                                :  1;\
	    UNSG32 uPWM0Cntl_ST                                :  1;\
	    UNSG32 RSVDx8870_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PWM0Cntl;
	    struct w32Gbl_PWM0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PWM1Cntl_DS0(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PWM1Cntl_DS0(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PWM1Cntl_DS0(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PWM1Cntl_DS0(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PWM1Cntl_DS1(r32)                       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PWM1Cntl_DS1(r32, v)                     _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PWM1Cntl_DS1(r16)                       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PWM1Cntl_DS1(r16, v)                     _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PWM1Cntl_DS2(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PWM1Cntl_DS2(r32, v)                     _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PWM1Cntl_DS2(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PWM1Cntl_DS2(r16, v)                     _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PWM1Cntl_IE(r32)                        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PWM1Cntl_IE(r32, v)                      _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PWM1Cntl_IE(r16)                        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PWM1Cntl_IE(r16, v)                      _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PWM1Cntl_PD(r32)                        _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PWM1Cntl_PD(r32, v)                      _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PWM1Cntl_PD(r16)                        _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PWM1Cntl_PD(r16, v)                      _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PWM1Cntl_PU(r32)                        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PWM1Cntl_PU(r32, v)                      _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PWM1Cntl_PU(r16)                        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PWM1Cntl_PU(r16, v)                      _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PWM1Cntl_SL(r32)                        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PWM1Cntl_SL(r32, v)                      _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PWM1Cntl_SL(r16)                        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PWM1Cntl_SL(r16, v)                      _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PWM1Cntl_ST(r32)                        _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PWM1Cntl_ST(r32, v)                      _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PWM1Cntl_ST(r16)                        _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PWM1Cntl_ST(r16, v)                      _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PWM1Cntl                                {\
	    UNSG32 uPWM1Cntl_DS0                               :  1;\
	    UNSG32 uPWM1Cntl_DS1                               :  1;\
	    UNSG32 uPWM1Cntl_DS2                               :  1;\
	    UNSG32 uPWM1Cntl_IE                                :  1;\
	    UNSG32 uPWM1Cntl_PD                                :  1;\
	    UNSG32 uPWM1Cntl_PU                                :  1;\
	    UNSG32 uPWM1Cntl_SL                                :  1;\
	    UNSG32 uPWM1Cntl_ST                                :  1;\
	    UNSG32 RSVDx8874_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PWM1Cntl;
	    struct w32Gbl_PWM1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PWM2Cntl_DS0(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PWM2Cntl_DS0(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PWM2Cntl_DS0(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PWM2Cntl_DS0(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PWM2Cntl_DS1(r32)                       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PWM2Cntl_DS1(r32, v)                     _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PWM2Cntl_DS1(r16)                       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PWM2Cntl_DS1(r16, v)                     _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PWM2Cntl_DS2(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PWM2Cntl_DS2(r32, v)                     _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PWM2Cntl_DS2(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PWM2Cntl_DS2(r16, v)                     _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PWM2Cntl_IE(r32)                        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PWM2Cntl_IE(r32, v)                      _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PWM2Cntl_IE(r16)                        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PWM2Cntl_IE(r16, v)                      _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PWM2Cntl_PD(r32)                        _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PWM2Cntl_PD(r32, v)                      _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PWM2Cntl_PD(r16)                        _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PWM2Cntl_PD(r16, v)                      _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PWM2Cntl_PU(r32)                        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PWM2Cntl_PU(r32, v)                      _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PWM2Cntl_PU(r16)                        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PWM2Cntl_PU(r16, v)                      _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PWM2Cntl_SL(r32)                        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PWM2Cntl_SL(r32, v)                      _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PWM2Cntl_SL(r16)                        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PWM2Cntl_SL(r16, v)                      _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PWM2Cntl_ST(r32)                        _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PWM2Cntl_ST(r32, v)                      _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PWM2Cntl_ST(r16)                        _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PWM2Cntl_ST(r16, v)                      _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PWM2Cntl                                {\
	    UNSG32 uPWM2Cntl_DS0                               :  1;\
	    UNSG32 uPWM2Cntl_DS1                               :  1;\
	    UNSG32 uPWM2Cntl_DS2                               :  1;\
	    UNSG32 uPWM2Cntl_IE                                :  1;\
	    UNSG32 uPWM2Cntl_PD                                :  1;\
	    UNSG32 uPWM2Cntl_PU                                :  1;\
	    UNSG32 uPWM2Cntl_SL                                :  1;\
	    UNSG32 uPWM2Cntl_ST                                :  1;\
	    UNSG32 RSVDx8878_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PWM2Cntl;
	    struct w32Gbl_PWM2Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PWM3Cntl_DS0(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PWM3Cntl_DS0(r32, v)                     _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PWM3Cntl_DS0(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PWM3Cntl_DS0(r16, v)                     _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PWM3Cntl_DS1(r32)                       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PWM3Cntl_DS1(r32, v)                     _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PWM3Cntl_DS1(r16)                       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PWM3Cntl_DS1(r16, v)                     _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PWM3Cntl_DS2(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PWM3Cntl_DS2(r32, v)                     _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PWM3Cntl_DS2(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PWM3Cntl_DS2(r16, v)                     _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PWM3Cntl_IE(r32)                        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PWM3Cntl_IE(r32, v)                      _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PWM3Cntl_IE(r16)                        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PWM3Cntl_IE(r16, v)                      _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PWM3Cntl_PD(r32)                        _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PWM3Cntl_PD(r32, v)                      _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PWM3Cntl_PD(r16)                        _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PWM3Cntl_PD(r16, v)                      _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PWM3Cntl_PU(r32)                        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PWM3Cntl_PU(r32, v)                      _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PWM3Cntl_PU(r16)                        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PWM3Cntl_PU(r16, v)                      _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PWM3Cntl_SL(r32)                        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PWM3Cntl_SL(r32, v)                      _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PWM3Cntl_SL(r16)                        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PWM3Cntl_SL(r16, v)                      _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PWM3Cntl_ST(r32)                        _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PWM3Cntl_ST(r32, v)                      _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PWM3Cntl_ST(r16)                        _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PWM3Cntl_ST(r16, v)                      _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PWM3Cntl                                {\
	    UNSG32 uPWM3Cntl_DS0                               :  1;\
	    UNSG32 uPWM3Cntl_DS1                               :  1;\
	    UNSG32 uPWM3Cntl_DS2                               :  1;\
	    UNSG32 uPWM3Cntl_IE                                :  1;\
	    UNSG32 uPWM3Cntl_PD                                :  1;\
	    UNSG32 uPWM3Cntl_PU                                :  1;\
	    UNSG32 uPWM3Cntl_SL                                :  1;\
	    UNSG32 uPWM3Cntl_ST                                :  1;\
	    UNSG32 RSVDx887C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PWM3Cntl;
	    struct w32Gbl_PWM3Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A0Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A0Cntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GPIO_A0Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A0Cntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_GPIO_A0Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A0Cntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_GPIO_A0Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A0Cntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_GPIO_A0Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A0Cntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_GPIO_A0Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A0Cntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_GPIO_A0Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A0Cntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_GPIO_A0Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A0Cntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_GPIO_A0Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A0Cntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_GPIO_A0Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A0Cntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_GPIO_A0Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A0Cntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_GPIO_A0Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A0Cntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_GPIO_A0Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A0Cntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_GPIO_A0Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A0Cntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_GPIO_A0Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A0Cntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_GPIO_A0Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A0Cntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_GPIO_A0Cntl                             {\
	    UNSG32 uGPIO_A0Cntl_DS0                            :  1;\
	    UNSG32 uGPIO_A0Cntl_DS1                            :  1;\
	    UNSG32 uGPIO_A0Cntl_DS2                            :  1;\
	    UNSG32 uGPIO_A0Cntl_IE                             :  1;\
	    UNSG32 uGPIO_A0Cntl_PD                             :  1;\
	    UNSG32 uGPIO_A0Cntl_PU                             :  1;\
	    UNSG32 uGPIO_A0Cntl_SL                             :  1;\
	    UNSG32 uGPIO_A0Cntl_ST                             :  1;\
	    UNSG32 RSVDx8880_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_GPIO_A0Cntl;
	    struct w32Gbl_GPIO_A0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A1Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A1Cntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GPIO_A1Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A1Cntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_GPIO_A1Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A1Cntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_GPIO_A1Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A1Cntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_GPIO_A1Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A1Cntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_GPIO_A1Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A1Cntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_GPIO_A1Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A1Cntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_GPIO_A1Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A1Cntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_GPIO_A1Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A1Cntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_GPIO_A1Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A1Cntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_GPIO_A1Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A1Cntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_GPIO_A1Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A1Cntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_GPIO_A1Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A1Cntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_GPIO_A1Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A1Cntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_GPIO_A1Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A1Cntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_GPIO_A1Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A1Cntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_GPIO_A1Cntl                             {\
	    UNSG32 uGPIO_A1Cntl_DS0                            :  1;\
	    UNSG32 uGPIO_A1Cntl_DS1                            :  1;\
	    UNSG32 uGPIO_A1Cntl_DS2                            :  1;\
	    UNSG32 uGPIO_A1Cntl_IE                             :  1;\
	    UNSG32 uGPIO_A1Cntl_PD                             :  1;\
	    UNSG32 uGPIO_A1Cntl_PU                             :  1;\
	    UNSG32 uGPIO_A1Cntl_SL                             :  1;\
	    UNSG32 uGPIO_A1Cntl_ST                             :  1;\
	    UNSG32 RSVDx8884_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_GPIO_A1Cntl;
	    struct w32Gbl_GPIO_A1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A2Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A2Cntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GPIO_A2Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A2Cntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_GPIO_A2Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A2Cntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_GPIO_A2Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A2Cntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_GPIO_A2Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A2Cntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_GPIO_A2Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A2Cntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_GPIO_A2Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A2Cntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_GPIO_A2Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A2Cntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_GPIO_A2Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A2Cntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_GPIO_A2Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A2Cntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_GPIO_A2Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A2Cntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_GPIO_A2Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A2Cntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_GPIO_A2Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A2Cntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_GPIO_A2Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A2Cntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_GPIO_A2Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A2Cntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_GPIO_A2Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A2Cntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_GPIO_A2Cntl                             {\
	    UNSG32 uGPIO_A2Cntl_DS0                            :  1;\
	    UNSG32 uGPIO_A2Cntl_DS1                            :  1;\
	    UNSG32 uGPIO_A2Cntl_DS2                            :  1;\
	    UNSG32 uGPIO_A2Cntl_IE                             :  1;\
	    UNSG32 uGPIO_A2Cntl_PD                             :  1;\
	    UNSG32 uGPIO_A2Cntl_PU                             :  1;\
	    UNSG32 uGPIO_A2Cntl_SL                             :  1;\
	    UNSG32 uGPIO_A2Cntl_ST                             :  1;\
	    UNSG32 RSVDx8888_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_GPIO_A2Cntl;
	    struct w32Gbl_GPIO_A2Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A3Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A3Cntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_GPIO_A3Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A3Cntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_GPIO_A3Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A3Cntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_GPIO_A3Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A3Cntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_GPIO_A3Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A3Cntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_GPIO_A3Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A3Cntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_GPIO_A3Cntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A3Cntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_GPIO_A3Cntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A3Cntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_GPIO_A3Cntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A3Cntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_GPIO_A3Cntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A3Cntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_GPIO_A3Cntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A3Cntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_GPIO_A3Cntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A3Cntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_GPIO_A3Cntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A3Cntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_GPIO_A3Cntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A3Cntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_GPIO_A3Cntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A3Cntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_GPIO_A3Cntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A3Cntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_GPIO_A3Cntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_GPIO_A3Cntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_GPIO_A3Cntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_GPIO_A3Cntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_GPIO_A3Cntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_GPIO_A3Cntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_GPIO_A3Cntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_GPIO_A3Cntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_GPIO_A3Cntl                             {\
	    UNSG32 uGPIO_A3Cntl_DS0                            :  1;\
	    UNSG32 uGPIO_A3Cntl_DS1                            :  1;\
	    UNSG32 uGPIO_A3Cntl_DS2                            :  1;\
	    UNSG32 uGPIO_A3Cntl_DS3                            :  1;\
	    UNSG32 uGPIO_A3Cntl_IE                             :  1;\
	    UNSG32 uGPIO_A3Cntl_PE                             :  1;\
	    UNSG32 uGPIO_A3Cntl_PS                             :  1;\
	    UNSG32 uGPIO_A3Cntl_SL                             :  1;\
	    UNSG32 uGPIO_A3Cntl_SPU                            :  1;\
	    UNSG32 uGPIO_A3Cntl_ST                             :  1;\
	    UNSG32 RSVDx888C_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_GPIO_A3Cntl;
	    struct w32Gbl_GPIO_A3Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USB2_DRV_VBUSCntl_DS0(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_DS0(r32, v)            _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_DS0(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_DS0(r16, v)            _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_DS1(r32)              _BFGET_(r32, 1, 1)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_DS1(r32, v)            _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_DS1(r16)              _BFGET_(r16, 1, 1)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_DS1(r16, v)            _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_DS2(r32)              _BFGET_(r32, 2, 2)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_DS2(r32, v)            _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_DS2(r16)              _BFGET_(r16, 2, 2)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_DS2(r16, v)            _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_IE(r32)               _BFGET_(r32, 3, 3)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_IE(r32, v)             _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_IE(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_IE(r16, v)             _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_PD(r32)               _BFGET_(r32, 4, 4)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_PD(r32, v)             _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_PD(r16)               _BFGET_(r16, 4, 4)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_PD(r16, v)             _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_PU(r32)               _BFGET_(r32, 5, 5)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_PU(r32, v)             _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_PU(r16)               _BFGET_(r16, 5, 5)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_PU(r16, v)             _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_SL(r32)               _BFGET_(r32, 6, 6)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_SL(r32, v)             _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_SL(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_SL(r16, v)             _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_ST(r32)               _BFGET_(r32, 7, 7)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_ST(r32, v)             _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_ST(r16)               _BFGET_(r16, 7, 7)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_ST(r16, v)             _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_USB2_DRV_VBUSCntl                       {\
	    UNSG32 uUSB2_DRV_VBUSCntl_DS0                      :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_DS1                      :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_DS2                      :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_IE                       :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_PD                       :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_PU                       :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_SL                       :  1;\
	    UNSG32 uUSB2_DRV_VBUSCntl_ST                       :  1;\
	    UNSG32 RSVDx8890_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_USB2_DRV_VBUSCntl;
	    struct w32Gbl_USB2_DRV_VBUSCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SDIO_CDnCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SDIO_CDnCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SDIO_CDnCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SDIO_CDnCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SDIO_CDnCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SDIO_CDnCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SDIO_CDnCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SDIO_CDnCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SDIO_CDnCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SDIO_CDnCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SDIO_CDnCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SDIO_CDnCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SDIO_CDnCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SDIO_CDnCntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SDIO_CDnCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SDIO_CDnCntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SDIO_CDnCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SDIO_CDnCntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SDIO_CDnCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SDIO_CDnCntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SDIO_CDnCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SDIO_CDnCntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SDIO_CDnCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SDIO_CDnCntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SDIO_CDnCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SDIO_CDnCntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SDIO_CDnCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SDIO_CDnCntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SDIO_CDnCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SDIO_CDnCntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SDIO_CDnCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SDIO_CDnCntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_SDIO_CDnCntl                            {\
	    UNSG32 uSDIO_CDnCntl_DS0                           :  1;\
	    UNSG32 uSDIO_CDnCntl_DS1                           :  1;\
	    UNSG32 uSDIO_CDnCntl_DS2                           :  1;\
	    UNSG32 uSDIO_CDnCntl_IE                            :  1;\
	    UNSG32 uSDIO_CDnCntl_PD                            :  1;\
	    UNSG32 uSDIO_CDnCntl_PU                            :  1;\
	    UNSG32 uSDIO_CDnCntl_SL                            :  1;\
	    UNSG32 uSDIO_CDnCntl_ST                            :  1;\
	    UNSG32 RSVDx8894_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_SDIO_CDnCntl;
	    struct w32Gbl_SDIO_CDnCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SDIO_WPCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SDIO_WPCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_SDIO_WPCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SDIO_WPCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_SDIO_WPCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SDIO_WPCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_SDIO_WPCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SDIO_WPCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_SDIO_WPCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SDIO_WPCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_SDIO_WPCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SDIO_WPCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_SDIO_WPCntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SDIO_WPCntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_SDIO_WPCntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SDIO_WPCntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_SDIO_WPCntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SDIO_WPCntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_SDIO_WPCntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SDIO_WPCntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_SDIO_WPCntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SDIO_WPCntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_SDIO_WPCntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SDIO_WPCntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_SDIO_WPCntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SDIO_WPCntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_SDIO_WPCntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SDIO_WPCntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_SDIO_WPCntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SDIO_WPCntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_SDIO_WPCntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SDIO_WPCntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_SDIO_WPCntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_SDIO_WPCntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_SDIO_WPCntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_SDIO_WPCntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_SDIO_WPCntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_SDIO_WPCntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_SDIO_WPCntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_SDIO_WPCntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_SDIO_WPCntl                             {\
	    UNSG32 uSDIO_WPCntl_DS0                            :  1;\
	    UNSG32 uSDIO_WPCntl_DS1                            :  1;\
	    UNSG32 uSDIO_WPCntl_DS2                            :  1;\
	    UNSG32 uSDIO_WPCntl_DS3                            :  1;\
	    UNSG32 uSDIO_WPCntl_IE                             :  1;\
	    UNSG32 uSDIO_WPCntl_PE                             :  1;\
	    UNSG32 uSDIO_WPCntl_PS                             :  1;\
	    UNSG32 uSDIO_WPCntl_SL                             :  1;\
	    UNSG32 uSDIO_WPCntl_SPU                            :  1;\
	    UNSG32 uSDIO_WPCntl_ST                             :  1;\
	    UNSG32 RSVDx8898_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_SDIO_WPCntl;
	    struct w32Gbl_SDIO_WPCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_NFALECntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_NFALECntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_NFALECntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_NFALECntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_NFALECntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_NFALECntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_NFALECntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_NFALECntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_NFALECntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_NFALECntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_NFALECntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_NFALECntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_NFALECntl_IE(r32)                       _BFGET_(r32, 3, 3)
    #define   SET32Gbl_NFALECntl_IE(r32, v)                     _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_NFALECntl_IE(r16)                       _BFGET_(r16, 3, 3)
    #define   SET16Gbl_NFALECntl_IE(r16, v)                     _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_NFALECntl_PD(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_NFALECntl_PD(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_NFALECntl_PD(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_NFALECntl_PD(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_NFALECntl_PU(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_NFALECntl_PU(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_NFALECntl_PU(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_NFALECntl_PU(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_NFALECntl_SL(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_NFALECntl_SL(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_NFALECntl_SL(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_NFALECntl_SL(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_NFALECntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_NFALECntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_NFALECntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_NFALECntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_NFALECntl                               {\
	    UNSG32 uNFALECntl_DS0                              :  1;\
	    UNSG32 uNFALECntl_DS1                              :  1;\
	    UNSG32 uNFALECntl_DS2                              :  1;\
	    UNSG32 uNFALECntl_IE                               :  1;\
	    UNSG32 uNFALECntl_PD                               :  1;\
	    UNSG32 uNFALECntl_PU                               :  1;\
	    UNSG32 uNFALECntl_SL                               :  1;\
	    UNSG32 uNFALECntl_ST                               :  1;\
	    UNSG32 RSVDx889C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_NFALECntl;
	    struct w32Gbl_NFALECntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_NFLCSCntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_NFLCSCntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_NFLCSCntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_NFLCSCntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_NFLCSCntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_NFLCSCntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_NFLCSCntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_NFLCSCntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_NFLCSCntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_NFLCSCntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_NFLCSCntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_NFLCSCntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_NFLCSCntl_IE(r32)                       _BFGET_(r32, 3, 3)
    #define   SET32Gbl_NFLCSCntl_IE(r32, v)                     _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_NFLCSCntl_IE(r16)                       _BFGET_(r16, 3, 3)
    #define   SET16Gbl_NFLCSCntl_IE(r16, v)                     _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_NFLCSCntl_PD(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_NFLCSCntl_PD(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_NFLCSCntl_PD(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_NFLCSCntl_PD(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_NFLCSCntl_PU(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_NFLCSCntl_PU(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_NFLCSCntl_PU(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_NFLCSCntl_PU(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_NFLCSCntl_SL(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_NFLCSCntl_SL(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_NFLCSCntl_SL(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_NFLCSCntl_SL(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_NFLCSCntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_NFLCSCntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_NFLCSCntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_NFLCSCntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_NFLCSCntl                               {\
	    UNSG32 uNFLCSCntl_DS0                              :  1;\
	    UNSG32 uNFLCSCntl_DS1                              :  1;\
	    UNSG32 uNFLCSCntl_DS2                              :  1;\
	    UNSG32 uNFLCSCntl_IE                               :  1;\
	    UNSG32 uNFLCSCntl_PD                               :  1;\
	    UNSG32 uNFLCSCntl_PU                               :  1;\
	    UNSG32 uNFLCSCntl_SL                               :  1;\
	    UNSG32 uNFLCSCntl_ST                               :  1;\
	    UNSG32 RSVDx88A0_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_NFLCSCntl;
	    struct w32Gbl_NFLCSCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMII_CLK_OUTCntl_DS0(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_DS0(r32, v)            _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_DS0(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_DS0(r16, v)            _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_DS1(r32)              _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_DS1(r32, v)            _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_DS1(r16)              _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_DS1(r16, v)            _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_DS2(r32)              _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_DS2(r32, v)            _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_DS2(r16)              _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_DS2(r16, v)            _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_IE(r32)               _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_IE(r32, v)             _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_IE(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_IE(r16, v)             _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_PD(r32)               _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_PD(r32, v)             _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_PD(r16)               _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_PD(r16, v)             _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_PU(r32)               _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_PU(r32, v)             _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_PU(r16)               _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_PU(r16, v)             _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_SL(r32)               _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_SL(r32, v)             _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_SL(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_SL(r16, v)             _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMII_CLK_OUTCntl_ST(r32)               _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMII_CLK_OUTCntl_ST(r32, v)             _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMII_CLK_OUTCntl_ST(r16)               _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMII_CLK_OUTCntl_ST(r16, v)             _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMII_CLK_OUTCntl                       {\
	    UNSG32 uRGMII_CLK_OUTCntl_DS0                      :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_DS1                      :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_DS2                      :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_IE                       :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_PD                       :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_PU                       :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_SL                       :  1;\
	    UNSG32 uRGMII_CLK_OUTCntl_ST                       :  1;\
	    UNSG32 RSVDx88A4_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMII_CLK_OUTCntl;
	    struct w32Gbl_RGMII_CLK_OUTCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIITXCCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIITXCCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIITXCCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIITXCCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIITXCCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIITXCCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIITXCCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIITXCCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIITXCCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIITXCCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIITXCCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIITXCCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIITXCCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIITXCCntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIITXCCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIITXCCntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIITXCCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIITXCCntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIITXCCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIITXCCntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIITXCCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIITXCCntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIITXCCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIITXCCntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIITXCCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIITXCCntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIITXCCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIITXCCntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIITXCCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIITXCCntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIITXCCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIITXCCntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIITXCCntl                            {\
	    UNSG32 uRGMIITXCCntl_DS0                           :  1;\
	    UNSG32 uRGMIITXCCntl_DS1                           :  1;\
	    UNSG32 uRGMIITXCCntl_DS2                           :  1;\
	    UNSG32 uRGMIITXCCntl_IE                            :  1;\
	    UNSG32 uRGMIITXCCntl_PD                            :  1;\
	    UNSG32 uRGMIITXCCntl_PU                            :  1;\
	    UNSG32 uRGMIITXCCntl_SL                            :  1;\
	    UNSG32 uRGMIITXCCntl_ST                            :  1;\
	    UNSG32 RSVDx88A8_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIITXCCntl;
	    struct w32Gbl_RGMIITXCCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIITD0Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIITD0Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIITD0Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIITD0Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIITD0Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIITD0Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIITD0Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIITD0Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIITD0Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIITD0Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIITD0Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIITD0Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIITD0Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIITD0Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIITD0Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIITD0Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIITD0Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIITD0Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIITD0Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIITD0Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIITD0Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIITD0Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIITD0Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIITD0Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIITD0Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIITD0Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIITD0Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIITD0Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIITD0Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIITD0Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIITD0Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIITD0Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIITD0Cntl                            {\
	    UNSG32 uRGMIITD0Cntl_DS0                           :  1;\
	    UNSG32 uRGMIITD0Cntl_DS1                           :  1;\
	    UNSG32 uRGMIITD0Cntl_DS2                           :  1;\
	    UNSG32 uRGMIITD0Cntl_IE                            :  1;\
	    UNSG32 uRGMIITD0Cntl_PD                            :  1;\
	    UNSG32 uRGMIITD0Cntl_PU                            :  1;\
	    UNSG32 uRGMIITD0Cntl_SL                            :  1;\
	    UNSG32 uRGMIITD0Cntl_ST                            :  1;\
	    UNSG32 RSVDx88AC_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIITD0Cntl;
	    struct w32Gbl_RGMIITD0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIITD1Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIITD1Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIITD1Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIITD1Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIITD1Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIITD1Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIITD1Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIITD1Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIITD1Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIITD1Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIITD1Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIITD1Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIITD1Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIITD1Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIITD1Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIITD1Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIITD1Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIITD1Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIITD1Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIITD1Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIITD1Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIITD1Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIITD1Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIITD1Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIITD1Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIITD1Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIITD1Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIITD1Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIITD1Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIITD1Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIITD1Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIITD1Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIITD1Cntl                            {\
	    UNSG32 uRGMIITD1Cntl_DS0                           :  1;\
	    UNSG32 uRGMIITD1Cntl_DS1                           :  1;\
	    UNSG32 uRGMIITD1Cntl_DS2                           :  1;\
	    UNSG32 uRGMIITD1Cntl_IE                            :  1;\
	    UNSG32 uRGMIITD1Cntl_PD                            :  1;\
	    UNSG32 uRGMIITD1Cntl_PU                            :  1;\
	    UNSG32 uRGMIITD1Cntl_SL                            :  1;\
	    UNSG32 uRGMIITD1Cntl_ST                            :  1;\
	    UNSG32 RSVDx88B0_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIITD1Cntl;
	    struct w32Gbl_RGMIITD1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIITD2Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIITD2Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIITD2Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIITD2Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIITD2Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIITD2Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIITD2Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIITD2Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIITD2Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIITD2Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIITD2Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIITD2Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIITD2Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIITD2Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIITD2Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIITD2Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIITD2Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIITD2Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIITD2Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIITD2Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIITD2Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIITD2Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIITD2Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIITD2Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIITD2Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIITD2Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIITD2Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIITD2Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIITD2Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIITD2Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIITD2Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIITD2Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIITD2Cntl                            {\
	    UNSG32 uRGMIITD2Cntl_DS0                           :  1;\
	    UNSG32 uRGMIITD2Cntl_DS1                           :  1;\
	    UNSG32 uRGMIITD2Cntl_DS2                           :  1;\
	    UNSG32 uRGMIITD2Cntl_IE                            :  1;\
	    UNSG32 uRGMIITD2Cntl_PD                            :  1;\
	    UNSG32 uRGMIITD2Cntl_PU                            :  1;\
	    UNSG32 uRGMIITD2Cntl_SL                            :  1;\
	    UNSG32 uRGMIITD2Cntl_ST                            :  1;\
	    UNSG32 RSVDx88B4_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIITD2Cntl;
	    struct w32Gbl_RGMIITD2Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIITD3Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIITD3Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIITD3Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIITD3Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIITD3Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIITD3Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIITD3Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIITD3Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIITD3Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIITD3Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIITD3Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIITD3Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIITD3Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIITD3Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIITD3Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIITD3Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIITD3Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIITD3Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIITD3Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIITD3Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIITD3Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIITD3Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIITD3Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIITD3Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIITD3Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIITD3Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIITD3Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIITD3Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIITD3Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIITD3Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIITD3Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIITD3Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIITD3Cntl                            {\
	    UNSG32 uRGMIITD3Cntl_DS0                           :  1;\
	    UNSG32 uRGMIITD3Cntl_DS1                           :  1;\
	    UNSG32 uRGMIITD3Cntl_DS2                           :  1;\
	    UNSG32 uRGMIITD3Cntl_IE                            :  1;\
	    UNSG32 uRGMIITD3Cntl_PD                            :  1;\
	    UNSG32 uRGMIITD3Cntl_PU                            :  1;\
	    UNSG32 uRGMIITD3Cntl_SL                            :  1;\
	    UNSG32 uRGMIITD3Cntl_ST                            :  1;\
	    UNSG32 RSVDx88B8_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIITD3Cntl;
	    struct w32Gbl_RGMIITD3Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIITXCTLCntl_DS0(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIITXCTLCntl_DS0(r32, v)               _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIITXCTLCntl_DS0(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIITXCTLCntl_DS0(r16, v)               _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIITXCTLCntl_DS1(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIITXCTLCntl_DS1(r32, v)               _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIITXCTLCntl_DS1(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIITXCTLCntl_DS1(r16, v)               _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIITXCTLCntl_DS2(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIITXCTLCntl_DS2(r32, v)               _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIITXCTLCntl_DS2(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIITXCTLCntl_DS2(r16, v)               _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIITXCTLCntl_IE(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIITXCTLCntl_IE(r32, v)                _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIITXCTLCntl_IE(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIITXCTLCntl_IE(r16, v)                _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIITXCTLCntl_PD(r32)                  _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIITXCTLCntl_PD(r32, v)                _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIITXCTLCntl_PD(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIITXCTLCntl_PD(r16, v)                _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIITXCTLCntl_PU(r32)                  _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIITXCTLCntl_PU(r32, v)                _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIITXCTLCntl_PU(r16)                  _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIITXCTLCntl_PU(r16, v)                _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIITXCTLCntl_SL(r32)                  _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIITXCTLCntl_SL(r32, v)                _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIITXCTLCntl_SL(r16)                  _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIITXCTLCntl_SL(r16, v)                _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIITXCTLCntl_ST(r32)                  _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIITXCTLCntl_ST(r32, v)                _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIITXCTLCntl_ST(r16)                  _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIITXCTLCntl_ST(r16, v)                _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIITXCTLCntl                          {\
	    UNSG32 uRGMIITXCTLCntl_DS0                         :  1;\
	    UNSG32 uRGMIITXCTLCntl_DS1                         :  1;\
	    UNSG32 uRGMIITXCTLCntl_DS2                         :  1;\
	    UNSG32 uRGMIITXCTLCntl_IE                          :  1;\
	    UNSG32 uRGMIITXCTLCntl_PD                          :  1;\
	    UNSG32 uRGMIITXCTLCntl_PU                          :  1;\
	    UNSG32 uRGMIITXCTLCntl_SL                          :  1;\
	    UNSG32 uRGMIITXCTLCntl_ST                          :  1;\
	    UNSG32 RSVDx88BC_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIITXCTLCntl;
	    struct w32Gbl_RGMIITXCTLCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIIRXCCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIIRXCCntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIIRXCCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIIRXCCntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIIRXCCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIIRXCCntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIIRXCCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIIRXCCntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIIRXCCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIIRXCCntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIIRXCCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIIRXCCntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIIRXCCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIIRXCCntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIIRXCCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIIRXCCntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIIRXCCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIIRXCCntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIIRXCCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIIRXCCntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIIRXCCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIIRXCCntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIIRXCCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIIRXCCntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIIRXCCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIIRXCCntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIIRXCCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIIRXCCntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIIRXCCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIIRXCCntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIIRXCCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIIRXCCntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIIRXCCntl                            {\
	    UNSG32 uRGMIIRXCCntl_DS0                           :  1;\
	    UNSG32 uRGMIIRXCCntl_DS1                           :  1;\
	    UNSG32 uRGMIIRXCCntl_DS2                           :  1;\
	    UNSG32 uRGMIIRXCCntl_IE                            :  1;\
	    UNSG32 uRGMIIRXCCntl_PD                            :  1;\
	    UNSG32 uRGMIIRXCCntl_PU                            :  1;\
	    UNSG32 uRGMIIRXCCntl_SL                            :  1;\
	    UNSG32 uRGMIIRXCCntl_ST                            :  1;\
	    UNSG32 RSVDx88C0_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIIRXCCntl;
	    struct w32Gbl_RGMIIRXCCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIIRD0Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIIRD0Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIIRD0Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIIRD0Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIIRD0Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIIRD0Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIIRD0Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIIRD0Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIIRD0Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIIRD0Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIIRD0Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIIRD0Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIIRD0Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIIRD0Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIIRD0Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIIRD0Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIIRD0Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIIRD0Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIIRD0Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIIRD0Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIIRD0Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIIRD0Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIIRD0Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIIRD0Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIIRD0Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIIRD0Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIIRD0Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIIRD0Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIIRD0Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIIRD0Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIIRD0Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIIRD0Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIIRD0Cntl                            {\
	    UNSG32 uRGMIIRD0Cntl_DS0                           :  1;\
	    UNSG32 uRGMIIRD0Cntl_DS1                           :  1;\
	    UNSG32 uRGMIIRD0Cntl_DS2                           :  1;\
	    UNSG32 uRGMIIRD0Cntl_IE                            :  1;\
	    UNSG32 uRGMIIRD0Cntl_PD                            :  1;\
	    UNSG32 uRGMIIRD0Cntl_PU                            :  1;\
	    UNSG32 uRGMIIRD0Cntl_SL                            :  1;\
	    UNSG32 uRGMIIRD0Cntl_ST                            :  1;\
	    UNSG32 RSVDx88C4_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIIRD0Cntl;
	    struct w32Gbl_RGMIIRD0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIIRD1Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIIRD1Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIIRD1Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIIRD1Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIIRD1Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIIRD1Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIIRD1Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIIRD1Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIIRD1Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIIRD1Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIIRD1Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIIRD1Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIIRD1Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIIRD1Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIIRD1Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIIRD1Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIIRD1Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIIRD1Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIIRD1Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIIRD1Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIIRD1Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIIRD1Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIIRD1Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIIRD1Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIIRD1Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIIRD1Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIIRD1Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIIRD1Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIIRD1Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIIRD1Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIIRD1Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIIRD1Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIIRD1Cntl                            {\
	    UNSG32 uRGMIIRD1Cntl_DS0                           :  1;\
	    UNSG32 uRGMIIRD1Cntl_DS1                           :  1;\
	    UNSG32 uRGMIIRD1Cntl_DS2                           :  1;\
	    UNSG32 uRGMIIRD1Cntl_IE                            :  1;\
	    UNSG32 uRGMIIRD1Cntl_PD                            :  1;\
	    UNSG32 uRGMIIRD1Cntl_PU                            :  1;\
	    UNSG32 uRGMIIRD1Cntl_SL                            :  1;\
	    UNSG32 uRGMIIRD1Cntl_ST                            :  1;\
	    UNSG32 RSVDx88C8_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIIRD1Cntl;
	    struct w32Gbl_RGMIIRD1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIIRD2Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIIRD2Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIIRD2Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIIRD2Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIIRD2Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIIRD2Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIIRD2Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIIRD2Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIIRD2Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIIRD2Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIIRD2Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIIRD2Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIIRD2Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIIRD2Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIIRD2Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIIRD2Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIIRD2Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIIRD2Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIIRD2Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIIRD2Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIIRD2Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIIRD2Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIIRD2Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIIRD2Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIIRD2Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIIRD2Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIIRD2Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIIRD2Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIIRD2Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIIRD2Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIIRD2Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIIRD2Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIIRD2Cntl                            {\
	    UNSG32 uRGMIIRD2Cntl_DS0                           :  1;\
	    UNSG32 uRGMIIRD2Cntl_DS1                           :  1;\
	    UNSG32 uRGMIIRD2Cntl_DS2                           :  1;\
	    UNSG32 uRGMIIRD2Cntl_IE                            :  1;\
	    UNSG32 uRGMIIRD2Cntl_PD                            :  1;\
	    UNSG32 uRGMIIRD2Cntl_PU                            :  1;\
	    UNSG32 uRGMIIRD2Cntl_SL                            :  1;\
	    UNSG32 uRGMIIRD2Cntl_ST                            :  1;\
	    UNSG32 RSVDx88CC_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIIRD2Cntl;
	    struct w32Gbl_RGMIIRD2Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIIRD3Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIIRD3Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIIRD3Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIIRD3Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIIRD3Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIIRD3Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIIRD3Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIIRD3Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIIRD3Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIIRD3Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIIRD3Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIIRD3Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIIRD3Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIIRD3Cntl_IE(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIIRD3Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIIRD3Cntl_IE(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIIRD3Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIIRD3Cntl_PD(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIIRD3Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIIRD3Cntl_PD(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIIRD3Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIIRD3Cntl_PU(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIIRD3Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIIRD3Cntl_PU(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIIRD3Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIIRD3Cntl_SL(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIIRD3Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIIRD3Cntl_SL(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIIRD3Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIIRD3Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIIRD3Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIIRD3Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIIRD3Cntl                            {\
	    UNSG32 uRGMIIRD3Cntl_DS0                           :  1;\
	    UNSG32 uRGMIIRD3Cntl_DS1                           :  1;\
	    UNSG32 uRGMIIRD3Cntl_DS2                           :  1;\
	    UNSG32 uRGMIIRD3Cntl_IE                            :  1;\
	    UNSG32 uRGMIIRD3Cntl_PD                            :  1;\
	    UNSG32 uRGMIIRD3Cntl_PU                            :  1;\
	    UNSG32 uRGMIIRD3Cntl_SL                            :  1;\
	    UNSG32 uRGMIIRD3Cntl_ST                            :  1;\
	    UNSG32 RSVDx88D0_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIIRD3Cntl;
	    struct w32Gbl_RGMIIRD3Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RGMIIRXCTLCntl_DS0(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RGMIIRXCTLCntl_DS0(r32, v)               _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_DS0(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RGMIIRXCTLCntl_DS0(r16, v)               _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_DS1(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RGMIIRXCTLCntl_DS1(r32, v)               _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_DS1(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RGMIIRXCTLCntl_DS1(r16, v)               _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_DS2(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RGMIIRXCTLCntl_DS2(r32, v)               _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_DS2(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RGMIIRXCTLCntl_DS2(r16, v)               _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_IE(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RGMIIRXCTLCntl_IE(r32, v)                _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_IE(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RGMIIRXCTLCntl_IE(r16, v)                _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_PD(r32)                  _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RGMIIRXCTLCntl_PD(r32, v)                _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_PD(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RGMIIRXCTLCntl_PD(r16, v)                _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_PU(r32)                  _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RGMIIRXCTLCntl_PU(r32, v)                _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_PU(r16)                  _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RGMIIRXCTLCntl_PU(r16, v)                _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_SL(r32)                  _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RGMIIRXCTLCntl_SL(r32, v)                _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_SL(r16)                  _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RGMIIRXCTLCntl_SL(r16, v)                _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RGMIIRXCTLCntl_ST(r32)                  _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RGMIIRXCTLCntl_ST(r32, v)                _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RGMIIRXCTLCntl_ST(r16)                  _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RGMIIRXCTLCntl_ST(r16, v)                _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_RGMIIRXCTLCntl                          {\
	    UNSG32 uRGMIIRXCTLCntl_DS0                         :  1;\
	    UNSG32 uRGMIIRXCTLCntl_DS1                         :  1;\
	    UNSG32 uRGMIIRXCTLCntl_DS2                         :  1;\
	    UNSG32 uRGMIIRXCTLCntl_IE                          :  1;\
	    UNSG32 uRGMIIRXCTLCntl_PD                          :  1;\
	    UNSG32 uRGMIIRXCTLCntl_PU                          :  1;\
	    UNSG32 uRGMIIRXCTLCntl_SL                          :  1;\
	    UNSG32 uRGMIIRXCTLCntl_ST                          :  1;\
	    UNSG32 RSVDx88D4_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_RGMIIRXCTLCntl;
	    struct w32Gbl_RGMIIRXCTLCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RCLKICntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RCLKICntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_RCLKICntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RCLKICntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_RCLKICntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RCLKICntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_RCLKICntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RCLKICntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_RCLKICntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RCLKICntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_RCLKICntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RCLKICntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_RCLKICntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RCLKICntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_RCLKICntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RCLKICntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_RCLKICntl_RD0(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RCLKICntl_RD0(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_RCLKICntl_RD0(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RCLKICntl_RD0(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_RCLKICntl_RD1(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RCLKICntl_RD1(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_RCLKICntl_RD1(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RCLKICntl_RD1(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_RCLKICntl_REF0(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RCLKICntl_REF0(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_RCLKICntl_REF0(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RCLKICntl_REF0(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_RCLKICntl_REF1(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RCLKICntl_REF1(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_RCLKICntl_REF1(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RCLKICntl_REF1(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_RCLKICntl_XE(r32)                       _BFGET_(r32, 8, 8)
    #define   SET32Gbl_RCLKICntl_XE(r32, v)                     _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_RCLKICntl_XE(r16)                       _BFGET_(r16, 8, 8)
    #define   SET16Gbl_RCLKICntl_XE(r16, v)                     _BFSET_(r16, 8, 8, v)

    #define     w32Gbl_RCLKICntl                               {\
	    UNSG32 uRCLKICntl_DS0                              :  1;\
	    UNSG32 uRCLKICntl_DS1                              :  1;\
	    UNSG32 uRCLKICntl_DS2                              :  1;\
	    UNSG32 uRCLKICntl_DS3                              :  1;\
	    UNSG32 uRCLKICntl_RD0                              :  1;\
	    UNSG32 uRCLKICntl_RD1                              :  1;\
	    UNSG32 uRCLKICntl_REF0                             :  1;\
	    UNSG32 uRCLKICntl_REF1                             :  1;\
	    UNSG32 uRCLKICntl_XE                               :  1;\
	    UNSG32 RSVDx88D8_b9                                : 23;\
	}
    union { UNSG32 u32Gbl_RCLKICntl;
	    struct w32Gbl_RCLKICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DOCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DOCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S1_DOCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DOCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S1_DOCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DOCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S1_DOCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DOCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S1_DOCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DOCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S1_DOCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DOCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S1_DOCntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_DOCntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S1_DOCntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_DOCntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S1_DOCntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_DOCntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S1_DOCntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_DOCntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S1_DOCntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_DOCntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S1_DOCntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_DOCntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S1_DOCntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_DOCntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S1_DOCntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_DOCntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S1_DOCntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_DOCntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S1_DOCntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_DOCntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S1_DOCntl                             {\
	    UNSG32 uI2S1_DOCntl_DS0                            :  1;\
	    UNSG32 uI2S1_DOCntl_DS1                            :  1;\
	    UNSG32 uI2S1_DOCntl_DS2                            :  1;\
	    UNSG32 uI2S1_DOCntl_IE                             :  1;\
	    UNSG32 uI2S1_DOCntl_PD                             :  1;\
	    UNSG32 uI2S1_DOCntl_PU                             :  1;\
	    UNSG32 uI2S1_DOCntl_SL                             :  1;\
	    UNSG32 uI2S1_DOCntl_ST                             :  1;\
	    UNSG32 RSVDx88DC_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S1_DOCntl;
	    struct w32Gbl_I2S1_DOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DICntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DICntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S1_DICntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DICntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S1_DICntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DICntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S1_DICntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DICntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S1_DICntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DICntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S1_DICntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DICntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S1_DICntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_DICntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S1_DICntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_DICntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S1_DICntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_DICntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S1_DICntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_DICntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S1_DICntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_DICntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S1_DICntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_DICntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S1_DICntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_DICntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S1_DICntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_DICntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S1_DICntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_DICntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S1_DICntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_DICntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S1_DICntl                             {\
	    UNSG32 uI2S1_DICntl_DS0                            :  1;\
	    UNSG32 uI2S1_DICntl_DS1                            :  1;\
	    UNSG32 uI2S1_DICntl_DS2                            :  1;\
	    UNSG32 uI2S1_DICntl_IE                             :  1;\
	    UNSG32 uI2S1_DICntl_PD                             :  1;\
	    UNSG32 uI2S1_DICntl_PU                             :  1;\
	    UNSG32 uI2S1_DICntl_SL                             :  1;\
	    UNSG32 uI2S1_DICntl_ST                             :  1;\
	    UNSG32 RSVDx88E0_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S1_DICntl;
	    struct w32Gbl_I2S1_DICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_LRCKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_LRCKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S1_LRCKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_LRCKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S1_LRCKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_LRCKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S1_LRCKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_LRCKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S1_LRCKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_LRCKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S1_LRCKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_LRCKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S1_LRCKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_LRCKCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S1_LRCKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_LRCKCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S1_LRCKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_LRCKCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S1_LRCKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_LRCKCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S1_LRCKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_LRCKCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S1_LRCKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_LRCKCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S1_LRCKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_LRCKCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S1_LRCKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_LRCKCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S1_LRCKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_LRCKCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S1_LRCKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_LRCKCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S1_LRCKCntl                           {\
	    UNSG32 uI2S1_LRCKCntl_DS0                          :  1;\
	    UNSG32 uI2S1_LRCKCntl_DS1                          :  1;\
	    UNSG32 uI2S1_LRCKCntl_DS2                          :  1;\
	    UNSG32 uI2S1_LRCKCntl_IE                           :  1;\
	    UNSG32 uI2S1_LRCKCntl_PD                           :  1;\
	    UNSG32 uI2S1_LRCKCntl_PU                           :  1;\
	    UNSG32 uI2S1_LRCKCntl_SL                           :  1;\
	    UNSG32 uI2S1_LRCKCntl_ST                           :  1;\
	    UNSG32 RSVDx88E4_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S1_LRCKCntl;
	    struct w32Gbl_I2S1_LRCKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_BCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_BCLKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S1_BCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_BCLKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S1_BCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_BCLKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S1_BCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_BCLKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S1_BCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_BCLKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S1_BCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_BCLKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S1_BCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_BCLKCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S1_BCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_BCLKCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S1_BCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_BCLKCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S1_BCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_BCLKCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S1_BCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_BCLKCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S1_BCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_BCLKCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S1_BCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_BCLKCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S1_BCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_BCLKCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S1_BCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_BCLKCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S1_BCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_BCLKCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S1_BCLKCntl                           {\
	    UNSG32 uI2S1_BCLKCntl_DS0                          :  1;\
	    UNSG32 uI2S1_BCLKCntl_DS1                          :  1;\
	    UNSG32 uI2S1_BCLKCntl_DS2                          :  1;\
	    UNSG32 uI2S1_BCLKCntl_IE                           :  1;\
	    UNSG32 uI2S1_BCLKCntl_PD                           :  1;\
	    UNSG32 uI2S1_BCLKCntl_PU                           :  1;\
	    UNSG32 uI2S1_BCLKCntl_SL                           :  1;\
	    UNSG32 uI2S1_BCLKCntl_ST                           :  1;\
	    UNSG32 RSVDx88E8_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S1_BCLKCntl;
	    struct w32Gbl_I2S1_BCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_MCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_MCLKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S1_MCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_MCLKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S1_MCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_MCLKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S1_MCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_MCLKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S1_MCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_MCLKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S1_MCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_MCLKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S1_MCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_MCLKCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S1_MCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_MCLKCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S1_MCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_MCLKCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S1_MCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_MCLKCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S1_MCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_MCLKCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S1_MCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_MCLKCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S1_MCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_MCLKCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S1_MCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_MCLKCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S1_MCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_MCLKCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S1_MCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_MCLKCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S1_MCLKCntl                           {\
	    UNSG32 uI2S1_MCLKCntl_DS0                          :  1;\
	    UNSG32 uI2S1_MCLKCntl_DS1                          :  1;\
	    UNSG32 uI2S1_MCLKCntl_DS2                          :  1;\
	    UNSG32 uI2S1_MCLKCntl_IE                           :  1;\
	    UNSG32 uI2S1_MCLKCntl_PD                           :  1;\
	    UNSG32 uI2S1_MCLKCntl_PU                           :  1;\
	    UNSG32 uI2S1_MCLKCntl_SL                           :  1;\
	    UNSG32 uI2S1_MCLKCntl_ST                           :  1;\
	    UNSG32 RSVDx88EC_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S1_MCLKCntl;
	    struct w32Gbl_I2S1_MCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_LRCKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_LRCKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S2_LRCKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_LRCKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S2_LRCKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_LRCKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S2_LRCKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_LRCKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S2_LRCKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_LRCKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S2_LRCKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_LRCKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S2_LRCKCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_LRCKCntl_DS3(r32, v)                _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S2_LRCKCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_LRCKCntl_DS3(r16, v)                _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S2_LRCKCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_LRCKCntl_IE(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S2_LRCKCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_LRCKCntl_IE(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S2_LRCKCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_LRCKCntl_PE(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S2_LRCKCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_LRCKCntl_PE(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S2_LRCKCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_LRCKCntl_PS(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S2_LRCKCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_LRCKCntl_PS(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S2_LRCKCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_LRCKCntl_SL(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S2_LRCKCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_LRCKCntl_SL(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_I2S2_LRCKCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_I2S2_LRCKCntl_SPU(r32, v)                _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_I2S2_LRCKCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_I2S2_LRCKCntl_SPU(r16, v)                _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_I2S2_LRCKCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_I2S2_LRCKCntl_ST(r32, v)                 _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_I2S2_LRCKCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_I2S2_LRCKCntl_ST(r16, v)                 _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_I2S2_LRCKCntl                           {\
	    UNSG32 uI2S2_LRCKCntl_DS0                          :  1;\
	    UNSG32 uI2S2_LRCKCntl_DS1                          :  1;\
	    UNSG32 uI2S2_LRCKCntl_DS2                          :  1;\
	    UNSG32 uI2S2_LRCKCntl_DS3                          :  1;\
	    UNSG32 uI2S2_LRCKCntl_IE                           :  1;\
	    UNSG32 uI2S2_LRCKCntl_PE                           :  1;\
	    UNSG32 uI2S2_LRCKCntl_PS                           :  1;\
	    UNSG32 uI2S2_LRCKCntl_SL                           :  1;\
	    UNSG32 uI2S2_LRCKCntl_SPU                          :  1;\
	    UNSG32 uI2S2_LRCKCntl_ST                           :  1;\
	    UNSG32 RSVDx88F0_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_I2S2_LRCKCntl;
	    struct w32Gbl_I2S2_LRCKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_BCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_BCLKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S2_BCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_BCLKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S2_BCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_BCLKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S2_BCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_BCLKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S2_BCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_BCLKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S2_BCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_BCLKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S2_BCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_BCLKCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S2_BCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_BCLKCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S2_BCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_BCLKCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S2_BCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_BCLKCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S2_BCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_BCLKCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S2_BCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_BCLKCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S2_BCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_BCLKCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S2_BCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_BCLKCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S2_BCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_BCLKCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S2_BCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_BCLKCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S2_BCLKCntl                           {\
	    UNSG32 uI2S2_BCLKCntl_DS0                          :  1;\
	    UNSG32 uI2S2_BCLKCntl_DS1                          :  1;\
	    UNSG32 uI2S2_BCLKCntl_DS2                          :  1;\
	    UNSG32 uI2S2_BCLKCntl_IE                           :  1;\
	    UNSG32 uI2S2_BCLKCntl_PD                           :  1;\
	    UNSG32 uI2S2_BCLKCntl_PU                           :  1;\
	    UNSG32 uI2S2_BCLKCntl_SL                           :  1;\
	    UNSG32 uI2S2_BCLKCntl_ST                           :  1;\
	    UNSG32 RSVDx88F4_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S2_BCLKCntl;
	    struct w32Gbl_I2S2_BCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DOCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DOCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S2_DOCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DOCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S2_DOCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DOCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S2_DOCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DOCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S2_DOCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DOCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S2_DOCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DOCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S2_DOCntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_DOCntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S2_DOCntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_DOCntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S2_DOCntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_DOCntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S2_DOCntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_DOCntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S2_DOCntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_DOCntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S2_DOCntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_DOCntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S2_DOCntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_DOCntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S2_DOCntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_DOCntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S2_DOCntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_DOCntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S2_DOCntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_DOCntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S2_DOCntl                             {\
	    UNSG32 uI2S2_DOCntl_DS0                            :  1;\
	    UNSG32 uI2S2_DOCntl_DS1                            :  1;\
	    UNSG32 uI2S2_DOCntl_DS2                            :  1;\
	    UNSG32 uI2S2_DOCntl_IE                             :  1;\
	    UNSG32 uI2S2_DOCntl_PD                             :  1;\
	    UNSG32 uI2S2_DOCntl_PU                             :  1;\
	    UNSG32 uI2S2_DOCntl_SL                             :  1;\
	    UNSG32 uI2S2_DOCntl_ST                             :  1;\
	    UNSG32 RSVDx88F8_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S2_DOCntl;
	    struct w32Gbl_I2S2_DOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DICntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DICntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S2_DICntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DICntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S2_DICntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DICntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S2_DICntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DICntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S2_DICntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DICntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S2_DICntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DICntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S2_DICntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_DICntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S2_DICntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_DICntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S2_DICntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_DICntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S2_DICntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_DICntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S2_DICntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_DICntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S2_DICntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_DICntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S2_DICntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_DICntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S2_DICntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_DICntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S2_DICntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_DICntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S2_DICntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_DICntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S2_DICntl                             {\
	    UNSG32 uI2S2_DICntl_DS0                            :  1;\
	    UNSG32 uI2S2_DICntl_DS1                            :  1;\
	    UNSG32 uI2S2_DICntl_DS2                            :  1;\
	    UNSG32 uI2S2_DICntl_IE                             :  1;\
	    UNSG32 uI2S2_DICntl_PD                             :  1;\
	    UNSG32 uI2S2_DICntl_PU                             :  1;\
	    UNSG32 uI2S2_DICntl_SL                             :  1;\
	    UNSG32 uI2S2_DICntl_ST                             :  1;\
	    UNSG32 RSVDx88FC_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S2_DICntl;
	    struct w32Gbl_I2S2_DICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PDM_CLKIOCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PDM_CLKIOCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PDM_CLKIOCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PDM_CLKIOCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PDM_CLKIOCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PDM_CLKIOCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PDM_CLKIOCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PDM_CLKIOCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PDM_CLKIOCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PDM_CLKIOCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PDM_CLKIOCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PDM_CLKIOCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PDM_CLKIOCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PDM_CLKIOCntl_IE(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PDM_CLKIOCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PDM_CLKIOCntl_IE(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PDM_CLKIOCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PDM_CLKIOCntl_PD(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PDM_CLKIOCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PDM_CLKIOCntl_PD(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PDM_CLKIOCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PDM_CLKIOCntl_PU(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PDM_CLKIOCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PDM_CLKIOCntl_PU(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PDM_CLKIOCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PDM_CLKIOCntl_SL(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PDM_CLKIOCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PDM_CLKIOCntl_SL(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PDM_CLKIOCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PDM_CLKIOCntl_ST(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PDM_CLKIOCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PDM_CLKIOCntl_ST(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PDM_CLKIOCntl                           {\
	    UNSG32 uPDM_CLKIOCntl_DS0                          :  1;\
	    UNSG32 uPDM_CLKIOCntl_DS1                          :  1;\
	    UNSG32 uPDM_CLKIOCntl_DS2                          :  1;\
	    UNSG32 uPDM_CLKIOCntl_IE                           :  1;\
	    UNSG32 uPDM_CLKIOCntl_PD                           :  1;\
	    UNSG32 uPDM_CLKIOCntl_PU                           :  1;\
	    UNSG32 uPDM_CLKIOCntl_SL                           :  1;\
	    UNSG32 uPDM_CLKIOCntl_ST                           :  1;\
	    UNSG32 RSVDx8900_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PDM_CLKIOCntl;
	    struct w32Gbl_PDM_CLKIOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PDM_DI0Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PDM_DI0Cntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PDM_DI0Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PDM_DI0Cntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PDM_DI0Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PDM_DI0Cntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PDM_DI0Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PDM_DI0Cntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PDM_DI0Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PDM_DI0Cntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PDM_DI0Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PDM_DI0Cntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PDM_DI0Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PDM_DI0Cntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PDM_DI0Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PDM_DI0Cntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PDM_DI0Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PDM_DI0Cntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PDM_DI0Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PDM_DI0Cntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PDM_DI0Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PDM_DI0Cntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PDM_DI0Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PDM_DI0Cntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PDM_DI0Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PDM_DI0Cntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PDM_DI0Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PDM_DI0Cntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PDM_DI0Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PDM_DI0Cntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PDM_DI0Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PDM_DI0Cntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PDM_DI0Cntl                             {\
	    UNSG32 uPDM_DI0Cntl_DS0                            :  1;\
	    UNSG32 uPDM_DI0Cntl_DS1                            :  1;\
	    UNSG32 uPDM_DI0Cntl_DS2                            :  1;\
	    UNSG32 uPDM_DI0Cntl_IE                             :  1;\
	    UNSG32 uPDM_DI0Cntl_PD                             :  1;\
	    UNSG32 uPDM_DI0Cntl_PU                             :  1;\
	    UNSG32 uPDM_DI0Cntl_SL                             :  1;\
	    UNSG32 uPDM_DI0Cntl_ST                             :  1;\
	    UNSG32 RSVDx8904_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PDM_DI0Cntl;
	    struct w32Gbl_PDM_DI0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PDM_DI1Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PDM_DI1Cntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_PDM_DI1Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PDM_DI1Cntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_PDM_DI1Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PDM_DI1Cntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_PDM_DI1Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PDM_DI1Cntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_PDM_DI1Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PDM_DI1Cntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_PDM_DI1Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PDM_DI1Cntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_PDM_DI1Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PDM_DI1Cntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_PDM_DI1Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PDM_DI1Cntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_PDM_DI1Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PDM_DI1Cntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_PDM_DI1Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PDM_DI1Cntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_PDM_DI1Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PDM_DI1Cntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_PDM_DI1Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PDM_DI1Cntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_PDM_DI1Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PDM_DI1Cntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_PDM_DI1Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PDM_DI1Cntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_PDM_DI1Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PDM_DI1Cntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_PDM_DI1Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PDM_DI1Cntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_PDM_DI1Cntl                             {\
	    UNSG32 uPDM_DI1Cntl_DS0                            :  1;\
	    UNSG32 uPDM_DI1Cntl_DS1                            :  1;\
	    UNSG32 uPDM_DI1Cntl_DS2                            :  1;\
	    UNSG32 uPDM_DI1Cntl_IE                             :  1;\
	    UNSG32 uPDM_DI1Cntl_PD                             :  1;\
	    UNSG32 uPDM_DI1Cntl_PU                             :  1;\
	    UNSG32 uPDM_DI1Cntl_SL                             :  1;\
	    UNSG32 uPDM_DI1Cntl_ST                             :  1;\
	    UNSG32 RSVDx8908_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_PDM_DI1Cntl;
	    struct w32Gbl_PDM_DI1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_DOCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_DOCntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S3_DOCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_DOCntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S3_DOCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_DOCntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S3_DOCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_DOCntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S3_DOCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_DOCntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S3_DOCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_DOCntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S3_DOCntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_DOCntl_IE(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S3_DOCntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_DOCntl_IE(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S3_DOCntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_DOCntl_PD(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S3_DOCntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_DOCntl_PD(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S3_DOCntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_DOCntl_PU(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S3_DOCntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_DOCntl_PU(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S3_DOCntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_DOCntl_SL(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S3_DOCntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_DOCntl_SL(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S3_DOCntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_DOCntl_ST(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S3_DOCntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_DOCntl_ST(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_I2S3_DOCntl                             {\
	    UNSG32 uI2S3_DOCntl_DS0                            :  1;\
	    UNSG32 uI2S3_DOCntl_DS1                            :  1;\
	    UNSG32 uI2S3_DOCntl_DS2                            :  1;\
	    UNSG32 uI2S3_DOCntl_IE                             :  1;\
	    UNSG32 uI2S3_DOCntl_PD                             :  1;\
	    UNSG32 uI2S3_DOCntl_PU                             :  1;\
	    UNSG32 uI2S3_DOCntl_SL                             :  1;\
	    UNSG32 uI2S3_DOCntl_ST                             :  1;\
	    UNSG32 RSVDx890C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_I2S3_DOCntl;
	    struct w32Gbl_I2S3_DOCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_LRCKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_LRCKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S3_LRCKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_LRCKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S3_LRCKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_LRCKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S3_LRCKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_LRCKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S3_LRCKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_LRCKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S3_LRCKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_LRCKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S3_LRCKCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_LRCKCntl_DS3(r32, v)                _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S3_LRCKCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_LRCKCntl_DS3(r16, v)                _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S3_LRCKCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_LRCKCntl_IE(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S3_LRCKCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_LRCKCntl_IE(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S3_LRCKCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_LRCKCntl_PE(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S3_LRCKCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_LRCKCntl_PE(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S3_LRCKCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_LRCKCntl_PS(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S3_LRCKCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_LRCKCntl_PS(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S3_LRCKCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_LRCKCntl_SL(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S3_LRCKCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_LRCKCntl_SL(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_I2S3_LRCKCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_I2S3_LRCKCntl_SPU(r32, v)                _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_I2S3_LRCKCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_I2S3_LRCKCntl_SPU(r16, v)                _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_I2S3_LRCKCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_I2S3_LRCKCntl_ST(r32, v)                 _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_I2S3_LRCKCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_I2S3_LRCKCntl_ST(r16, v)                 _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_I2S3_LRCKCntl                           {\
	    UNSG32 uI2S3_LRCKCntl_DS0                          :  1;\
	    UNSG32 uI2S3_LRCKCntl_DS1                          :  1;\
	    UNSG32 uI2S3_LRCKCntl_DS2                          :  1;\
	    UNSG32 uI2S3_LRCKCntl_DS3                          :  1;\
	    UNSG32 uI2S3_LRCKCntl_IE                           :  1;\
	    UNSG32 uI2S3_LRCKCntl_PE                           :  1;\
	    UNSG32 uI2S3_LRCKCntl_PS                           :  1;\
	    UNSG32 uI2S3_LRCKCntl_SL                           :  1;\
	    UNSG32 uI2S3_LRCKCntl_SPU                          :  1;\
	    UNSG32 uI2S3_LRCKCntl_ST                           :  1;\
	    UNSG32 RSVDx8910_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_I2S3_LRCKCntl;
	    struct w32Gbl_I2S3_LRCKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_BCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_BCLKCntl_DS0(r32, v)                _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S3_BCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_BCLKCntl_DS0(r16, v)                _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S3_BCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_BCLKCntl_DS1(r32, v)                _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S3_BCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_BCLKCntl_DS1(r16, v)                _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S3_BCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_BCLKCntl_DS2(r32, v)                _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S3_BCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_BCLKCntl_DS2(r16, v)                _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S3_BCLKCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_BCLKCntl_DS3(r32, v)                _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S3_BCLKCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_BCLKCntl_DS3(r16, v)                _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S3_BCLKCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_BCLKCntl_IE(r32, v)                 _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S3_BCLKCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_BCLKCntl_IE(r16, v)                 _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S3_BCLKCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_BCLKCntl_PE(r32, v)                 _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S3_BCLKCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_BCLKCntl_PE(r16, v)                 _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S3_BCLKCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_BCLKCntl_PS(r32, v)                 _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S3_BCLKCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_BCLKCntl_PS(r16, v)                 _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S3_BCLKCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_BCLKCntl_SL(r32, v)                 _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S3_BCLKCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_BCLKCntl_SL(r16, v)                 _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_I2S3_BCLKCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_I2S3_BCLKCntl_SPU(r32, v)                _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_I2S3_BCLKCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_I2S3_BCLKCntl_SPU(r16, v)                _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_I2S3_BCLKCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_I2S3_BCLKCntl_ST(r32, v)                 _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_I2S3_BCLKCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_I2S3_BCLKCntl_ST(r16, v)                 _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_I2S3_BCLKCntl                           {\
	    UNSG32 uI2S3_BCLKCntl_DS0                          :  1;\
	    UNSG32 uI2S3_BCLKCntl_DS1                          :  1;\
	    UNSG32 uI2S3_BCLKCntl_DS2                          :  1;\
	    UNSG32 uI2S3_BCLKCntl_DS3                          :  1;\
	    UNSG32 uI2S3_BCLKCntl_IE                           :  1;\
	    UNSG32 uI2S3_BCLKCntl_PE                           :  1;\
	    UNSG32 uI2S3_BCLKCntl_PS                           :  1;\
	    UNSG32 uI2S3_BCLKCntl_SL                           :  1;\
	    UNSG32 uI2S3_BCLKCntl_SPU                          :  1;\
	    UNSG32 uI2S3_BCLKCntl_ST                           :  1;\
	    UNSG32 RSVDx8914_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_I2S3_BCLKCntl;
	    struct w32Gbl_I2S3_BCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_DICntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_DICntl_DS0(r32, v)                  _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_I2S3_DICntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_DICntl_DS0(r16, v)                  _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_I2S3_DICntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_DICntl_DS1(r32, v)                  _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_I2S3_DICntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_DICntl_DS1(r16, v)                  _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_I2S3_DICntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_DICntl_DS2(r32, v)                  _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_I2S3_DICntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_DICntl_DS2(r16, v)                  _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_I2S3_DICntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_DICntl_DS3(r32, v)                  _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_I2S3_DICntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_DICntl_DS3(r16, v)                  _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_I2S3_DICntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_DICntl_IE(r32, v)                   _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_I2S3_DICntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_DICntl_IE(r16, v)                   _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_I2S3_DICntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_DICntl_PE(r32, v)                   _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_I2S3_DICntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_DICntl_PE(r16, v)                   _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_I2S3_DICntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_DICntl_PS(r32, v)                   _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_I2S3_DICntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_DICntl_PS(r16, v)                   _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_I2S3_DICntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_DICntl_SL(r32, v)                   _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_I2S3_DICntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_DICntl_SL(r16, v)                   _BFSET_(r16, 7, 7, v)

    #define   GET32Gbl_I2S3_DICntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_I2S3_DICntl_SPU(r32, v)                  _BFSET_(r32, 8, 8, v)
    #define   GET16Gbl_I2S3_DICntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_I2S3_DICntl_SPU(r16, v)                  _BFSET_(r16, 8, 8, v)

    #define   GET32Gbl_I2S3_DICntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_I2S3_DICntl_ST(r32, v)                   _BFSET_(r32, 9, 9, v)
    #define   GET16Gbl_I2S3_DICntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_I2S3_DICntl_ST(r16, v)                   _BFSET_(r16, 9, 9, v)

    #define     w32Gbl_I2S3_DICntl                             {\
	    UNSG32 uI2S3_DICntl_DS0                            :  1;\
	    UNSG32 uI2S3_DICntl_DS1                            :  1;\
	    UNSG32 uI2S3_DICntl_DS2                            :  1;\
	    UNSG32 uI2S3_DICntl_DS3                            :  1;\
	    UNSG32 uI2S3_DICntl_IE                             :  1;\
	    UNSG32 uI2S3_DICntl_PE                             :  1;\
	    UNSG32 uI2S3_DICntl_PS                             :  1;\
	    UNSG32 uI2S3_DICntl_SL                             :  1;\
	    UNSG32 uI2S3_DICntl_SPU                            :  1;\
	    UNSG32 uI2S3_DICntl_ST                             :  1;\
	    UNSG32 RSVDx8918_b10                               : 22;\
	}
    union { UNSG32 u32Gbl_I2S3_DICntl;
	    struct w32Gbl_I2S3_DICntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD0Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD0Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD0Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD0Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD0Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD0Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD0Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD0Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD0Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD0Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD0Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD0Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD0Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD0Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD0Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD0Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD0Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD0Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD0Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD0Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD0Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD0Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD0Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD0Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD0Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD0Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD0Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD0Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD0Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD0Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD0Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD0Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD0Cntl                               {\
	    UNSG32 uLCDD0Cntl_DS0                              :  1;\
	    UNSG32 uLCDD0Cntl_DS1                              :  1;\
	    UNSG32 uLCDD0Cntl_DS2                              :  1;\
	    UNSG32 uLCDD0Cntl_DS3                              :  1;\
	    UNSG32 uLCDD0Cntl_IE                               :  1;\
	    UNSG32 uLCDD0Cntl_PD                               :  1;\
	    UNSG32 uLCDD0Cntl_PU                               :  1;\
	    UNSG32 uLCDD0Cntl_ST                               :  1;\
	    UNSG32 RSVDx891C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD0Cntl;
	    struct w32Gbl_LCDD0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD1Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD1Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD1Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD1Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD1Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD1Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD1Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD1Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD1Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD1Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD1Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD1Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD1Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD1Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD1Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD1Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD1Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD1Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD1Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD1Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD1Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD1Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD1Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD1Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD1Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD1Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD1Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD1Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD1Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD1Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD1Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD1Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD1Cntl                               {\
	    UNSG32 uLCDD1Cntl_DS0                              :  1;\
	    UNSG32 uLCDD1Cntl_DS1                              :  1;\
	    UNSG32 uLCDD1Cntl_DS2                              :  1;\
	    UNSG32 uLCDD1Cntl_DS3                              :  1;\
	    UNSG32 uLCDD1Cntl_IE                               :  1;\
	    UNSG32 uLCDD1Cntl_PD                               :  1;\
	    UNSG32 uLCDD1Cntl_PU                               :  1;\
	    UNSG32 uLCDD1Cntl_ST                               :  1;\
	    UNSG32 RSVDx8920_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD1Cntl;
	    struct w32Gbl_LCDD1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD2Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD2Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD2Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD2Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD2Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD2Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD2Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD2Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD2Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD2Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD2Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD2Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD2Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD2Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD2Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD2Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD2Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD2Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD2Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD2Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD2Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD2Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD2Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD2Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD2Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD2Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD2Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD2Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD2Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD2Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD2Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD2Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD2Cntl                               {\
	    UNSG32 uLCDD2Cntl_DS0                              :  1;\
	    UNSG32 uLCDD2Cntl_DS1                              :  1;\
	    UNSG32 uLCDD2Cntl_DS2                              :  1;\
	    UNSG32 uLCDD2Cntl_DS3                              :  1;\
	    UNSG32 uLCDD2Cntl_IE                               :  1;\
	    UNSG32 uLCDD2Cntl_PD                               :  1;\
	    UNSG32 uLCDD2Cntl_PU                               :  1;\
	    UNSG32 uLCDD2Cntl_ST                               :  1;\
	    UNSG32 RSVDx8924_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD2Cntl;
	    struct w32Gbl_LCDD2Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD3Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD3Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD3Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD3Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD3Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD3Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD3Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD3Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD3Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD3Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD3Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD3Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD3Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD3Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD3Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD3Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD3Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD3Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD3Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD3Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD3Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD3Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD3Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD3Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD3Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD3Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD3Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD3Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD3Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD3Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD3Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD3Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD3Cntl                               {\
	    UNSG32 uLCDD3Cntl_DS0                              :  1;\
	    UNSG32 uLCDD3Cntl_DS1                              :  1;\
	    UNSG32 uLCDD3Cntl_DS2                              :  1;\
	    UNSG32 uLCDD3Cntl_DS3                              :  1;\
	    UNSG32 uLCDD3Cntl_IE                               :  1;\
	    UNSG32 uLCDD3Cntl_PD                               :  1;\
	    UNSG32 uLCDD3Cntl_PU                               :  1;\
	    UNSG32 uLCDD3Cntl_ST                               :  1;\
	    UNSG32 RSVDx8928_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD3Cntl;
	    struct w32Gbl_LCDD3Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD4Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD4Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD4Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD4Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD4Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD4Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD4Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD4Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD4Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD4Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD4Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD4Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD4Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD4Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD4Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD4Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD4Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD4Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD4Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD4Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD4Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD4Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD4Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD4Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD4Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD4Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD4Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD4Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD4Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD4Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD4Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD4Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD4Cntl                               {\
	    UNSG32 uLCDD4Cntl_DS0                              :  1;\
	    UNSG32 uLCDD4Cntl_DS1                              :  1;\
	    UNSG32 uLCDD4Cntl_DS2                              :  1;\
	    UNSG32 uLCDD4Cntl_DS3                              :  1;\
	    UNSG32 uLCDD4Cntl_IE                               :  1;\
	    UNSG32 uLCDD4Cntl_PD                               :  1;\
	    UNSG32 uLCDD4Cntl_PU                               :  1;\
	    UNSG32 uLCDD4Cntl_ST                               :  1;\
	    UNSG32 RSVDx892C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD4Cntl;
	    struct w32Gbl_LCDD4Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD5Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD5Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD5Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD5Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD5Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD5Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD5Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD5Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD5Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD5Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD5Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD5Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD5Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD5Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD5Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD5Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD5Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD5Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD5Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD5Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD5Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD5Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD5Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD5Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD5Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD5Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD5Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD5Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD5Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD5Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD5Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD5Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD5Cntl                               {\
	    UNSG32 uLCDD5Cntl_DS0                              :  1;\
	    UNSG32 uLCDD5Cntl_DS1                              :  1;\
	    UNSG32 uLCDD5Cntl_DS2                              :  1;\
	    UNSG32 uLCDD5Cntl_DS3                              :  1;\
	    UNSG32 uLCDD5Cntl_IE                               :  1;\
	    UNSG32 uLCDD5Cntl_PD                               :  1;\
	    UNSG32 uLCDD5Cntl_PU                               :  1;\
	    UNSG32 uLCDD5Cntl_ST                               :  1;\
	    UNSG32 RSVDx8930_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD5Cntl;
	    struct w32Gbl_LCDD5Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD6Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD6Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD6Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD6Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD6Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD6Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD6Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD6Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD6Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD6Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD6Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD6Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD6Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD6Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD6Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD6Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD6Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD6Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD6Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD6Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD6Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD6Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD6Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD6Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD6Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD6Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD6Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD6Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD6Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD6Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD6Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD6Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD6Cntl                               {\
	    UNSG32 uLCDD6Cntl_DS0                              :  1;\
	    UNSG32 uLCDD6Cntl_DS1                              :  1;\
	    UNSG32 uLCDD6Cntl_DS2                              :  1;\
	    UNSG32 uLCDD6Cntl_DS3                              :  1;\
	    UNSG32 uLCDD6Cntl_IE                               :  1;\
	    UNSG32 uLCDD6Cntl_PD                               :  1;\
	    UNSG32 uLCDD6Cntl_PU                               :  1;\
	    UNSG32 uLCDD6Cntl_ST                               :  1;\
	    UNSG32 RSVDx8934_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD6Cntl;
	    struct w32Gbl_LCDD6Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD7Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD7Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD7Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD7Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD7Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD7Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD7Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD7Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD7Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD7Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD7Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD7Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD7Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD7Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD7Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD7Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD7Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD7Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD7Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD7Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD7Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD7Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD7Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD7Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD7Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD7Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD7Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD7Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD7Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD7Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD7Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD7Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD7Cntl                               {\
	    UNSG32 uLCDD7Cntl_DS0                              :  1;\
	    UNSG32 uLCDD7Cntl_DS1                              :  1;\
	    UNSG32 uLCDD7Cntl_DS2                              :  1;\
	    UNSG32 uLCDD7Cntl_DS3                              :  1;\
	    UNSG32 uLCDD7Cntl_IE                               :  1;\
	    UNSG32 uLCDD7Cntl_PD                               :  1;\
	    UNSG32 uLCDD7Cntl_PU                               :  1;\
	    UNSG32 uLCDD7Cntl_ST                               :  1;\
	    UNSG32 RSVDx8938_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD7Cntl;
	    struct w32Gbl_LCDD7Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD8Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD8Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD8Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD8Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD8Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD8Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD8Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD8Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD8Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD8Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD8Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD8Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD8Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD8Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD8Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD8Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD8Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD8Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD8Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD8Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD8Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD8Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD8Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD8Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD8Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD8Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD8Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD8Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD8Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD8Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD8Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD8Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD8Cntl                               {\
	    UNSG32 uLCDD8Cntl_DS0                              :  1;\
	    UNSG32 uLCDD8Cntl_DS1                              :  1;\
	    UNSG32 uLCDD8Cntl_DS2                              :  1;\
	    UNSG32 uLCDD8Cntl_DS3                              :  1;\
	    UNSG32 uLCDD8Cntl_IE                               :  1;\
	    UNSG32 uLCDD8Cntl_PD                               :  1;\
	    UNSG32 uLCDD8Cntl_PU                               :  1;\
	    UNSG32 uLCDD8Cntl_ST                               :  1;\
	    UNSG32 RSVDx893C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD8Cntl;
	    struct w32Gbl_LCDD8Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD9Cntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD9Cntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD9Cntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD9Cntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD9Cntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD9Cntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD9Cntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD9Cntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD9Cntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD9Cntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD9Cntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD9Cntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD9Cntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD9Cntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD9Cntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD9Cntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD9Cntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD9Cntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD9Cntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD9Cntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD9Cntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD9Cntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD9Cntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD9Cntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD9Cntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD9Cntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD9Cntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD9Cntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD9Cntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD9Cntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD9Cntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD9Cntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD9Cntl                               {\
	    UNSG32 uLCDD9Cntl_DS0                              :  1;\
	    UNSG32 uLCDD9Cntl_DS1                              :  1;\
	    UNSG32 uLCDD9Cntl_DS2                              :  1;\
	    UNSG32 uLCDD9Cntl_DS3                              :  1;\
	    UNSG32 uLCDD9Cntl_IE                               :  1;\
	    UNSG32 uLCDD9Cntl_PD                               :  1;\
	    UNSG32 uLCDD9Cntl_PU                               :  1;\
	    UNSG32 uLCDD9Cntl_ST                               :  1;\
	    UNSG32 RSVDx8940_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD9Cntl;
	    struct w32Gbl_LCDD9Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD10Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD10Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD10Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD10Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD10Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD10Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD10Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD10Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD10Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD10Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD10Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD10Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD10Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD10Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD10Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD10Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD10Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD10Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD10Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD10Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD10Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD10Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD10Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD10Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD10Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD10Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD10Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD10Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD10Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD10Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD10Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD10Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD10Cntl                              {\
	    UNSG32 uLCDD10Cntl_DS0                             :  1;\
	    UNSG32 uLCDD10Cntl_DS1                             :  1;\
	    UNSG32 uLCDD10Cntl_DS2                             :  1;\
	    UNSG32 uLCDD10Cntl_DS3                             :  1;\
	    UNSG32 uLCDD10Cntl_IE                              :  1;\
	    UNSG32 uLCDD10Cntl_PD                              :  1;\
	    UNSG32 uLCDD10Cntl_PU                              :  1;\
	    UNSG32 uLCDD10Cntl_ST                              :  1;\
	    UNSG32 RSVDx8944_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD10Cntl;
	    struct w32Gbl_LCDD10Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD11Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD11Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD11Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD11Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD11Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD11Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD11Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD11Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD11Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD11Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD11Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD11Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD11Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD11Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD11Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD11Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD11Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD11Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD11Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD11Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD11Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD11Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD11Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD11Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD11Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD11Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD11Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD11Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD11Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD11Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD11Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD11Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD11Cntl                              {\
	    UNSG32 uLCDD11Cntl_DS0                             :  1;\
	    UNSG32 uLCDD11Cntl_DS1                             :  1;\
	    UNSG32 uLCDD11Cntl_DS2                             :  1;\
	    UNSG32 uLCDD11Cntl_DS3                             :  1;\
	    UNSG32 uLCDD11Cntl_IE                              :  1;\
	    UNSG32 uLCDD11Cntl_PD                              :  1;\
	    UNSG32 uLCDD11Cntl_PU                              :  1;\
	    UNSG32 uLCDD11Cntl_ST                              :  1;\
	    UNSG32 RSVDx8948_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD11Cntl;
	    struct w32Gbl_LCDD11Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD12Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD12Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD12Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD12Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD12Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD12Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD12Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD12Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD12Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD12Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD12Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD12Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD12Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD12Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD12Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD12Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD12Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD12Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD12Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD12Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD12Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD12Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD12Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD12Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD12Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD12Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD12Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD12Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD12Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD12Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD12Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD12Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD12Cntl                              {\
	    UNSG32 uLCDD12Cntl_DS0                             :  1;\
	    UNSG32 uLCDD12Cntl_DS1                             :  1;\
	    UNSG32 uLCDD12Cntl_DS2                             :  1;\
	    UNSG32 uLCDD12Cntl_DS3                             :  1;\
	    UNSG32 uLCDD12Cntl_IE                              :  1;\
	    UNSG32 uLCDD12Cntl_PD                              :  1;\
	    UNSG32 uLCDD12Cntl_PU                              :  1;\
	    UNSG32 uLCDD12Cntl_ST                              :  1;\
	    UNSG32 RSVDx894C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD12Cntl;
	    struct w32Gbl_LCDD12Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD13Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD13Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD13Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD13Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD13Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD13Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD13Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD13Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD13Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD13Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD13Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD13Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD13Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD13Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD13Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD13Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD13Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD13Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD13Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD13Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD13Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD13Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD13Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD13Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD13Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD13Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD13Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD13Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD13Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD13Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD13Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD13Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD13Cntl                              {\
	    UNSG32 uLCDD13Cntl_DS0                             :  1;\
	    UNSG32 uLCDD13Cntl_DS1                             :  1;\
	    UNSG32 uLCDD13Cntl_DS2                             :  1;\
	    UNSG32 uLCDD13Cntl_DS3                             :  1;\
	    UNSG32 uLCDD13Cntl_IE                              :  1;\
	    UNSG32 uLCDD13Cntl_PD                              :  1;\
	    UNSG32 uLCDD13Cntl_PU                              :  1;\
	    UNSG32 uLCDD13Cntl_ST                              :  1;\
	    UNSG32 RSVDx8950_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD13Cntl;
	    struct w32Gbl_LCDD13Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD14Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD14Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD14Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD14Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD14Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD14Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD14Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD14Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD14Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD14Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD14Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD14Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD14Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD14Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD14Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD14Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD14Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD14Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD14Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD14Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD14Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD14Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD14Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD14Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD14Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD14Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD14Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD14Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD14Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD14Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD14Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD14Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD14Cntl                              {\
	    UNSG32 uLCDD14Cntl_DS0                             :  1;\
	    UNSG32 uLCDD14Cntl_DS1                             :  1;\
	    UNSG32 uLCDD14Cntl_DS2                             :  1;\
	    UNSG32 uLCDD14Cntl_DS3                             :  1;\
	    UNSG32 uLCDD14Cntl_IE                              :  1;\
	    UNSG32 uLCDD14Cntl_PD                              :  1;\
	    UNSG32 uLCDD14Cntl_PU                              :  1;\
	    UNSG32 uLCDD14Cntl_ST                              :  1;\
	    UNSG32 RSVDx8954_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD14Cntl;
	    struct w32Gbl_LCDD14Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD15Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD15Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD15Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD15Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD15Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD15Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD15Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD15Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD15Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD15Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD15Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD15Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD15Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD15Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD15Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD15Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD15Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD15Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD15Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD15Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD15Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD15Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD15Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD15Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD15Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD15Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD15Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD15Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD15Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD15Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD15Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD15Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD15Cntl                              {\
	    UNSG32 uLCDD15Cntl_DS0                             :  1;\
	    UNSG32 uLCDD15Cntl_DS1                             :  1;\
	    UNSG32 uLCDD15Cntl_DS2                             :  1;\
	    UNSG32 uLCDD15Cntl_DS3                             :  1;\
	    UNSG32 uLCDD15Cntl_IE                              :  1;\
	    UNSG32 uLCDD15Cntl_PD                              :  1;\
	    UNSG32 uLCDD15Cntl_PU                              :  1;\
	    UNSG32 uLCDD15Cntl_ST                              :  1;\
	    UNSG32 RSVDx8958_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD15Cntl;
	    struct w32Gbl_LCDD15Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD16Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD16Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD16Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD16Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD16Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD16Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD16Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD16Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD16Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD16Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD16Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD16Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD16Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD16Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD16Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD16Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD16Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD16Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD16Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD16Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD16Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD16Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD16Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD16Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD16Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD16Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD16Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD16Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD16Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD16Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD16Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD16Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD16Cntl                              {\
	    UNSG32 uLCDD16Cntl_DS0                             :  1;\
	    UNSG32 uLCDD16Cntl_DS1                             :  1;\
	    UNSG32 uLCDD16Cntl_DS2                             :  1;\
	    UNSG32 uLCDD16Cntl_DS3                             :  1;\
	    UNSG32 uLCDD16Cntl_IE                              :  1;\
	    UNSG32 uLCDD16Cntl_PD                              :  1;\
	    UNSG32 uLCDD16Cntl_PU                              :  1;\
	    UNSG32 uLCDD16Cntl_ST                              :  1;\
	    UNSG32 RSVDx895C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD16Cntl;
	    struct w32Gbl_LCDD16Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD17Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD17Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD17Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD17Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD17Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD17Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD17Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD17Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD17Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD17Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD17Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD17Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD17Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD17Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD17Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD17Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD17Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD17Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD17Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD17Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD17Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD17Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD17Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD17Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD17Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD17Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD17Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD17Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD17Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD17Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD17Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD17Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD17Cntl                              {\
	    UNSG32 uLCDD17Cntl_DS0                             :  1;\
	    UNSG32 uLCDD17Cntl_DS1                             :  1;\
	    UNSG32 uLCDD17Cntl_DS2                             :  1;\
	    UNSG32 uLCDD17Cntl_DS3                             :  1;\
	    UNSG32 uLCDD17Cntl_IE                              :  1;\
	    UNSG32 uLCDD17Cntl_PD                              :  1;\
	    UNSG32 uLCDD17Cntl_PU                              :  1;\
	    UNSG32 uLCDD17Cntl_ST                              :  1;\
	    UNSG32 RSVDx8960_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD17Cntl;
	    struct w32Gbl_LCDD17Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD18Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD18Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD18Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD18Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD18Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD18Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD18Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD18Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD18Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD18Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD18Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD18Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD18Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD18Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD18Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD18Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD18Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD18Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD18Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD18Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD18Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD18Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD18Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD18Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD18Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD18Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD18Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD18Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD18Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD18Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD18Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD18Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD18Cntl                              {\
	    UNSG32 uLCDD18Cntl_DS0                             :  1;\
	    UNSG32 uLCDD18Cntl_DS1                             :  1;\
	    UNSG32 uLCDD18Cntl_DS2                             :  1;\
	    UNSG32 uLCDD18Cntl_DS3                             :  1;\
	    UNSG32 uLCDD18Cntl_IE                              :  1;\
	    UNSG32 uLCDD18Cntl_PD                              :  1;\
	    UNSG32 uLCDD18Cntl_PU                              :  1;\
	    UNSG32 uLCDD18Cntl_ST                              :  1;\
	    UNSG32 RSVDx8964_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD18Cntl;
	    struct w32Gbl_LCDD18Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD19Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD19Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD19Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD19Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD19Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD19Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD19Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD19Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD19Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD19Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD19Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD19Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD19Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD19Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD19Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD19Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD19Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD19Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD19Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD19Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD19Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD19Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD19Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD19Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD19Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD19Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD19Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD19Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD19Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD19Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD19Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD19Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD19Cntl                              {\
	    UNSG32 uLCDD19Cntl_DS0                             :  1;\
	    UNSG32 uLCDD19Cntl_DS1                             :  1;\
	    UNSG32 uLCDD19Cntl_DS2                             :  1;\
	    UNSG32 uLCDD19Cntl_DS3                             :  1;\
	    UNSG32 uLCDD19Cntl_IE                              :  1;\
	    UNSG32 uLCDD19Cntl_PD                              :  1;\
	    UNSG32 uLCDD19Cntl_PU                              :  1;\
	    UNSG32 uLCDD19Cntl_ST                              :  1;\
	    UNSG32 RSVDx8968_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD19Cntl;
	    struct w32Gbl_LCDD19Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD20Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD20Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD20Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD20Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD20Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD20Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD20Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD20Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD20Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD20Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD20Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD20Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD20Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD20Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD20Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD20Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD20Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD20Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD20Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD20Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD20Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD20Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD20Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD20Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD20Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD20Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD20Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD20Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD20Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD20Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD20Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD20Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD20Cntl                              {\
	    UNSG32 uLCDD20Cntl_DS0                             :  1;\
	    UNSG32 uLCDD20Cntl_DS1                             :  1;\
	    UNSG32 uLCDD20Cntl_DS2                             :  1;\
	    UNSG32 uLCDD20Cntl_DS3                             :  1;\
	    UNSG32 uLCDD20Cntl_IE                              :  1;\
	    UNSG32 uLCDD20Cntl_PD                              :  1;\
	    UNSG32 uLCDD20Cntl_PU                              :  1;\
	    UNSG32 uLCDD20Cntl_ST                              :  1;\
	    UNSG32 RSVDx896C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD20Cntl;
	    struct w32Gbl_LCDD20Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD21Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD21Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD21Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD21Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD21Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD21Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD21Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD21Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD21Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD21Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD21Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD21Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD21Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD21Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD21Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD21Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD21Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD21Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD21Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD21Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD21Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD21Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD21Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD21Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD21Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD21Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD21Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD21Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD21Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD21Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD21Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD21Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD21Cntl                              {\
	    UNSG32 uLCDD21Cntl_DS0                             :  1;\
	    UNSG32 uLCDD21Cntl_DS1                             :  1;\
	    UNSG32 uLCDD21Cntl_DS2                             :  1;\
	    UNSG32 uLCDD21Cntl_DS3                             :  1;\
	    UNSG32 uLCDD21Cntl_IE                              :  1;\
	    UNSG32 uLCDD21Cntl_PD                              :  1;\
	    UNSG32 uLCDD21Cntl_PU                              :  1;\
	    UNSG32 uLCDD21Cntl_ST                              :  1;\
	    UNSG32 RSVDx8970_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD21Cntl;
	    struct w32Gbl_LCDD21Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD22Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD22Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD22Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD22Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD22Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD22Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD22Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD22Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD22Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD22Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD22Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD22Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD22Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD22Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD22Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD22Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD22Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD22Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD22Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD22Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD22Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD22Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD22Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD22Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD22Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD22Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD22Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD22Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD22Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD22Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD22Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD22Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD22Cntl                              {\
	    UNSG32 uLCDD22Cntl_DS0                             :  1;\
	    UNSG32 uLCDD22Cntl_DS1                             :  1;\
	    UNSG32 uLCDD22Cntl_DS2                             :  1;\
	    UNSG32 uLCDD22Cntl_DS3                             :  1;\
	    UNSG32 uLCDD22Cntl_IE                              :  1;\
	    UNSG32 uLCDD22Cntl_PD                              :  1;\
	    UNSG32 uLCDD22Cntl_PU                              :  1;\
	    UNSG32 uLCDD22Cntl_ST                              :  1;\
	    UNSG32 RSVDx8974_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD22Cntl;
	    struct w32Gbl_LCDD22Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDD23Cntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDD23Cntl_DS0(r32, v)                   _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDD23Cntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDD23Cntl_DS0(r16, v)                   _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDD23Cntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDD23Cntl_DS1(r32, v)                   _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDD23Cntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDD23Cntl_DS1(r16, v)                   _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDD23Cntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDD23Cntl_DS2(r32, v)                   _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDD23Cntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDD23Cntl_DS2(r16, v)                   _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDD23Cntl_DS3(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDD23Cntl_DS3(r32, v)                   _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDD23Cntl_DS3(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDD23Cntl_DS3(r16, v)                   _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDD23Cntl_IE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDD23Cntl_IE(r32, v)                    _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDD23Cntl_IE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDD23Cntl_IE(r16, v)                    _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDD23Cntl_PD(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDD23Cntl_PD(r32, v)                    _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDD23Cntl_PD(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDD23Cntl_PD(r16, v)                    _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDD23Cntl_PU(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDD23Cntl_PU(r32, v)                    _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDD23Cntl_PU(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDD23Cntl_PU(r16, v)                    _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDD23Cntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDD23Cntl_ST(r32, v)                    _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDD23Cntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDD23Cntl_ST(r16, v)                    _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDD23Cntl                              {\
	    UNSG32 uLCDD23Cntl_DS0                             :  1;\
	    UNSG32 uLCDD23Cntl_DS1                             :  1;\
	    UNSG32 uLCDD23Cntl_DS2                             :  1;\
	    UNSG32 uLCDD23Cntl_DS3                             :  1;\
	    UNSG32 uLCDD23Cntl_IE                              :  1;\
	    UNSG32 uLCDD23Cntl_PD                              :  1;\
	    UNSG32 uLCDD23Cntl_PU                              :  1;\
	    UNSG32 uLCDD23Cntl_ST                              :  1;\
	    UNSG32 RSVDx8978_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDD23Cntl;
	    struct w32Gbl_LCDD23Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LPCLKCntl_DS0(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LPCLKCntl_DS0(r32, v)                    _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LPCLKCntl_DS0(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LPCLKCntl_DS0(r16, v)                    _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LPCLKCntl_DS1(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LPCLKCntl_DS1(r32, v)                    _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LPCLKCntl_DS1(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LPCLKCntl_DS1(r16, v)                    _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LPCLKCntl_DS2(r32)                      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LPCLKCntl_DS2(r32, v)                    _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LPCLKCntl_DS2(r16)                      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LPCLKCntl_DS2(r16, v)                    _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LPCLKCntl_DS3(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LPCLKCntl_DS3(r32, v)                    _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LPCLKCntl_DS3(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LPCLKCntl_DS3(r16, v)                    _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LPCLKCntl_IE(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LPCLKCntl_IE(r32, v)                     _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LPCLKCntl_IE(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LPCLKCntl_IE(r16, v)                     _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LPCLKCntl_PD(r32)                       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LPCLKCntl_PD(r32, v)                     _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LPCLKCntl_PD(r16)                       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LPCLKCntl_PD(r16, v)                     _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LPCLKCntl_PU(r32)                       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LPCLKCntl_PU(r32, v)                     _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LPCLKCntl_PU(r16)                       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LPCLKCntl_PU(r16, v)                     _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LPCLKCntl_ST(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LPCLKCntl_ST(r32, v)                     _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LPCLKCntl_ST(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LPCLKCntl_ST(r16, v)                     _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LPCLKCntl                               {\
	    UNSG32 uLPCLKCntl_DS0                              :  1;\
	    UNSG32 uLPCLKCntl_DS1                              :  1;\
	    UNSG32 uLPCLKCntl_DS2                              :  1;\
	    UNSG32 uLPCLKCntl_DS3                              :  1;\
	    UNSG32 uLPCLKCntl_IE                               :  1;\
	    UNSG32 uLPCLKCntl_PD                               :  1;\
	    UNSG32 uLPCLKCntl_PU                               :  1;\
	    UNSG32 uLPCLKCntl_ST                               :  1;\
	    UNSG32 RSVDx897C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LPCLKCntl;
	    struct w32Gbl_LPCLKCntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDGPIO0Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDGPIO0Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDGPIO0Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDGPIO0Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDGPIO0Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDGPIO0Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDGPIO0Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDGPIO0Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDGPIO0Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDGPIO0Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDGPIO0Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDGPIO0Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDGPIO0Cntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDGPIO0Cntl_DS3(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDGPIO0Cntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDGPIO0Cntl_DS3(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDGPIO0Cntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDGPIO0Cntl_IE(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDGPIO0Cntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDGPIO0Cntl_IE(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDGPIO0Cntl_PD(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDGPIO0Cntl_PD(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDGPIO0Cntl_PD(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDGPIO0Cntl_PD(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDGPIO0Cntl_PU(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDGPIO0Cntl_PU(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDGPIO0Cntl_PU(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDGPIO0Cntl_PU(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDGPIO0Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDGPIO0Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDGPIO0Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDGPIO0Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDGPIO0Cntl                            {\
	    UNSG32 uLCDGPIO0Cntl_DS0                           :  1;\
	    UNSG32 uLCDGPIO0Cntl_DS1                           :  1;\
	    UNSG32 uLCDGPIO0Cntl_DS2                           :  1;\
	    UNSG32 uLCDGPIO0Cntl_DS3                           :  1;\
	    UNSG32 uLCDGPIO0Cntl_IE                            :  1;\
	    UNSG32 uLCDGPIO0Cntl_PD                            :  1;\
	    UNSG32 uLCDGPIO0Cntl_PU                            :  1;\
	    UNSG32 uLCDGPIO0Cntl_ST                            :  1;\
	    UNSG32 RSVDx8980_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDGPIO0Cntl;
	    struct w32Gbl_LCDGPIO0Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDGPIO1Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDGPIO1Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDGPIO1Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDGPIO1Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDGPIO1Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDGPIO1Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDGPIO1Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDGPIO1Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDGPIO1Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDGPIO1Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDGPIO1Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDGPIO1Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDGPIO1Cntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDGPIO1Cntl_DS3(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDGPIO1Cntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDGPIO1Cntl_DS3(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDGPIO1Cntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDGPIO1Cntl_IE(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDGPIO1Cntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDGPIO1Cntl_IE(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDGPIO1Cntl_PD(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDGPIO1Cntl_PD(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDGPIO1Cntl_PD(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDGPIO1Cntl_PD(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDGPIO1Cntl_PU(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDGPIO1Cntl_PU(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDGPIO1Cntl_PU(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDGPIO1Cntl_PU(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDGPIO1Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDGPIO1Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDGPIO1Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDGPIO1Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDGPIO1Cntl                            {\
	    UNSG32 uLCDGPIO1Cntl_DS0                           :  1;\
	    UNSG32 uLCDGPIO1Cntl_DS1                           :  1;\
	    UNSG32 uLCDGPIO1Cntl_DS2                           :  1;\
	    UNSG32 uLCDGPIO1Cntl_DS3                           :  1;\
	    UNSG32 uLCDGPIO1Cntl_IE                            :  1;\
	    UNSG32 uLCDGPIO1Cntl_PD                            :  1;\
	    UNSG32 uLCDGPIO1Cntl_PU                            :  1;\
	    UNSG32 uLCDGPIO1Cntl_ST                            :  1;\
	    UNSG32 RSVDx8984_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDGPIO1Cntl;
	    struct w32Gbl_LCDGPIO1Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDGPIO2Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDGPIO2Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDGPIO2Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDGPIO2Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDGPIO2Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDGPIO2Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDGPIO2Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDGPIO2Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDGPIO2Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDGPIO2Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDGPIO2Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDGPIO2Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDGPIO2Cntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDGPIO2Cntl_DS3(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDGPIO2Cntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDGPIO2Cntl_DS3(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDGPIO2Cntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDGPIO2Cntl_IE(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDGPIO2Cntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDGPIO2Cntl_IE(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDGPIO2Cntl_PD(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDGPIO2Cntl_PD(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDGPIO2Cntl_PD(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDGPIO2Cntl_PD(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDGPIO2Cntl_PU(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDGPIO2Cntl_PU(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDGPIO2Cntl_PU(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDGPIO2Cntl_PU(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDGPIO2Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDGPIO2Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDGPIO2Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDGPIO2Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDGPIO2Cntl                            {\
	    UNSG32 uLCDGPIO2Cntl_DS0                           :  1;\
	    UNSG32 uLCDGPIO2Cntl_DS1                           :  1;\
	    UNSG32 uLCDGPIO2Cntl_DS2                           :  1;\
	    UNSG32 uLCDGPIO2Cntl_DS3                           :  1;\
	    UNSG32 uLCDGPIO2Cntl_IE                            :  1;\
	    UNSG32 uLCDGPIO2Cntl_PD                            :  1;\
	    UNSG32 uLCDGPIO2Cntl_PU                            :  1;\
	    UNSG32 uLCDGPIO2Cntl_ST                            :  1;\
	    UNSG32 RSVDx8988_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDGPIO2Cntl;
	    struct w32Gbl_LCDGPIO2Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDGPIO3Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDGPIO3Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDGPIO3Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDGPIO3Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDGPIO3Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDGPIO3Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDGPIO3Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDGPIO3Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDGPIO3Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDGPIO3Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDGPIO3Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDGPIO3Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDGPIO3Cntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDGPIO3Cntl_DS3(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDGPIO3Cntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDGPIO3Cntl_DS3(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDGPIO3Cntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDGPIO3Cntl_IE(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDGPIO3Cntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDGPIO3Cntl_IE(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDGPIO3Cntl_PD(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDGPIO3Cntl_PD(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDGPIO3Cntl_PD(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDGPIO3Cntl_PD(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDGPIO3Cntl_PU(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDGPIO3Cntl_PU(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDGPIO3Cntl_PU(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDGPIO3Cntl_PU(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDGPIO3Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDGPIO3Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDGPIO3Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDGPIO3Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDGPIO3Cntl                            {\
	    UNSG32 uLCDGPIO3Cntl_DS0                           :  1;\
	    UNSG32 uLCDGPIO3Cntl_DS1                           :  1;\
	    UNSG32 uLCDGPIO3Cntl_DS2                           :  1;\
	    UNSG32 uLCDGPIO3Cntl_DS3                           :  1;\
	    UNSG32 uLCDGPIO3Cntl_IE                            :  1;\
	    UNSG32 uLCDGPIO3Cntl_PD                            :  1;\
	    UNSG32 uLCDGPIO3Cntl_PU                            :  1;\
	    UNSG32 uLCDGPIO3Cntl_ST                            :  1;\
	    UNSG32 RSVDx898C_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDGPIO3Cntl;
	    struct w32Gbl_LCDGPIO3Cntl;
	  };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_LCDGPIO4Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_LCDGPIO4Cntl_DS0(r32, v)                 _BFSET_(r32, 0, 0, v)
    #define   GET16Gbl_LCDGPIO4Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_LCDGPIO4Cntl_DS0(r16, v)                 _BFSET_(r16, 0, 0, v)

    #define   GET32Gbl_LCDGPIO4Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_LCDGPIO4Cntl_DS1(r32, v)                 _BFSET_(r32, 1, 1, v)
    #define   GET16Gbl_LCDGPIO4Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_LCDGPIO4Cntl_DS1(r16, v)                 _BFSET_(r16, 1, 1, v)

    #define   GET32Gbl_LCDGPIO4Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_LCDGPIO4Cntl_DS2(r32, v)                 _BFSET_(r32, 2, 2, v)
    #define   GET16Gbl_LCDGPIO4Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_LCDGPIO4Cntl_DS2(r16, v)                 _BFSET_(r16, 2, 2, v)

    #define   GET32Gbl_LCDGPIO4Cntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_LCDGPIO4Cntl_DS3(r32, v)                 _BFSET_(r32, 3, 3, v)
    #define   GET16Gbl_LCDGPIO4Cntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_LCDGPIO4Cntl_DS3(r16, v)                 _BFSET_(r16, 3, 3, v)

    #define   GET32Gbl_LCDGPIO4Cntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_LCDGPIO4Cntl_IE(r32, v)                  _BFSET_(r32, 4, 4, v)
    #define   GET16Gbl_LCDGPIO4Cntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_LCDGPIO4Cntl_IE(r16, v)                  _BFSET_(r16, 4, 4, v)

    #define   GET32Gbl_LCDGPIO4Cntl_PD(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_LCDGPIO4Cntl_PD(r32, v)                  _BFSET_(r32, 5, 5, v)
    #define   GET16Gbl_LCDGPIO4Cntl_PD(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_LCDGPIO4Cntl_PD(r16, v)                  _BFSET_(r16, 5, 5, v)

    #define   GET32Gbl_LCDGPIO4Cntl_PU(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_LCDGPIO4Cntl_PU(r32, v)                  _BFSET_(r32, 6, 6, v)
    #define   GET16Gbl_LCDGPIO4Cntl_PU(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_LCDGPIO4Cntl_PU(r16, v)                  _BFSET_(r16, 6, 6, v)

    #define   GET32Gbl_LCDGPIO4Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_LCDGPIO4Cntl_ST(r32, v)                  _BFSET_(r32, 7, 7, v)
    #define   GET16Gbl_LCDGPIO4Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_LCDGPIO4Cntl_ST(r16, v)                  _BFSET_(r16, 7, 7, v)

    #define     w32Gbl_LCDGPIO4Cntl                            {\
	    UNSG32 uLCDGPIO4Cntl_DS0                           :  1;\
	    UNSG32 uLCDGPIO4Cntl_DS1                           :  1;\
	    UNSG32 uLCDGPIO4Cntl_DS2                           :  1;\
	    UNSG32 uLCDGPIO4Cntl_DS3                           :  1;\
	    UNSG32 uLCDGPIO4Cntl_IE                            :  1;\
	    UNSG32 uLCDGPIO4Cntl_PD                            :  1;\
	    UNSG32 uLCDGPIO4Cntl_PU                            :  1;\
	    UNSG32 uLCDGPIO4Cntl_ST                            :  1;\
	    UNSG32 RSVDx8990_b8                                : 24;\
	}
    union { UNSG32 u32Gbl_LCDGPIO4Cntl;
	    struct w32Gbl_LCDGPIO4Cntl;
	  };
    ///////////////////////////////////////////////////////////
    } SIE_Gbl;

    typedef union  T32Gbl_ProductId {
		UNSG32 u32;
	    struct w32Gbl_ProductId;
		 } T32Gbl_ProductId;
    typedef union  T32Gbl_ProductId_ext {
		UNSG32 u32;
	    struct w32Gbl_ProductId_ext;
		 } T32Gbl_ProductId_ext;
    typedef union  T32Gbl_INT_ID {
		UNSG32 u32;
	    struct w32Gbl_INT_ID;
		 } T32Gbl_INT_ID;
    typedef union  T32Gbl_bootStrap {
		UNSG32 u32;
	    struct w32Gbl_bootStrap;
		 } T32Gbl_bootStrap;
    typedef union  T32Gbl_bootStrapEn {
		UNSG32 u32;
	    struct w32Gbl_bootStrapEn;
		 } T32Gbl_bootStrapEn;
    typedef union  T32Gbl_pkgSel {
		UNSG32 u32;
	    struct w32Gbl_pkgSel;
		 } T32Gbl_pkgSel;
    typedef union  T32Gbl_chipCntl {
		UNSG32 u32;
	    struct w32Gbl_chipCntl;
		 } T32Gbl_chipCntl;
    typedef union  T32Gbl_sw_generic0 {
		UNSG32 u32;
	    struct w32Gbl_sw_generic0;
		 } T32Gbl_sw_generic0;
    typedef union  T32Gbl_sw_generic1 {
		UNSG32 u32;
	    struct w32Gbl_sw_generic1;
		 } T32Gbl_sw_generic1;
    typedef union  T32Gbl_sw_generic2 {
		UNSG32 u32;
	    struct w32Gbl_sw_generic2;
		 } T32Gbl_sw_generic2;
    typedef union  T32Gbl_sw_generic3 {
		UNSG32 u32;
	    struct w32Gbl_sw_generic3;
		 } T32Gbl_sw_generic3;
    typedef union  T32Gbl_FPGAR {
		UNSG32 u32;
	    struct w32Gbl_FPGAR;
		 } T32Gbl_FPGAR;
    typedef union  T32Gbl_FPGARW {
		UNSG32 u32;
	    struct w32Gbl_FPGARW;
		 } T32Gbl_FPGARW;
    typedef union  T32Gbl_ResetTrigger {
		UNSG32 u32;
	    struct w32Gbl_ResetTrigger;
		 } T32Gbl_ResetTrigger;
    typedef union  T32Gbl_ResetStatus {
		UNSG32 u32;
	    struct w32Gbl_ResetStatus;
		 } T32Gbl_ResetStatus;
    typedef union  T32Gbl_WDTResetStatus {
		UNSG32 u32;
	    struct w32Gbl_WDTResetStatus;
		 } T32Gbl_WDTResetStatus;
    typedef union  T32Gbl_WDTSysRstMask {
		UNSG32 u32;
	    struct w32Gbl_WDTSysRstMask;
		 } T32Gbl_WDTSysRstMask;
    typedef union  T32Gbl_CHIP_RESET_TRACKER {
		UNSG32 u32;
	    struct w32Gbl_CHIP_RESET_TRACKER;
		 } T32Gbl_CHIP_RESET_TRACKER;
    typedef union  T32Gbl_avioReset {
		UNSG32 u32;
	    struct w32Gbl_avioReset;
		 } T32Gbl_avioReset;
    typedef union  T32Gbl_avioResetStatus {
		UNSG32 u32;
	    struct w32Gbl_avioResetStatus;
		 } T32Gbl_avioResetStatus;
    typedef union  T32Gbl_perifReset {
		UNSG32 u32;
	    struct w32Gbl_perifReset;
		 } T32Gbl_perifReset;
    typedef union  T32Gbl_perifResetStatus {
		UNSG32 u32;
	    struct w32Gbl_perifResetStatus;
		 } T32Gbl_perifResetStatus;
    typedef union  T32Gbl_perifStickyResetN {
		UNSG32 u32;
	    struct w32Gbl_perifStickyResetN;
		 } T32Gbl_perifStickyResetN;
    typedef union  T32Gbl_apbPerifResetTrigger {
		UNSG32 u32;
	    struct w32Gbl_apbPerifResetTrigger;
		 } T32Gbl_apbPerifResetTrigger;
    typedef union  T32Gbl_apbPerifResetStatus {
		UNSG32 u32;
	    struct w32Gbl_apbPerifResetStatus;
		 } T32Gbl_apbPerifResetStatus;
    typedef union  T32Gbl_topStickyResetN {
		UNSG32 u32;
	    struct w32Gbl_topStickyResetN;
		 } T32Gbl_topStickyResetN;
    typedef union  T32Gbl_clkEnable {
		UNSG32 u32;
	    struct w32Gbl_clkEnable;
		 } T32Gbl_clkEnable;
    typedef union  T32Gbl_ClkSwitch {
		UNSG32 u32;
	    struct w32Gbl_ClkSwitch;
		 } T32Gbl_ClkSwitch;
    typedef union  T32Gbl_SECURE_SCAN_EN {
		UNSG32 u32;
	    struct w32Gbl_SECURE_SCAN_EN;
		 } T32Gbl_SECURE_SCAN_EN;
    typedef union  T32Gbl_gic400_ctrl {
		UNSG32 u32;
	    struct w32Gbl_gic400_ctrl;
		 } T32Gbl_gic400_ctrl;
    typedef union  T32Gbl_GFX_CTRL_0 {
		UNSG32 u32;
	    struct w32Gbl_GFX_CTRL_0;
		 } T32Gbl_GFX_CTRL_0;
    typedef union  T32Gbl_GFX_CTRL_1 {
		UNSG32 u32;
	    struct w32Gbl_GFX_CTRL_1;
		 } T32Gbl_GFX_CTRL_1;
    typedef union  T32Gbl_GFX_CTRL_2 {
		UNSG32 u32;
	    struct w32Gbl_GFX_CTRL_2;
		 } T32Gbl_GFX_CTRL_2;
    typedef union  T32Gbl_GFX_CTRL_3 {
		UNSG32 u32;
	    struct w32Gbl_GFX_CTRL_3;
		 } T32Gbl_GFX_CTRL_3;
    typedef union  T32Gbl_GFX_TIMER_VALUE {
		UNSG32 u32;
	    struct w32Gbl_GFX_TIMER_VALUE;
		 } T32Gbl_GFX_TIMER_VALUE;
    typedef union  T32Gbl_GFX_TIMER_VALUE1 {
		UNSG32 u32;
	    struct w32Gbl_GFX_TIMER_VALUE1;
		 } T32Gbl_GFX_TIMER_VALUE1;
    typedef union  T32Gbl_GFX_STATUS {
		UNSG32 u32;
	    struct w32Gbl_GFX_STATUS;
		 } T32Gbl_GFX_STATUS;
    typedef union  T32Gbl_USBOTG_REFCLK_CTRL0 {
		UNSG32 u32;
	    struct w32Gbl_USBOTG_REFCLK_CTRL0;
		 } T32Gbl_USBOTG_REFCLK_CTRL0;
    typedef union  T32Gbl_USBOTG_REFCLK_CTRL1 {
		UNSG32 u32;
	    struct w32Gbl_USBOTG_REFCLK_CTRL1;
		 } T32Gbl_USBOTG_REFCLK_CTRL1;
    typedef union  T32Gbl_I2S2_PORT_CTRL {
		UNSG32 u32;
	    struct w32Gbl_I2S2_PORT_CTRL;
		 } T32Gbl_I2S2_PORT_CTRL;
    typedef union  T32Gbl_LCDD_IO_CTRL {
		UNSG32 u32;
	    struct w32Gbl_LCDD_IO_CTRL;
		 } T32Gbl_LCDD_IO_CTRL;
    typedef union  T32Gbl_POR_EN_status {
		UNSG32 u32;
	    struct w32Gbl_POR_EN_status;
		 } T32Gbl_POR_EN_status;
    typedef union  T32Gbl_POR_EN_OVRD {
		UNSG32 u32;
	    struct w32Gbl_POR_EN_OVRD;
		 } T32Gbl_POR_EN_OVRD;
    typedef union  T32Gbl_POR_status {
		UNSG32 u32;
	    struct w32Gbl_POR_status;
		 } T32Gbl_POR_status;
    typedef union  T32Gbl_POR_CTL {
		UNSG32 u32;
	    struct w32Gbl_POR_CTL;
		 } T32Gbl_POR_CTL;
    typedef union  T32Gbl_pinMuxCntlBus {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus;
		 } T32Gbl_pinMuxCntlBus;
    typedef union  T32Gbl_pinMuxCntlBus1 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus1;
		 } T32Gbl_pinMuxCntlBus1;
    typedef union  T32Gbl_pinMuxCntlBus2 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus2;
		 } T32Gbl_pinMuxCntlBus2;
    typedef union  T32Gbl_pinMuxCntlBus3 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus3;
		 } T32Gbl_pinMuxCntlBus3;
    typedef union  T32Gbl_pinMuxCntlBus4 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus4;
		 } T32Gbl_pinMuxCntlBus4;
    typedef union  T32Gbl_pinMuxCntlBus5 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus5;
		 } T32Gbl_pinMuxCntlBus5;
    typedef union  T32Gbl_pinMuxCntlBus6 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus6;
		 } T32Gbl_pinMuxCntlBus6;
    typedef union  T32Gbl_pinMuxCntlBus7 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus7;
		 } T32Gbl_pinMuxCntlBus7;
    typedef union  T32Gbl_pinMuxCntlBus8 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus8;
		 } T32Gbl_pinMuxCntlBus8;
    typedef union  T32Gbl_pinMuxCntlBus9 {
		UNSG32 u32;
	    struct w32Gbl_pinMuxCntlBus9;
		 } T32Gbl_pinMuxCntlBus9;
    typedef union  T32Gbl_TW0_SCLCntl {
		UNSG32 u32;
	    struct w32Gbl_TW0_SCLCntl;
		 } T32Gbl_TW0_SCLCntl;
    typedef union  T32Gbl_TW0_SDACntl {
		UNSG32 u32;
	    struct w32Gbl_TW0_SDACntl;
		 } T32Gbl_TW0_SDACntl;
    typedef union  T32Gbl_TW1_SCLCntl {
		UNSG32 u32;
	    struct w32Gbl_TW1_SCLCntl;
		 } T32Gbl_TW1_SCLCntl;
    typedef union  T32Gbl_TW1_SDACntl {
		UNSG32 u32;
	    struct w32Gbl_TW1_SDACntl;
		 } T32Gbl_TW1_SDACntl;
    typedef union  T32Gbl_FORCE_MUTECntl {
		UNSG32 u32;
	    struct w32Gbl_FORCE_MUTECntl;
		 } T32Gbl_FORCE_MUTECntl;
    typedef union  T32Gbl_TMSCntl {
		UNSG32 u32;
	    struct w32Gbl_TMSCntl;
		 } T32Gbl_TMSCntl;
    typedef union  T32Gbl_TDICntl {
		UNSG32 u32;
	    struct w32Gbl_TDICntl;
		 } T32Gbl_TDICntl;
    typedef union  T32Gbl_TDOCntl {
		UNSG32 u32;
	    struct w32Gbl_TDOCntl;
		 } T32Gbl_TDOCntl;
    typedef union  T32Gbl_SPI1_SS0nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SS0nCntl;
		 } T32Gbl_SPI1_SS0nCntl;
    typedef union  T32Gbl_SPI1_SS1nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SS1nCntl;
		 } T32Gbl_SPI1_SS1nCntl;
    typedef union  T32Gbl_SPI1_SS2nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SS2nCntl;
		 } T32Gbl_SPI1_SS2nCntl;
    typedef union  T32Gbl_SPI1_SS3nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SS3nCntl;
		 } T32Gbl_SPI1_SS3nCntl;
    typedef union  T32Gbl_SPI1_SDOCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SDOCntl;
		 } T32Gbl_SPI1_SDOCntl;
    typedef union  T32Gbl_SPI1_SDICntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SDICntl;
		 } T32Gbl_SPI1_SDICntl;
    typedef union  T32Gbl_SPI1_SCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI1_SCLKCntl;
		 } T32Gbl_SPI1_SCLKCntl;
    typedef union  T32Gbl_TW2_SCLCntl {
		UNSG32 u32;
	    struct w32Gbl_TW2_SCLCntl;
		 } T32Gbl_TW2_SCLCntl;
    typedef union  T32Gbl_TW2_SDACntl {
		UNSG32 u32;
	    struct w32Gbl_TW2_SDACntl;
		 } T32Gbl_TW2_SDACntl;
    typedef union  T32Gbl_SPI2_SS0nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SS0nCntl;
		 } T32Gbl_SPI2_SS0nCntl;
    typedef union  T32Gbl_SPI2_SS1nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SS1nCntl;
		 } T32Gbl_SPI2_SS1nCntl;
    typedef union  T32Gbl_SPI2_SS2nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SS2nCntl;
		 } T32Gbl_SPI2_SS2nCntl;
    typedef union  T32Gbl_SPI2_SS3nCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SS3nCntl;
		 } T32Gbl_SPI2_SS3nCntl;
    typedef union  T32Gbl_SPI2_SDOCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SDOCntl;
		 } T32Gbl_SPI2_SDOCntl;
    typedef union  T32Gbl_SPI2_SCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SCLKCntl;
		 } T32Gbl_SPI2_SCLKCntl;
    typedef union  T32Gbl_SPI2_SDICntl {
		UNSG32 u32;
	    struct w32Gbl_SPI2_SDICntl;
		 } T32Gbl_SPI2_SDICntl;
    typedef union  T32Gbl_TW3_SCLCntl {
		UNSG32 u32;
	    struct w32Gbl_TW3_SCLCntl;
		 } T32Gbl_TW3_SCLCntl;
    typedef union  T32Gbl_TW3_SDACntl {
		UNSG32 u32;
	    struct w32Gbl_TW3_SDACntl;
		 } T32Gbl_TW3_SDACntl;
    typedef union  T32Gbl_URT1_RXDCntl {
		UNSG32 u32;
	    struct w32Gbl_URT1_RXDCntl;
		 } T32Gbl_URT1_RXDCntl;
    typedef union  T32Gbl_URT1_TXDCntl {
		UNSG32 u32;
	    struct w32Gbl_URT1_TXDCntl;
		 } T32Gbl_URT1_TXDCntl;
    typedef union  T32Gbl_PWM0Cntl {
		UNSG32 u32;
	    struct w32Gbl_PWM0Cntl;
		 } T32Gbl_PWM0Cntl;
    typedef union  T32Gbl_PWM1Cntl {
		UNSG32 u32;
	    struct w32Gbl_PWM1Cntl;
		 } T32Gbl_PWM1Cntl;
    typedef union  T32Gbl_PWM2Cntl {
		UNSG32 u32;
	    struct w32Gbl_PWM2Cntl;
		 } T32Gbl_PWM2Cntl;
    typedef union  T32Gbl_PWM3Cntl {
		UNSG32 u32;
	    struct w32Gbl_PWM3Cntl;
		 } T32Gbl_PWM3Cntl;
    typedef union  T32Gbl_GPIO_A0Cntl {
		UNSG32 u32;
	    struct w32Gbl_GPIO_A0Cntl;
		 } T32Gbl_GPIO_A0Cntl;
    typedef union  T32Gbl_GPIO_A1Cntl {
		UNSG32 u32;
	    struct w32Gbl_GPIO_A1Cntl;
		 } T32Gbl_GPIO_A1Cntl;
    typedef union  T32Gbl_GPIO_A2Cntl {
		UNSG32 u32;
	    struct w32Gbl_GPIO_A2Cntl;
		 } T32Gbl_GPIO_A2Cntl;
    typedef union  T32Gbl_GPIO_A3Cntl {
		UNSG32 u32;
	    struct w32Gbl_GPIO_A3Cntl;
		 } T32Gbl_GPIO_A3Cntl;
    typedef union  T32Gbl_USB2_DRV_VBUSCntl {
		UNSG32 u32;
	    struct w32Gbl_USB2_DRV_VBUSCntl;
		 } T32Gbl_USB2_DRV_VBUSCntl;
    typedef union  T32Gbl_SDIO_CDnCntl {
		UNSG32 u32;
	    struct w32Gbl_SDIO_CDnCntl;
		 } T32Gbl_SDIO_CDnCntl;
    typedef union  T32Gbl_SDIO_WPCntl {
		UNSG32 u32;
	    struct w32Gbl_SDIO_WPCntl;
		 } T32Gbl_SDIO_WPCntl;
    typedef union  T32Gbl_NFALECntl {
		UNSG32 u32;
	    struct w32Gbl_NFALECntl;
		 } T32Gbl_NFALECntl;
    typedef union  T32Gbl_NFLCSCntl {
		UNSG32 u32;
	    struct w32Gbl_NFLCSCntl;
		 } T32Gbl_NFLCSCntl;
    typedef union  T32Gbl_RGMII_CLK_OUTCntl {
		UNSG32 u32;
	    struct w32Gbl_RGMII_CLK_OUTCntl;
		 } T32Gbl_RGMII_CLK_OUTCntl;
    typedef union  T32Gbl_RGMIITXCCntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIITXCCntl;
		 } T32Gbl_RGMIITXCCntl;
    typedef union  T32Gbl_RGMIITD0Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIITD0Cntl;
		 } T32Gbl_RGMIITD0Cntl;
    typedef union  T32Gbl_RGMIITD1Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIITD1Cntl;
		 } T32Gbl_RGMIITD1Cntl;
    typedef union  T32Gbl_RGMIITD2Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIITD2Cntl;
		 } T32Gbl_RGMIITD2Cntl;
    typedef union  T32Gbl_RGMIITD3Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIITD3Cntl;
		 } T32Gbl_RGMIITD3Cntl;
    typedef union  T32Gbl_RGMIITXCTLCntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIITXCTLCntl;
		 } T32Gbl_RGMIITXCTLCntl;
    typedef union  T32Gbl_RGMIIRXCCntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIIRXCCntl;
		 } T32Gbl_RGMIIRXCCntl;
    typedef union  T32Gbl_RGMIIRD0Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIIRD0Cntl;
		 } T32Gbl_RGMIIRD0Cntl;
    typedef union  T32Gbl_RGMIIRD1Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIIRD1Cntl;
		 } T32Gbl_RGMIIRD1Cntl;
    typedef union  T32Gbl_RGMIIRD2Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIIRD2Cntl;
		 } T32Gbl_RGMIIRD2Cntl;
    typedef union  T32Gbl_RGMIIRD3Cntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIIRD3Cntl;
		 } T32Gbl_RGMIIRD3Cntl;
    typedef union  T32Gbl_RGMIIRXCTLCntl {
		UNSG32 u32;
	    struct w32Gbl_RGMIIRXCTLCntl;
		 } T32Gbl_RGMIIRXCTLCntl;
    typedef union  T32Gbl_RCLKICntl {
		UNSG32 u32;
	    struct w32Gbl_RCLKICntl;
		 } T32Gbl_RCLKICntl;
    typedef union  T32Gbl_I2S1_DOCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S1_DOCntl;
		 } T32Gbl_I2S1_DOCntl;
    typedef union  T32Gbl_I2S1_DICntl {
		UNSG32 u32;
	    struct w32Gbl_I2S1_DICntl;
		 } T32Gbl_I2S1_DICntl;
    typedef union  T32Gbl_I2S1_LRCKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S1_LRCKCntl;
		 } T32Gbl_I2S1_LRCKCntl;
    typedef union  T32Gbl_I2S1_BCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S1_BCLKCntl;
		 } T32Gbl_I2S1_BCLKCntl;
    typedef union  T32Gbl_I2S1_MCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S1_MCLKCntl;
		 } T32Gbl_I2S1_MCLKCntl;
    typedef union  T32Gbl_I2S2_LRCKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S2_LRCKCntl;
		 } T32Gbl_I2S2_LRCKCntl;
    typedef union  T32Gbl_I2S2_BCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S2_BCLKCntl;
		 } T32Gbl_I2S2_BCLKCntl;
    typedef union  T32Gbl_I2S2_DOCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S2_DOCntl;
		 } T32Gbl_I2S2_DOCntl;
    typedef union  T32Gbl_I2S2_DICntl {
		UNSG32 u32;
	    struct w32Gbl_I2S2_DICntl;
		 } T32Gbl_I2S2_DICntl;
    typedef union  T32Gbl_PDM_CLKIOCntl {
		UNSG32 u32;
	    struct w32Gbl_PDM_CLKIOCntl;
		 } T32Gbl_PDM_CLKIOCntl;
    typedef union  T32Gbl_PDM_DI0Cntl {
		UNSG32 u32;
	    struct w32Gbl_PDM_DI0Cntl;
		 } T32Gbl_PDM_DI0Cntl;
    typedef union  T32Gbl_PDM_DI1Cntl {
		UNSG32 u32;
	    struct w32Gbl_PDM_DI1Cntl;
		 } T32Gbl_PDM_DI1Cntl;
    typedef union  T32Gbl_I2S3_DOCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S3_DOCntl;
		 } T32Gbl_I2S3_DOCntl;
    typedef union  T32Gbl_I2S3_LRCKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S3_LRCKCntl;
		 } T32Gbl_I2S3_LRCKCntl;
    typedef union  T32Gbl_I2S3_BCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_I2S3_BCLKCntl;
		 } T32Gbl_I2S3_BCLKCntl;
    typedef union  T32Gbl_I2S3_DICntl {
		UNSG32 u32;
	    struct w32Gbl_I2S3_DICntl;
		 } T32Gbl_I2S3_DICntl;
    typedef union  T32Gbl_LCDD0Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD0Cntl;
		 } T32Gbl_LCDD0Cntl;
    typedef union  T32Gbl_LCDD1Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD1Cntl;
		 } T32Gbl_LCDD1Cntl;
    typedef union  T32Gbl_LCDD2Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD2Cntl;
		 } T32Gbl_LCDD2Cntl;
    typedef union  T32Gbl_LCDD3Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD3Cntl;
		 } T32Gbl_LCDD3Cntl;
    typedef union  T32Gbl_LCDD4Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD4Cntl;
		 } T32Gbl_LCDD4Cntl;
    typedef union  T32Gbl_LCDD5Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD5Cntl;
		 } T32Gbl_LCDD5Cntl;
    typedef union  T32Gbl_LCDD6Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD6Cntl;
		 } T32Gbl_LCDD6Cntl;
    typedef union  T32Gbl_LCDD7Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD7Cntl;
		 } T32Gbl_LCDD7Cntl;
    typedef union  T32Gbl_LCDD8Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD8Cntl;
		 } T32Gbl_LCDD8Cntl;
    typedef union  T32Gbl_LCDD9Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD9Cntl;
		 } T32Gbl_LCDD9Cntl;
    typedef union  T32Gbl_LCDD10Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD10Cntl;
		 } T32Gbl_LCDD10Cntl;
    typedef union  T32Gbl_LCDD11Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD11Cntl;
		 } T32Gbl_LCDD11Cntl;
    typedef union  T32Gbl_LCDD12Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD12Cntl;
		 } T32Gbl_LCDD12Cntl;
    typedef union  T32Gbl_LCDD13Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD13Cntl;
		 } T32Gbl_LCDD13Cntl;
    typedef union  T32Gbl_LCDD14Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD14Cntl;
		 } T32Gbl_LCDD14Cntl;
    typedef union  T32Gbl_LCDD15Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD15Cntl;
		 } T32Gbl_LCDD15Cntl;
    typedef union  T32Gbl_LCDD16Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD16Cntl;
		 } T32Gbl_LCDD16Cntl;
    typedef union  T32Gbl_LCDD17Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD17Cntl;
		 } T32Gbl_LCDD17Cntl;
    typedef union  T32Gbl_LCDD18Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD18Cntl;
		 } T32Gbl_LCDD18Cntl;
    typedef union  T32Gbl_LCDD19Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD19Cntl;
		 } T32Gbl_LCDD19Cntl;
    typedef union  T32Gbl_LCDD20Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD20Cntl;
		 } T32Gbl_LCDD20Cntl;
    typedef union  T32Gbl_LCDD21Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD21Cntl;
		 } T32Gbl_LCDD21Cntl;
    typedef union  T32Gbl_LCDD22Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD22Cntl;
		 } T32Gbl_LCDD22Cntl;
    typedef union  T32Gbl_LCDD23Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDD23Cntl;
		 } T32Gbl_LCDD23Cntl;
    typedef union  T32Gbl_LPCLKCntl {
		UNSG32 u32;
	    struct w32Gbl_LPCLKCntl;
		 } T32Gbl_LPCLKCntl;
    typedef union  T32Gbl_LCDGPIO0Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDGPIO0Cntl;
		 } T32Gbl_LCDGPIO0Cntl;
    typedef union  T32Gbl_LCDGPIO1Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDGPIO1Cntl;
		 } T32Gbl_LCDGPIO1Cntl;
    typedef union  T32Gbl_LCDGPIO2Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDGPIO2Cntl;
		 } T32Gbl_LCDGPIO2Cntl;
    typedef union  T32Gbl_LCDGPIO3Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDGPIO3Cntl;
		 } T32Gbl_LCDGPIO3Cntl;
    typedef union  T32Gbl_LCDGPIO4Cntl {
		UNSG32 u32;
	    struct w32Gbl_LCDGPIO4Cntl;
		 } T32Gbl_LCDGPIO4Cntl;
    ///////////////////////////////////////////////////////////

    typedef union  TGbl_ProductId {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_ProductId;
		   };
		 } TGbl_ProductId;
    typedef union  TGbl_ProductId_ext {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_ProductId_ext;
		   };
		 } TGbl_ProductId_ext;
    typedef union  TGbl_INT_ID {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_INT_ID;
		   };
		 } TGbl_INT_ID;
    typedef union  TGbl_bootStrap {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_bootStrap;
		   };
		 } TGbl_bootStrap;
    typedef union  TGbl_bootStrapEn {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_bootStrapEn;
		   };
		 } TGbl_bootStrapEn;
    typedef union  TGbl_pkgSel {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_pkgSel;
		   };
		 } TGbl_pkgSel;
    typedef union  TGbl_chipCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_chipCntl;
		   };
		 } TGbl_chipCntl;
    typedef union  TGbl_sw_generic0 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_sw_generic0;
		   };
		 } TGbl_sw_generic0;
    typedef union  TGbl_sw_generic1 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_sw_generic1;
		   };
		 } TGbl_sw_generic1;
    typedef union  TGbl_sw_generic2 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_sw_generic2;
		   };
		 } TGbl_sw_generic2;
    typedef union  TGbl_sw_generic3 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_sw_generic3;
		   };
		 } TGbl_sw_generic3;
    typedef union  TGbl_FPGAR {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_FPGAR;
		   };
		 } TGbl_FPGAR;
    typedef union  TGbl_FPGARW {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_FPGARW;
		   };
		 } TGbl_FPGARW;
    typedef union  TGbl_ResetTrigger {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_ResetTrigger;
		   };
		 } TGbl_ResetTrigger;
    typedef union  TGbl_ResetStatus {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_ResetStatus;
		   };
		 } TGbl_ResetStatus;
    typedef union  TGbl_WDTResetStatus {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_WDTResetStatus;
		   };
		 } TGbl_WDTResetStatus;
    typedef union  TGbl_WDTSysRstMask {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_WDTSysRstMask;
		   };
		 } TGbl_WDTSysRstMask;
    typedef union  TGbl_CHIP_RESET_TRACKER {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_CHIP_RESET_TRACKER;
		   };
		 } TGbl_CHIP_RESET_TRACKER;
    typedef union  TGbl_avioReset {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_avioReset;
		   };
		 } TGbl_avioReset;
    typedef union  TGbl_avioResetStatus {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_avioResetStatus;
		   };
		 } TGbl_avioResetStatus;
    typedef union  TGbl_perifReset {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_perifReset;
		   };
		 } TGbl_perifReset;
    typedef union  TGbl_perifResetStatus {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_perifResetStatus;
		   };
		 } TGbl_perifResetStatus;
    typedef union  TGbl_perifStickyResetN {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_perifStickyResetN;
		   };
		 } TGbl_perifStickyResetN;
    typedef union  TGbl_apbPerifResetTrigger {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_apbPerifResetTrigger;
		   };
		 } TGbl_apbPerifResetTrigger;
    typedef union  TGbl_apbPerifResetStatus {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_apbPerifResetStatus;
		   };
		 } TGbl_apbPerifResetStatus;
    typedef union  TGbl_topStickyResetN {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_topStickyResetN;
		   };
		 } TGbl_topStickyResetN;
    typedef union  TGbl_clkEnable {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_clkEnable;
		   };
		 } TGbl_clkEnable;
    typedef union  TGbl_ClkSwitch {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_ClkSwitch;
		   };
		 } TGbl_ClkSwitch;
    typedef union  TGbl_SECURE_SCAN_EN {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SECURE_SCAN_EN;
		   };
		 } TGbl_SECURE_SCAN_EN;
    typedef union  TGbl_gic400_ctrl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_gic400_ctrl;
		   };
		 } TGbl_gic400_ctrl;
    typedef union  TGbl_GFX_CTRL_0 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GFX_CTRL_0;
		   };
		 } TGbl_GFX_CTRL_0;
    typedef union  TGbl_GFX_CTRL_1 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GFX_CTRL_1;
		   };
		 } TGbl_GFX_CTRL_1;
    typedef union  TGbl_GFX_CTRL_2 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GFX_CTRL_2;
		   };
		 } TGbl_GFX_CTRL_2;
    typedef union  TGbl_GFX_CTRL_3 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GFX_CTRL_3;
		   };
		 } TGbl_GFX_CTRL_3;
    typedef union  TGbl_GFX_TIMER_VALUE {
		UNSG32 u32[2];
	    struct {
	    struct w32Gbl_GFX_TIMER_VALUE;
	    struct w32Gbl_GFX_TIMER_VALUE1;
		   };
		 } TGbl_GFX_TIMER_VALUE;
    typedef union  TGbl_GFX_STATUS {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GFX_STATUS;
		   };
		 } TGbl_GFX_STATUS;
    typedef union  TGbl_USBOTG_REFCLK_CTRL0 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_USBOTG_REFCLK_CTRL0;
		   };
		 } TGbl_USBOTG_REFCLK_CTRL0;
    typedef union  TGbl_USBOTG_REFCLK_CTRL1 {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_USBOTG_REFCLK_CTRL1;
		   };
		 } TGbl_USBOTG_REFCLK_CTRL1;
    typedef union  TGbl_I2S2_PORT_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S2_PORT_CTRL;
		   };
		 } TGbl_I2S2_PORT_CTRL;
    typedef union  TGbl_LCDD_IO_CTRL {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD_IO_CTRL;
		   };
		 } TGbl_LCDD_IO_CTRL;
    typedef union  TGbl_POR_EN_status {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_POR_EN_status;
		   };
		 } TGbl_POR_EN_status;
    typedef union  TGbl_POR_EN_OVRD {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_POR_EN_OVRD;
		   };
		 } TGbl_POR_EN_OVRD;
    typedef union  TGbl_POR_status {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_POR_status;
		   };
		 } TGbl_POR_status;
    typedef union  TGbl_POR_CTL {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_POR_CTL;
		   };
		 } TGbl_POR_CTL;
    typedef union  TGbl_pinMuxCntlBus {
		UNSG32 u32[10];
	    struct {
	    struct w32Gbl_pinMuxCntlBus;
	    struct w32Gbl_pinMuxCntlBus1;
	    struct w32Gbl_pinMuxCntlBus2;
	    struct w32Gbl_pinMuxCntlBus3;
	    struct w32Gbl_pinMuxCntlBus4;
	    struct w32Gbl_pinMuxCntlBus5;
	    struct w32Gbl_pinMuxCntlBus6;
	    struct w32Gbl_pinMuxCntlBus7;
	    struct w32Gbl_pinMuxCntlBus8;
	    struct w32Gbl_pinMuxCntlBus9;
		   };
		 } TGbl_pinMuxCntlBus;
    typedef union  TGbl_TW0_SCLCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW0_SCLCntl;
		   };
		 } TGbl_TW0_SCLCntl;
    typedef union  TGbl_TW0_SDACntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW0_SDACntl;
		   };
		 } TGbl_TW0_SDACntl;
    typedef union  TGbl_TW1_SCLCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW1_SCLCntl;
		   };
		 } TGbl_TW1_SCLCntl;
    typedef union  TGbl_TW1_SDACntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW1_SDACntl;
		   };
		 } TGbl_TW1_SDACntl;
    typedef union  TGbl_FORCE_MUTECntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_FORCE_MUTECntl;
		   };
		 } TGbl_FORCE_MUTECntl;
    typedef union  TGbl_TMSCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TMSCntl;
		   };
		 } TGbl_TMSCntl;
    typedef union  TGbl_TDICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TDICntl;
		   };
		 } TGbl_TDICntl;
    typedef union  TGbl_TDOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TDOCntl;
		   };
		 } TGbl_TDOCntl;
    typedef union  TGbl_SPI1_SS0nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SS0nCntl;
		   };
		 } TGbl_SPI1_SS0nCntl;
    typedef union  TGbl_SPI1_SS1nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SS1nCntl;
		   };
		 } TGbl_SPI1_SS1nCntl;
    typedef union  TGbl_SPI1_SS2nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SS2nCntl;
		   };
		 } TGbl_SPI1_SS2nCntl;
    typedef union  TGbl_SPI1_SS3nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SS3nCntl;
		   };
		 } TGbl_SPI1_SS3nCntl;
    typedef union  TGbl_SPI1_SDOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SDOCntl;
		   };
		 } TGbl_SPI1_SDOCntl;
    typedef union  TGbl_SPI1_SDICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SDICntl;
		   };
		 } TGbl_SPI1_SDICntl;
    typedef union  TGbl_SPI1_SCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI1_SCLKCntl;
		   };
		 } TGbl_SPI1_SCLKCntl;
    typedef union  TGbl_TW2_SCLCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW2_SCLCntl;
		   };
		 } TGbl_TW2_SCLCntl;
    typedef union  TGbl_TW2_SDACntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW2_SDACntl;
		   };
		 } TGbl_TW2_SDACntl;
    typedef union  TGbl_SPI2_SS0nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SS0nCntl;
		   };
		 } TGbl_SPI2_SS0nCntl;
    typedef union  TGbl_SPI2_SS1nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SS1nCntl;
		   };
		 } TGbl_SPI2_SS1nCntl;
    typedef union  TGbl_SPI2_SS2nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SS2nCntl;
		   };
		 } TGbl_SPI2_SS2nCntl;
    typedef union  TGbl_SPI2_SS3nCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SS3nCntl;
		   };
		 } TGbl_SPI2_SS3nCntl;
    typedef union  TGbl_SPI2_SDOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SDOCntl;
		   };
		 } TGbl_SPI2_SDOCntl;
    typedef union  TGbl_SPI2_SCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SCLKCntl;
		   };
		 } TGbl_SPI2_SCLKCntl;
    typedef union  TGbl_SPI2_SDICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SPI2_SDICntl;
		   };
		 } TGbl_SPI2_SDICntl;
    typedef union  TGbl_TW3_SCLCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW3_SCLCntl;
		   };
		 } TGbl_TW3_SCLCntl;
    typedef union  TGbl_TW3_SDACntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_TW3_SDACntl;
		   };
		 } TGbl_TW3_SDACntl;
    typedef union  TGbl_URT1_RXDCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_URT1_RXDCntl;
		   };
		 } TGbl_URT1_RXDCntl;
    typedef union  TGbl_URT1_TXDCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_URT1_TXDCntl;
		   };
		 } TGbl_URT1_TXDCntl;
    typedef union  TGbl_PWM0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PWM0Cntl;
		   };
		 } TGbl_PWM0Cntl;
    typedef union  TGbl_PWM1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PWM1Cntl;
		   };
		 } TGbl_PWM1Cntl;
    typedef union  TGbl_PWM2Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PWM2Cntl;
		   };
		 } TGbl_PWM2Cntl;
    typedef union  TGbl_PWM3Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PWM3Cntl;
		   };
		 } TGbl_PWM3Cntl;
    typedef union  TGbl_GPIO_A0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GPIO_A0Cntl;
		   };
		 } TGbl_GPIO_A0Cntl;
    typedef union  TGbl_GPIO_A1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GPIO_A1Cntl;
		   };
		 } TGbl_GPIO_A1Cntl;
    typedef union  TGbl_GPIO_A2Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GPIO_A2Cntl;
		   };
		 } TGbl_GPIO_A2Cntl;
    typedef union  TGbl_GPIO_A3Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_GPIO_A3Cntl;
		   };
		 } TGbl_GPIO_A3Cntl;
    typedef union  TGbl_USB2_DRV_VBUSCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_USB2_DRV_VBUSCntl;
		   };
		 } TGbl_USB2_DRV_VBUSCntl;
    typedef union  TGbl_SDIO_CDnCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SDIO_CDnCntl;
		   };
		 } TGbl_SDIO_CDnCntl;
    typedef union  TGbl_SDIO_WPCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_SDIO_WPCntl;
		   };
		 } TGbl_SDIO_WPCntl;
    typedef union  TGbl_NFALECntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_NFALECntl;
		   };
		 } TGbl_NFALECntl;
    typedef union  TGbl_NFLCSCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_NFLCSCntl;
		   };
		 } TGbl_NFLCSCntl;
    typedef union  TGbl_RGMII_CLK_OUTCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMII_CLK_OUTCntl;
		   };
		 } TGbl_RGMII_CLK_OUTCntl;
    typedef union  TGbl_RGMIITXCCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIITXCCntl;
		   };
		 } TGbl_RGMIITXCCntl;
    typedef union  TGbl_RGMIITD0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIITD0Cntl;
		   };
		 } TGbl_RGMIITD0Cntl;
    typedef union  TGbl_RGMIITD1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIITD1Cntl;
		   };
		 } TGbl_RGMIITD1Cntl;
    typedef union  TGbl_RGMIITD2Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIITD2Cntl;
		   };
		 } TGbl_RGMIITD2Cntl;
    typedef union  TGbl_RGMIITD3Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIITD3Cntl;
		   };
		 } TGbl_RGMIITD3Cntl;
    typedef union  TGbl_RGMIITXCTLCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIITXCTLCntl;
		   };
		 } TGbl_RGMIITXCTLCntl;
    typedef union  TGbl_RGMIIRXCCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIIRXCCntl;
		   };
		 } TGbl_RGMIIRXCCntl;
    typedef union  TGbl_RGMIIRD0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIIRD0Cntl;
		   };
		 } TGbl_RGMIIRD0Cntl;
    typedef union  TGbl_RGMIIRD1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIIRD1Cntl;
		   };
		 } TGbl_RGMIIRD1Cntl;
    typedef union  TGbl_RGMIIRD2Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIIRD2Cntl;
		   };
		 } TGbl_RGMIIRD2Cntl;
    typedef union  TGbl_RGMIIRD3Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIIRD3Cntl;
		   };
		 } TGbl_RGMIIRD3Cntl;
    typedef union  TGbl_RGMIIRXCTLCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RGMIIRXCTLCntl;
		   };
		 } TGbl_RGMIIRXCTLCntl;
    typedef union  TGbl_RCLKICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_RCLKICntl;
		   };
		 } TGbl_RCLKICntl;
    typedef union  TGbl_I2S1_DOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S1_DOCntl;
		   };
		 } TGbl_I2S1_DOCntl;
    typedef union  TGbl_I2S1_DICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S1_DICntl;
		   };
		 } TGbl_I2S1_DICntl;
    typedef union  TGbl_I2S1_LRCKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S1_LRCKCntl;
		   };
		 } TGbl_I2S1_LRCKCntl;
    typedef union  TGbl_I2S1_BCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S1_BCLKCntl;
		   };
		 } TGbl_I2S1_BCLKCntl;
    typedef union  TGbl_I2S1_MCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S1_MCLKCntl;
		   };
		 } TGbl_I2S1_MCLKCntl;
    typedef union  TGbl_I2S2_LRCKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S2_LRCKCntl;
		   };
		 } TGbl_I2S2_LRCKCntl;
    typedef union  TGbl_I2S2_BCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S2_BCLKCntl;
		   };
		 } TGbl_I2S2_BCLKCntl;
    typedef union  TGbl_I2S2_DOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S2_DOCntl;
		   };
		 } TGbl_I2S2_DOCntl;
    typedef union  TGbl_I2S2_DICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S2_DICntl;
		   };
		 } TGbl_I2S2_DICntl;
    typedef union  TGbl_PDM_CLKIOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PDM_CLKIOCntl;
		   };
		 } TGbl_PDM_CLKIOCntl;
    typedef union  TGbl_PDM_DI0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PDM_DI0Cntl;
		   };
		 } TGbl_PDM_DI0Cntl;
    typedef union  TGbl_PDM_DI1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_PDM_DI1Cntl;
		   };
		 } TGbl_PDM_DI1Cntl;
    typedef union  TGbl_I2S3_DOCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S3_DOCntl;
		   };
		 } TGbl_I2S3_DOCntl;
    typedef union  TGbl_I2S3_LRCKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S3_LRCKCntl;
		   };
		 } TGbl_I2S3_LRCKCntl;
    typedef union  TGbl_I2S3_BCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S3_BCLKCntl;
		   };
		 } TGbl_I2S3_BCLKCntl;
    typedef union  TGbl_I2S3_DICntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_I2S3_DICntl;
		   };
		 } TGbl_I2S3_DICntl;
    typedef union  TGbl_LCDD0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD0Cntl;
		   };
		 } TGbl_LCDD0Cntl;
    typedef union  TGbl_LCDD1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD1Cntl;
		   };
		 } TGbl_LCDD1Cntl;
    typedef union  TGbl_LCDD2Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD2Cntl;
		   };
		 } TGbl_LCDD2Cntl;
    typedef union  TGbl_LCDD3Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD3Cntl;
		   };
		 } TGbl_LCDD3Cntl;
    typedef union  TGbl_LCDD4Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD4Cntl;
		   };
		 } TGbl_LCDD4Cntl;
    typedef union  TGbl_LCDD5Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD5Cntl;
		   };
		 } TGbl_LCDD5Cntl;
    typedef union  TGbl_LCDD6Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD6Cntl;
		   };
		 } TGbl_LCDD6Cntl;
    typedef union  TGbl_LCDD7Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD7Cntl;
		   };
		 } TGbl_LCDD7Cntl;
    typedef union  TGbl_LCDD8Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD8Cntl;
		   };
		 } TGbl_LCDD8Cntl;
    typedef union  TGbl_LCDD9Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD9Cntl;
		   };
		 } TGbl_LCDD9Cntl;
    typedef union  TGbl_LCDD10Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD10Cntl;
		   };
		 } TGbl_LCDD10Cntl;
    typedef union  TGbl_LCDD11Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD11Cntl;
		   };
		 } TGbl_LCDD11Cntl;
    typedef union  TGbl_LCDD12Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD12Cntl;
		   };
		 } TGbl_LCDD12Cntl;
    typedef union  TGbl_LCDD13Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD13Cntl;
		   };
		 } TGbl_LCDD13Cntl;
    typedef union  TGbl_LCDD14Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD14Cntl;
		   };
		 } TGbl_LCDD14Cntl;
    typedef union  TGbl_LCDD15Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD15Cntl;
		   };
		 } TGbl_LCDD15Cntl;
    typedef union  TGbl_LCDD16Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD16Cntl;
		   };
		 } TGbl_LCDD16Cntl;
    typedef union  TGbl_LCDD17Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD17Cntl;
		   };
		 } TGbl_LCDD17Cntl;
    typedef union  TGbl_LCDD18Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD18Cntl;
		   };
		 } TGbl_LCDD18Cntl;
    typedef union  TGbl_LCDD19Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD19Cntl;
		   };
		 } TGbl_LCDD19Cntl;
    typedef union  TGbl_LCDD20Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD20Cntl;
		   };
		 } TGbl_LCDD20Cntl;
    typedef union  TGbl_LCDD21Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD21Cntl;
		   };
		 } TGbl_LCDD21Cntl;
    typedef union  TGbl_LCDD22Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD22Cntl;
		   };
		 } TGbl_LCDD22Cntl;
    typedef union  TGbl_LCDD23Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDD23Cntl;
		   };
		 } TGbl_LCDD23Cntl;
    typedef union  TGbl_LPCLKCntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LPCLKCntl;
		   };
		 } TGbl_LPCLKCntl;
    typedef union  TGbl_LCDGPIO0Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDGPIO0Cntl;
		   };
		 } TGbl_LCDGPIO0Cntl;
    typedef union  TGbl_LCDGPIO1Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDGPIO1Cntl;
		   };
		 } TGbl_LCDGPIO1Cntl;
    typedef union  TGbl_LCDGPIO2Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDGPIO2Cntl;
		   };
		 } TGbl_LCDGPIO2Cntl;
    typedef union  TGbl_LCDGPIO3Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDGPIO3Cntl;
		   };
		 } TGbl_LCDGPIO3Cntl;
    typedef union  TGbl_LCDGPIO4Cntl {
		UNSG32 u32[1];
	    struct {
	    struct w32Gbl_LCDGPIO4Cntl;
		   };
		 } TGbl_LCDGPIO4Cntl;

    ///////////////////////////////////////////////////////////
     SIGN32 Gbl_drvrd(SIE_Gbl *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 Gbl_drvwr(SIE_Gbl *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void Gbl_reset(SIE_Gbl *p);
     SIGN32 Gbl_cmp(SIE_Gbl *p, SIE_Gbl *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define Gbl_check(p, pie, pfx, hLOG) Gbl_cmp(p, pie, pfx, (void *)(hLOG), 0, 0)
    #define Gbl_print(p,    pfx, hLOG) Gbl_cmp(p, 0,  pfx, (void *)(hLOG), 0, 0)

#endif
//////
/// ENDOFINTERFACE: Gbl
////////////////////////////////////////////////////////////

#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: global.h
////////////////////////////////////////////////////////////
